{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Deis Workflow\n\u00b6\n\n\nDeis (pronounced DAY-iss) Workflow is an open source Platform as a Service (PaaS) that adds a\ndeveloper-friendly layer to any Kubernetes cluster, making it easy to deploy and manage\napplications.\n\n\nDeis Workflow includes capabilities for building and deploying from source via \ngit push\n, simple\napplication configuration, creating and rolling back releases, managing domain names and SSL\ncertificates, providing seamless edge routing, aggregating logs, and sharing applications with\nteams. All of this is exposed through a simple REST API and command line interface.\n\n\nPlease note that this documentation is for Deis Workflow (v2). For v1 documentation visit\n\nhttp://docs.deis.io/en/latest/\n.\n\n\nGetting Started\n\u00b6\n\n\nTo get started with Workflow, follow our \nQuick Start\n guide.\n\n\nTake a deep dive into Deis Workflow in our \nConcepts\n, \nArchitecture\n, and\n\nComponents\n sections.\n\n\nFeel like contibuting some code or want to get started as a maintainer? Pick an issue tagged as an\n\neasy fix\n or \nhelp wanted\n and start contributing!\n\n\nService and Support\n\u00b6\n\n\nIf you are interested in commercial service and support for Deis Workflow, check out the various\n\nservices offerings on deis.com\n.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-deis-workflow",
            "text": "Deis (pronounced DAY-iss) Workflow is an open source Platform as a Service (PaaS) that adds a\ndeveloper-friendly layer to any Kubernetes cluster, making it easy to deploy and manage\napplications.  Deis Workflow includes capabilities for building and deploying from source via  git push , simple\napplication configuration, creating and rolling back releases, managing domain names and SSL\ncertificates, providing seamless edge routing, aggregating logs, and sharing applications with\nteams. All of this is exposed through a simple REST API and command line interface.  Please note that this documentation is for Deis Workflow (v2). For v1 documentation visit http://docs.deis.io/en/latest/ .",
            "title": "Welcome to Deis Workflow"
        },
        {
            "location": "/#getting-started",
            "text": "To get started with Workflow, follow our  Quick Start  guide.  Take a deep dive into Deis Workflow in our  Concepts ,  Architecture , and Components  sections.  Feel like contibuting some code or want to get started as a maintainer? Pick an issue tagged as an easy fix  or  help wanted  and start contributing!",
            "title": "Getting Started"
        },
        {
            "location": "/#service-and-support",
            "text": "If you are interested in commercial service and support for Deis Workflow, check out the various services offerings on deis.com .",
            "title": "Service and Support"
        },
        {
            "location": "/quickstart/",
            "text": "Quick Start\n\u00b6\n\n\nGet started with Deis Workflow in three easy steps.\n\n\n\n\nInstall CLI tools for Helm and Deis Workflow\n\n\nBoot a Kubernetes and install Deis Workflow\n\n\nDeploy your first application\n\n\n\n\nThis guide will help you set up a cluster suitable for evaluation, development and testing. When you are ready for staging and production, view our \nproduction checklist\n.\n\n\nStep 1: Install CLI tools\n\u00b6\n\n\nFor the quickstart we will \ninstall both Helm and Deis Workflow CLI\n.\n\n\nStep 2: Boot Kubernetes and Install Deis Workflow\n\u00b6\n\n\nThere are many ways to boot and run Kubernetes. You may choose to get up and running in cloud environments or locally on\nyour laptop.\n\n\nCloud-based options:\n\n\n\n\nGoogle Container Engine\n: provides a managed Kubernetes environment, available with a few clicks.\n\n\nAmazon Web Services\n: uses Kubernetes upstream \nkube-up.sh\n to boot a cluster on AWS EC2.\n\n\nAzure Container Service\n: uses Azure Container Service to provision Kubernetes and install Workflow.\n\n\n\n\nIf you would like to test on your local machine follow, our guide for \nMinikube\n.\n\n\nIf you have already created a Kubernetes cluster, check out the \nsystem requirements\n and then proceed to \ninstall Deis Workflow on your own Kubernetes cluster\n.\n\n\nStep 3: Deploy your first app\n\u00b6\n\n\nLast but not least, \nregister a user and deploy your first application\n.",
            "title": "Overview"
        },
        {
            "location": "/quickstart/#quick-start",
            "text": "Get started with Deis Workflow in three easy steps.   Install CLI tools for Helm and Deis Workflow  Boot a Kubernetes and install Deis Workflow  Deploy your first application   This guide will help you set up a cluster suitable for evaluation, development and testing. When you are ready for staging and production, view our  production checklist .",
            "title": "Quick Start"
        },
        {
            "location": "/quickstart/#step-1-install-cli-tools",
            "text": "For the quickstart we will  install both Helm and Deis Workflow CLI .",
            "title": "Step 1: Install CLI tools"
        },
        {
            "location": "/quickstart/#step-2-boot-kubernetes-and-install-deis-workflow",
            "text": "There are many ways to boot and run Kubernetes. You may choose to get up and running in cloud environments or locally on\nyour laptop.  Cloud-based options:   Google Container Engine : provides a managed Kubernetes environment, available with a few clicks.  Amazon Web Services : uses Kubernetes upstream  kube-up.sh  to boot a cluster on AWS EC2.  Azure Container Service : uses Azure Container Service to provision Kubernetes and install Workflow.   If you would like to test on your local machine follow, our guide for  Minikube .  If you have already created a Kubernetes cluster, check out the  system requirements  and then proceed to  install Deis Workflow on your own Kubernetes cluster .",
            "title": "Step 2: Boot Kubernetes and Install Deis Workflow"
        },
        {
            "location": "/quickstart/#step-3-deploy-your-first-app",
            "text": "Last but not least,  register a user and deploy your first application .",
            "title": "Step 3: Deploy your first app"
        },
        {
            "location": "/quickstart/install-cli-tools/",
            "text": "Deis Workflow Client CLI\n\u00b6\n\n\nThe Deis command-line interface (CLI), lets you interact with Deis Workflow.\nUse the CLI to create and configure and manage applications.\n\n\nInstall the latest \ndeis\n client for Linux or Mac OS X with:\n\n\n$ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash\n\n\n\n\nThe installer places the \ndeis\n binary in your current directory, but you\nshould move it somewhere in your $PATH:\n\n\n$ sudo ln -fs $PWD/deis /usr/local/bin/deis\n\n\n\n\nor\n:\n\n\n$ sudo mv $PWD/deis /usr/local/bin/deis\n\n\n\n\nCheck your work by running \ndeis version\n:\n\n\n$ deis version\nv2.17.0\n\n\n\n\n\n\nNote\n\n\nNote that version numbers may vary as new releases become available\n\n\n\n\nHelm Installation\n\u00b6\n\n\nWe will install Deis Workflow using Helm which is a tool for installing and managing software in a\nKubernetes cluster.\n\n\nInstall the latest \nhelm\n cli for Linux or Mac OS X by following the\n\ninstallation instructions\n.\n\n\nStep 2: Boot a Kubernetes Cluster and Install Deis Workflow\n\u00b6\n\n\nThere are many ways to boot and run Kubernetes. You may choose to get up and running in cloud environments or locally on your laptop.\n\n\nCloud-based options:\n\n\n\n\nGoogle Container Engine\n: provides a managed Kubernetes environment, available with a few clicks.\n\n\nAmazon Web Services\n: uses Kubernetes upstream \nkops\n to boot a cluster on AWS EC2.\n\n\nAzure Container Service\n: provides a managed Kubernetes environment.\n\n\n\n\nIf you would like to test on your local machine follow our guide for \nMinikube\n.",
            "title": "Install CLI Tools"
        },
        {
            "location": "/quickstart/install-cli-tools/#deis-workflow-client-cli",
            "text": "The Deis command-line interface (CLI), lets you interact with Deis Workflow.\nUse the CLI to create and configure and manage applications.  Install the latest  deis  client for Linux or Mac OS X with:  $ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash  The installer places the  deis  binary in your current directory, but you\nshould move it somewhere in your $PATH:  $ sudo ln -fs $PWD/deis /usr/local/bin/deis  or :  $ sudo mv $PWD/deis /usr/local/bin/deis  Check your work by running  deis version :  $ deis version\nv2.17.0   Note  Note that version numbers may vary as new releases become available",
            "title": "Deis Workflow Client CLI"
        },
        {
            "location": "/quickstart/install-cli-tools/#helm-installation",
            "text": "We will install Deis Workflow using Helm which is a tool for installing and managing software in a\nKubernetes cluster.  Install the latest  helm  cli for Linux or Mac OS X by following the installation instructions .",
            "title": "Helm Installation"
        },
        {
            "location": "/quickstart/install-cli-tools/#step-2-boot-a-kubernetes-cluster-and-install-deis-workflow",
            "text": "There are many ways to boot and run Kubernetes. You may choose to get up and running in cloud environments or locally on your laptop.  Cloud-based options:   Google Container Engine : provides a managed Kubernetes environment, available with a few clicks.  Amazon Web Services : uses Kubernetes upstream  kops  to boot a cluster on AWS EC2.  Azure Container Service : provides a managed Kubernetes environment.   If you would like to test on your local machine follow our guide for  Minikube .",
            "title": "Step 2: Boot a Kubernetes Cluster and Install Deis Workflow"
        },
        {
            "location": "/quickstart/provider/aws/boot/",
            "text": "Booting Kubernetes on Amazon Elastic Compute with kops\n\u00b6\n\n\nAmazon Elastic Compute Cloud (Amazon EC2) is a web service that provides compute capacity in the cloud. This quickstart\nguide uses AWS EC2 to boot a Kubernetes cluster using \nkubernetes kops\n.\n\n\nInstalling kops\n\u00b6\n\n\nDownload the \nlatest\n version of kops\n\n\nmacOS\n\u00b6\n\n\n$ curl -sSL https://github.com/kubernetes/kops/releases/download/1.5.3/kops-darwin-amd64 -O\n$ chmod +x kops-darwin-amd64\n$ sudo mv kops-darwin-amd64 /usr/local/bin/kops\n\n\n\n\nlinux\n\u00b6\n\n\n$ curl -sSL https://github.com/kubernetes/kops/releases/download/1.5.3/kops-linux-amd64 -O\n$ chmod +x kops-linux-amd64\n$ sudo mv kops-linux-amd64 /usr/local/bin/kops\n\n\n\n\nFor more information see the official \nkops installation guide\n.\n\n\nValidate kops is installed\n\u00b6\n\n\n$ kops version\nVersion 1.5.3\n\n\n\n\nInstall kubectl if you haven't done so yet\n\u00b6\n\n\n$ curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\n$ chmod +x kubectl\n$ sudo mv kubectl /usr/local/bin/\n\n\n\n\nSetup your AWS account\n\u00b6\n\n\nInstall the \nawscli\n tool\n\u00b6\n\n\nThe officially supported way of installing the tool is with \npip\n as in\n\n\n$ pip install awscli\n\n\n\n\nYou can also grab the tool with homebrew (for macOS users \nonly\n), although this is not officially supported by AWS.\n\n\n$ brew update && brew install awscli\n\n\n\n\nConfigure the \nawscli\n tool\n\u00b6\n\n\nThe first thing you need to do is get valid AWS credentials out of the console. See \nthe official documentation\n on how to find your \nSecretAccessKey\n and \nAccessKeyID\n.\n\n\nOnce you have those you can configure the \nawscli\n tool with\n\n\n$ aws configure # Input your credentials here\n\n\n\n\nSetting up IAM permission for kops\n\u00b6\n\n\nThe recommended practice is to use a dedicated IAM user for kops. At a minimum \nkops\n will require the following IAM permissions to function properly.\n\n\n\n\nAmazonEC2FullAccess\n\n\nThis is used to deploy to instances in EC2\n\n\n\n\n\n\nAmazonRoute53FullAccess\n\n\nThis is used so kops can automatically create friendly DNS records for your cluster resources\n\n\n\n\n\n\nAmazonS3FullAccess\n\n\nThis is used to store meta configuration about your cluster. We will need read/write here to use S3 as a virtual filesystem in kops.\n\n\n\n\n\n\nIAMFullAccess\n\n\nThis is used because kops will create new IAM users for some of its resources. Those resources will have permissions managed securely by kops.\n\n\n\n\n\n\nAmazonVPCFullAccess\n\n\nThis used to create a VPC which serves as the foundation of all networking components in kops. Without a VPC, kops wouldn't be able to deploy any resources dependent on a network.\n\n\n\n\n\n\n\n\n(Optional) Create a dedicated IAM user from the command line\n\u00b6\n\n\nNote\n: This can only be done \nAFTER\n you already have valid aws credentials in place. We will use the official \nkops\n provided convenience script to configure a new user with the following syntax: \nsh new-iam-user.sh $group $user\n\n\n$ curl -O https://raw.githubusercontent.com/kubernetes/kops/master/hack/new-iam-user.sh\n$ sh new-iam-user.sh kops-group kops-user\n\n\n\n\nNote the \nSecretAccessKey\n and \nAccessKeyID\n so you can enter them in the following commands\n\n\n$ aws configure # Input your credentials here\n$ aws iam list-users\n\n\n\n\nConfigure DNS\n\u00b6\n\n\nIn order to build a Kubernetes cluster with \nkops\n, we need to prepare\nsomewhere to build the required DNS records.  There are three scenarios\nbelow and you should choose the one that most closely matches your AWS\nsituation.\n\n\nScenario 1a: A Domain purchased/hosted via AWS\n\u00b6\n\n\nIf you bought your domain with AWS, then you should already have a hosted zone\nin Route53.  If you plan to use this domain then no more work is needed.\n\n\nIn this example you own \nexample.com\n and your records for Kubernetes would\nlook like \netcd-us-east-1c.internal.clustername.example.com\n\n\nYou can now skip to \ntesting your DNS setup\n\n\nScenario 1b: A subdomain under a domain purchased/hosted via AWS\n\u00b6\n\n\nIn this scenario you want to contain all kubernetes records under a subdomain\nof a domain you host in Route53.  This requires creating a second hosted zone\nin route53, and then setting up route delegation to the new zone.\n\n\nIn this example you own \nexample.com\n and your records for Kubernetes would\nlook like \netcd-us-east-1c.internal.clustername.kubernetes.example.com\n\n\nThis is copying the NS servers of your \nSUBDOMAIN\n up to the \nPARENT\n\ndomain in Route53.  To do this you should:\n\n\n$ ID=$(uuidgen) && aws route53 create-hosted-zone --name subdomain.example.com --caller-reference $ID | jq .DelegationSet.NameServers\n\n\n\n\n\n\nNote your \nPARENT\n hosted zone ID\n\n\n\n\n# Note: This example assumes you have jq installed locally.\naws route53 list-hosted-zones | jq '.HostedZones[] | select(.Name==\"example.com.\") | .Id'\n\n\n\n\n\n\nCreate a new JSON file with your values (\nsubdomain.json\n)\n\n\n\n\nNote: The NS values here are for the \nSUBDOMAIN\n\n\n{\n  \"Comment\": \"Create a subdomain NS record in the parent domain\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"subdomain.example.com\",\n        \"Type\": \"NS\",\n        \"TTL\": 300,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"ns-1.awsdns-1.co.uk\"\n          },\n          {\n            \"Value\": \"ns-2.awsdns-2.org\"\n          },\n          {\n            \"Value\": \"ns-3.awsdns-3.com\"\n          },\n          {\n            \"Value\": \"ns-4.awsdns-4.net\"\n          }\n        ]\n      }\n    }\n  ]\n}\n\n\n\n\n\n\nApply the \nSUBDOMAIN\n NS records to the \nPARENT\n hosted zone.\n\n\n\n\n$ aws route53 change-resource-record-sets \\\n --hosted-zone-id <parent-zone-id> \\\n --change-batch file://subdomain.json\n\n\n\n\nNow traffic to \n*.example.com\n will be routed to the correct subdomain hosted zone in Route53.\n\n\nYou can now skip to \ntesting your DNS setup\n\n\nScenario 2: Setting up Route53 for a domain purchased with another registrar\n\u00b6\n\n\nIf you bought your domain elsewhere, and would like to dedicate the entire domain to AWS you should follow the guide \nhere\n\n\nYou can now skip to \ntesting your DNS setup\n\n\nScenario 3: Subdomain for clusters in route53, leaving the domain at another registrar\n\u00b6\n\n\nIf you bought your domain elsewhere, but \nonly want to use a subdomain in AWS\nRoute53\n you must modify your registrar's NS (NameServer) records.  We'll create\na hosted zone in Route53, and then migrate the subdomain's NS records to your\nother registrar.\n\n\nYou might need to install \njq\n\nfor some of these instructions.\n\n\n$ ID=$(uuidgen) && aws route53 create-hosted-zone --name subdomain.kubernetes.com --caller-reference $ID | jq .DelegationSet.NameServers\n\n\n\n\n\n\n\n\nYou will now go to your registrar's page and log in. You will need to create a\n  new \nSUBDOMAIN\n, and use the 4 NS records listed above for the new\n  \nSUBDOMAIN\n. This \nMUST\n be done in order to use your cluster. Do \nNOT\n\n  change your top level NS record, or you might take your site offline.\n\n\n\n\n\n\nInformation on adding NS records with\n  \nGodaddy.com\n\n\n\n\nInformation on adding NS records with \nGoogle Cloud\n  Platform\n\n\n\n\nYou can now skip to \ntesting your DNS setup\n\n\nUsing Public/Private DNS (Kops 1.5+)\n\u00b6\n\n\nBy default the assumption is that NS records are publically available.  If you\nrequire private DNS records you should modify the commands we run later in this\nguide to include:\n\n\n$ kops create cluster --dns private $NAME\n\n\n\n\nTesting your DNS setup\n\u00b6\n\n\nYou should now able to \ndig\n your domain (or subdomain) and see the AWS Name\nServers on the other end.\n\n\n$ dig ns subdomain.example.com\n\n\n\n\nShould return something similar to:\n\n\n;; ANSWER SECTION:\nsubdomain.example.com.        172800  IN  NS  ns-1.awsdns-1.net.\nsubdomain.example.com.        172800  IN  NS  ns-2.awsdns-2.org.\nsubdomain.example.com.        172800  IN  NS  ns-3.awsdns-3.com.\nsubdomain.example.com.        172800  IN  NS  ns-4.awsdns-4.co.uk.\n\n\n\n\nThis is a critical component of setting up clusters. If you are experiencing\nproblems with the Kubernetes API not coming up, chances are something is wrong\nwith the cluster's DNS.\n\n\nPlease DO NOT MOVE ON until you have validated your NS records!\n\n\nCluster State storage\n\u00b6\n\n\nIn order to store the state of your cluster, and the representation of your\ncluster, we need to create a dedicated S3 bucket for \nkops\n to use.  This\nbucket will become the source of truth for our cluster configuration.  In\nthis guide we'll call this bucket \nexample-com-state-store\n, but you should\nadd a custom prefix as bucket names need to be unique.\n\n\nWe recommend keeping the creation of this bucket confined to us-east-1,\notherwise more work will be required.\n\n\n$ aws s3api create-bucket --bucket prefix-example-com-state-store --region us-east-1\n\n\n\n\nNote: We \nSTRONGLY\n recommend versioning your S3 bucket in case you ever need\nto revert or recover a previous state store.\n\n\n$ aws s3api put-bucket-versioning --bucket prefix-example-com-state-store  --versioning-configuration Status=Enabled\n\n\n\n\nCreating your first cluster\n\u00b6\n\n\nPrepare local environment\n\u00b6\n\n\nWe're ready to start creating our first cluster!  Let's first setup a few\nenvironment variables to make this process easier.\n\n\n$ export NAME=myfirstcluster.example.com\n$ export KOPS_STATE_STORE=s3://prefix-example-com-state-store\n\n\n\n\nNote: You don\u2019t have to use environmental variables here. You can always define\nthe values using the \n\u2013name\n and \n\u2013state\n flags later.\n\n\nCreate cluster configuration\n\u00b6\n\n\nWe will need to note which availability zones are available to us. In this\nexample we will be deploying our cluster to the us-west-2 region.\n\n\n$ aws ec2 describe-availability-zones --region us-west-2\n\n\n\n\nBelow is a basic create cluster command. The\nbelow command will generate a cluster configuration, but not start building it.\n\n\n$ kops create cluster \\\n    --zones us-west-2a \\\n    ${NAME}\n\n\n\n\nAll instances created by \nkops\n will be built within ASG (Auto Scaling Groups),\nwhich means each instance will be automatically monitored and rebuilt by AWS if\nit suffers any failure.\n\n\nCustomize Cluster Configuration\n\u00b6\n\n\nNow we have a cluster configuration, we can look at every aspect that defines\nour cluster by editing the description.\n\n\n$ kops edit cluster ${NAME}\n\n\n\n\nThis opens your editor (as defined by $EDITOR) and allows you to edit the\nconfiguration.  The configuration is loaded from the S3 bucket we created\nearlier, and automatically updated when we save and exit the editor.\n\n\nWe'll leave everything set to the defaults for now, but the rest of the \nkops\n\ndocumentation covers additional settings and configuration you can enable.\n\n\nBuild the Cluster\n\u00b6\n\n\nNow we take the final step of actually building the cluster.  This'll take a\nwhile.  Once it finishes you'll have to wait longer while the booted instances\nfinish downloading Kubernetes components and reach a \"ready\" state.\n\n\n$ kops update cluster ${NAME} --yes\n\n\n\n\nUse the Cluster\n\u00b6\n\n\nRemember when you installed \nkubectl\n earlier? The configuration for your\ncluster was automatically generated and written to \n~/.kube/config\n for you!\n\n\nOptionally you can always pull the configuration with the following command:\n\n\n$ kops export kubecfg --name ${NAME}\n\n\n\n\nA simple Kubernetes API call can be used to check if the API is online and\nlistening. Let's use \nkubectl\n to check the nodes.\n\n\n$ kubectl get nodes\n\n\n\n\nYou will see a list of nodes that should match the \n--zones\n flag defined\nearlier. This is a great sign that your Kubernetes cluster is online and\nworking.\n\n\nAlso \nkops\n ships with a handy validation tool that can be ran to ensure your\ncluster is working as expected.\n\n\n$ kubectl cluster-info\n\n\n\n\nYou can look at all the system components with the following command.\n\n\n$ kubectl -n kube-system get po\n\n\n\n\nYou are now ready to \ninstall Deis Workflow",
            "title": "Boot"
        },
        {
            "location": "/quickstart/provider/aws/boot/#booting-kubernetes-on-amazon-elastic-compute-with-kops",
            "text": "Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides compute capacity in the cloud. This quickstart\nguide uses AWS EC2 to boot a Kubernetes cluster using  kubernetes kops .",
            "title": "Booting Kubernetes on Amazon Elastic Compute with kops"
        },
        {
            "location": "/quickstart/provider/aws/boot/#installing-kops",
            "text": "Download the  latest  version of kops",
            "title": "Installing kops"
        },
        {
            "location": "/quickstart/provider/aws/boot/#macos",
            "text": "$ curl -sSL https://github.com/kubernetes/kops/releases/download/1.5.3/kops-darwin-amd64 -O\n$ chmod +x kops-darwin-amd64\n$ sudo mv kops-darwin-amd64 /usr/local/bin/kops",
            "title": "macOS"
        },
        {
            "location": "/quickstart/provider/aws/boot/#linux",
            "text": "$ curl -sSL https://github.com/kubernetes/kops/releases/download/1.5.3/kops-linux-amd64 -O\n$ chmod +x kops-linux-amd64\n$ sudo mv kops-linux-amd64 /usr/local/bin/kops  For more information see the official  kops installation guide .",
            "title": "linux"
        },
        {
            "location": "/quickstart/provider/aws/boot/#validate-kops-is-installed",
            "text": "$ kops version\nVersion 1.5.3",
            "title": "Validate kops is installed"
        },
        {
            "location": "/quickstart/provider/aws/boot/#install-kubectl-if-you-havent-done-so-yet",
            "text": "$ curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\n$ chmod +x kubectl\n$ sudo mv kubectl /usr/local/bin/",
            "title": "Install kubectl if you haven't done so yet"
        },
        {
            "location": "/quickstart/provider/aws/boot/#setup-your-aws-account",
            "text": "",
            "title": "Setup your AWS account"
        },
        {
            "location": "/quickstart/provider/aws/boot/#install-the-awscli-tool",
            "text": "The officially supported way of installing the tool is with  pip  as in  $ pip install awscli  You can also grab the tool with homebrew (for macOS users  only ), although this is not officially supported by AWS.  $ brew update && brew install awscli",
            "title": "Install the awscli tool"
        },
        {
            "location": "/quickstart/provider/aws/boot/#configure-the-awscli-tool",
            "text": "The first thing you need to do is get valid AWS credentials out of the console. See  the official documentation  on how to find your  SecretAccessKey  and  AccessKeyID .  Once you have those you can configure the  awscli  tool with  $ aws configure # Input your credentials here",
            "title": "Configure the awscli tool"
        },
        {
            "location": "/quickstart/provider/aws/boot/#setting-up-iam-permission-for-kops",
            "text": "The recommended practice is to use a dedicated IAM user for kops. At a minimum  kops  will require the following IAM permissions to function properly.   AmazonEC2FullAccess  This is used to deploy to instances in EC2    AmazonRoute53FullAccess  This is used so kops can automatically create friendly DNS records for your cluster resources    AmazonS3FullAccess  This is used to store meta configuration about your cluster. We will need read/write here to use S3 as a virtual filesystem in kops.    IAMFullAccess  This is used because kops will create new IAM users for some of its resources. Those resources will have permissions managed securely by kops.    AmazonVPCFullAccess  This used to create a VPC which serves as the foundation of all networking components in kops. Without a VPC, kops wouldn't be able to deploy any resources dependent on a network.",
            "title": "Setting up IAM permission for kops"
        },
        {
            "location": "/quickstart/provider/aws/boot/#optional-create-a-dedicated-iam-user-from-the-command-line",
            "text": "Note : This can only be done  AFTER  you already have valid aws credentials in place. We will use the official  kops  provided convenience script to configure a new user with the following syntax:  sh new-iam-user.sh $group $user  $ curl -O https://raw.githubusercontent.com/kubernetes/kops/master/hack/new-iam-user.sh\n$ sh new-iam-user.sh kops-group kops-user  Note the  SecretAccessKey  and  AccessKeyID  so you can enter them in the following commands  $ aws configure # Input your credentials here\n$ aws iam list-users",
            "title": "(Optional) Create a dedicated IAM user from the command line"
        },
        {
            "location": "/quickstart/provider/aws/boot/#configure-dns",
            "text": "In order to build a Kubernetes cluster with  kops , we need to prepare\nsomewhere to build the required DNS records.  There are three scenarios\nbelow and you should choose the one that most closely matches your AWS\nsituation.",
            "title": "Configure DNS"
        },
        {
            "location": "/quickstart/provider/aws/boot/#scenario-1a-a-domain-purchasedhosted-via-aws",
            "text": "If you bought your domain with AWS, then you should already have a hosted zone\nin Route53.  If you plan to use this domain then no more work is needed.  In this example you own  example.com  and your records for Kubernetes would\nlook like  etcd-us-east-1c.internal.clustername.example.com  You can now skip to  testing your DNS setup",
            "title": "Scenario 1a: A Domain purchased/hosted via AWS"
        },
        {
            "location": "/quickstart/provider/aws/boot/#scenario-1b-a-subdomain-under-a-domain-purchasedhosted-via-aws",
            "text": "In this scenario you want to contain all kubernetes records under a subdomain\nof a domain you host in Route53.  This requires creating a second hosted zone\nin route53, and then setting up route delegation to the new zone.  In this example you own  example.com  and your records for Kubernetes would\nlook like  etcd-us-east-1c.internal.clustername.kubernetes.example.com  This is copying the NS servers of your  SUBDOMAIN  up to the  PARENT \ndomain in Route53.  To do this you should:  $ ID=$(uuidgen) && aws route53 create-hosted-zone --name subdomain.example.com --caller-reference $ID | jq .DelegationSet.NameServers   Note your  PARENT  hosted zone ID   # Note: This example assumes you have jq installed locally.\naws route53 list-hosted-zones | jq '.HostedZones[] | select(.Name==\"example.com.\") | .Id'   Create a new JSON file with your values ( subdomain.json )   Note: The NS values here are for the  SUBDOMAIN  {\n  \"Comment\": \"Create a subdomain NS record in the parent domain\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"subdomain.example.com\",\n        \"Type\": \"NS\",\n        \"TTL\": 300,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"ns-1.awsdns-1.co.uk\"\n          },\n          {\n            \"Value\": \"ns-2.awsdns-2.org\"\n          },\n          {\n            \"Value\": \"ns-3.awsdns-3.com\"\n          },\n          {\n            \"Value\": \"ns-4.awsdns-4.net\"\n          }\n        ]\n      }\n    }\n  ]\n}   Apply the  SUBDOMAIN  NS records to the  PARENT  hosted zone.   $ aws route53 change-resource-record-sets \\\n --hosted-zone-id <parent-zone-id> \\\n --change-batch file://subdomain.json  Now traffic to  *.example.com  will be routed to the correct subdomain hosted zone in Route53.  You can now skip to  testing your DNS setup",
            "title": "Scenario 1b: A subdomain under a domain purchased/hosted via AWS"
        },
        {
            "location": "/quickstart/provider/aws/boot/#scenario-2-setting-up-route53-for-a-domain-purchased-with-another-registrar",
            "text": "If you bought your domain elsewhere, and would like to dedicate the entire domain to AWS you should follow the guide  here  You can now skip to  testing your DNS setup",
            "title": "Scenario 2: Setting up Route53 for a domain purchased with another registrar"
        },
        {
            "location": "/quickstart/provider/aws/boot/#scenario-3-subdomain-for-clusters-in-route53-leaving-the-domain-at-another-registrar",
            "text": "If you bought your domain elsewhere, but  only want to use a subdomain in AWS\nRoute53  you must modify your registrar's NS (NameServer) records.  We'll create\na hosted zone in Route53, and then migrate the subdomain's NS records to your\nother registrar.  You might need to install  jq \nfor some of these instructions.  $ ID=$(uuidgen) && aws route53 create-hosted-zone --name subdomain.kubernetes.com --caller-reference $ID | jq .DelegationSet.NameServers    You will now go to your registrar's page and log in. You will need to create a\n  new  SUBDOMAIN , and use the 4 NS records listed above for the new\n   SUBDOMAIN . This  MUST  be done in order to use your cluster. Do  NOT \n  change your top level NS record, or you might take your site offline.    Information on adding NS records with\n   Godaddy.com   Information on adding NS records with  Google Cloud\n  Platform   You can now skip to  testing your DNS setup",
            "title": "Scenario 3: Subdomain for clusters in route53, leaving the domain at another registrar"
        },
        {
            "location": "/quickstart/provider/aws/boot/#using-publicprivate-dns-kops-15",
            "text": "By default the assumption is that NS records are publically available.  If you\nrequire private DNS records you should modify the commands we run later in this\nguide to include:  $ kops create cluster --dns private $NAME",
            "title": "Using Public/Private DNS (Kops 1.5+)"
        },
        {
            "location": "/quickstart/provider/aws/boot/#testing-your-dns-setup",
            "text": "You should now able to  dig  your domain (or subdomain) and see the AWS Name\nServers on the other end.  $ dig ns subdomain.example.com  Should return something similar to:  ;; ANSWER SECTION:\nsubdomain.example.com.        172800  IN  NS  ns-1.awsdns-1.net.\nsubdomain.example.com.        172800  IN  NS  ns-2.awsdns-2.org.\nsubdomain.example.com.        172800  IN  NS  ns-3.awsdns-3.com.\nsubdomain.example.com.        172800  IN  NS  ns-4.awsdns-4.co.uk.  This is a critical component of setting up clusters. If you are experiencing\nproblems with the Kubernetes API not coming up, chances are something is wrong\nwith the cluster's DNS.  Please DO NOT MOVE ON until you have validated your NS records!",
            "title": "Testing your DNS setup"
        },
        {
            "location": "/quickstart/provider/aws/boot/#cluster-state-storage",
            "text": "In order to store the state of your cluster, and the representation of your\ncluster, we need to create a dedicated S3 bucket for  kops  to use.  This\nbucket will become the source of truth for our cluster configuration.  In\nthis guide we'll call this bucket  example-com-state-store , but you should\nadd a custom prefix as bucket names need to be unique.  We recommend keeping the creation of this bucket confined to us-east-1,\notherwise more work will be required.  $ aws s3api create-bucket --bucket prefix-example-com-state-store --region us-east-1  Note: We  STRONGLY  recommend versioning your S3 bucket in case you ever need\nto revert or recover a previous state store.  $ aws s3api put-bucket-versioning --bucket prefix-example-com-state-store  --versioning-configuration Status=Enabled",
            "title": "Cluster State storage"
        },
        {
            "location": "/quickstart/provider/aws/boot/#creating-your-first-cluster",
            "text": "",
            "title": "Creating your first cluster"
        },
        {
            "location": "/quickstart/provider/aws/boot/#prepare-local-environment",
            "text": "We're ready to start creating our first cluster!  Let's first setup a few\nenvironment variables to make this process easier.  $ export NAME=myfirstcluster.example.com\n$ export KOPS_STATE_STORE=s3://prefix-example-com-state-store  Note: You don\u2019t have to use environmental variables here. You can always define\nthe values using the  \u2013name  and  \u2013state  flags later.",
            "title": "Prepare local environment"
        },
        {
            "location": "/quickstart/provider/aws/boot/#create-cluster-configuration",
            "text": "We will need to note which availability zones are available to us. In this\nexample we will be deploying our cluster to the us-west-2 region.  $ aws ec2 describe-availability-zones --region us-west-2  Below is a basic create cluster command. The\nbelow command will generate a cluster configuration, but not start building it.  $ kops create cluster \\\n    --zones us-west-2a \\\n    ${NAME}  All instances created by  kops  will be built within ASG (Auto Scaling Groups),\nwhich means each instance will be automatically monitored and rebuilt by AWS if\nit suffers any failure.",
            "title": "Create cluster configuration"
        },
        {
            "location": "/quickstart/provider/aws/boot/#customize-cluster-configuration",
            "text": "Now we have a cluster configuration, we can look at every aspect that defines\nour cluster by editing the description.  $ kops edit cluster ${NAME}  This opens your editor (as defined by $EDITOR) and allows you to edit the\nconfiguration.  The configuration is loaded from the S3 bucket we created\nearlier, and automatically updated when we save and exit the editor.  We'll leave everything set to the defaults for now, but the rest of the  kops \ndocumentation covers additional settings and configuration you can enable.",
            "title": "Customize Cluster Configuration"
        },
        {
            "location": "/quickstart/provider/aws/boot/#build-the-cluster",
            "text": "Now we take the final step of actually building the cluster.  This'll take a\nwhile.  Once it finishes you'll have to wait longer while the booted instances\nfinish downloading Kubernetes components and reach a \"ready\" state.  $ kops update cluster ${NAME} --yes",
            "title": "Build the Cluster"
        },
        {
            "location": "/quickstart/provider/aws/boot/#use-the-cluster",
            "text": "Remember when you installed  kubectl  earlier? The configuration for your\ncluster was automatically generated and written to  ~/.kube/config  for you!  Optionally you can always pull the configuration with the following command:  $ kops export kubecfg --name ${NAME}  A simple Kubernetes API call can be used to check if the API is online and\nlistening. Let's use  kubectl  to check the nodes.  $ kubectl get nodes  You will see a list of nodes that should match the  --zones  flag defined\nearlier. This is a great sign that your Kubernetes cluster is online and\nworking.  Also  kops  ships with a handy validation tool that can be ran to ensure your\ncluster is working as expected.  $ kubectl cluster-info  You can look at all the system components with the following command.  $ kubectl -n kube-system get po  You are now ready to  install Deis Workflow",
            "title": "Use the Cluster"
        },
        {
            "location": "/quickstart/provider/aws/dns/",
            "text": "Find Your Load Balancer Hostname\n\u00b6\n\n\nOn EC2, Deis Workflow will automatically provision and attach an Elastic Load Balancer (ELB) to the\n\nRouter\n. The Router is responsible for routing HTTP and HTTPS requests from the public internet\nto applications that are deployed and managed by Deis Workflow, as well as streaming TCP requests\nto the \nBuilder\n.\n\n\nBy describing the \ndeis-router\n service, you can see what hostname allocated by AWS for your Deis\nWorkflow cluster:\n\n\n$ kubectl --namespace=deis describe svc deis-router | egrep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com\n\n\n\n\nPrepare the Hostname\n\u00b6\n\n\nUsing DNS\n\u00b6\n\n\nNow that we have the hostname of the load balancer, let's create the wildcard DNS record that\ndirects requests from your machine to the application.\n\n\nFirst, if you haven't already done so, register your domain name. The Internet Corporation for\nAssigned Names and Numbers (ICANN) manages domain names on the Internet. You register a domain name\nusing a domain name registrar, an ICANN-accredited organization that manages the registry of domain\nnames. The website for your registrar will provide detailed instructions and pricing information\nfor registering your domain name. For more information, see the following resources:\n\n\n\n\nTo use Amazon Route 53 to register a domain name, see \nRegistering Domain Names Using Amazon Route 53\n.\n\n\nFor a list of accredited registrars, see the \nAccredited Registrar Directory\n.\n\n\n\n\nNext, use your DNS service, such as your domain registrar, to create a wildcard CNAME record to\nroute queries to your load balancer. For more information, see the documentation for your DNS\nservice.\n\n\nAlternatively, you can use Amazon Route 53 as your DNS service. You create a hosted zone, which\ncontains information about how to route traffic on the Internet for your domain, and an alias\nresource record set, which routes queries for your domain name to your load balancer.\n\n\nTo create a hosted zone and an alias record set for your domain using Amazon Route 53:\n\n\n\n\nOpen the Amazon Route 53 console at https://console.aws.amazon.com/route53/.\n\n\nCreate a Public Hosted Zone with your domain name.\n\n\nSelect the hosted zone that you just created for your domain.\n\n\nClick Go to Record Sets.\n\n\nCreate a Record Set with the name as \n*\n, the type as \nCNAME - Canonical Name\n, and as an alias\n    of the Load Balancer created from the router.\n\n\n\n\nUsing nip.io\n\u00b6\n\n\nIf you do not have registered a domain name and just want to try out Workflow on AWS, we can use\nthe \nnip.io\n wildcard DNS service to route arbitrary hostnames to the Deis Workflow edge router.\nThis lets us point the Workflow CLI at your cluster without having to either use your own domain or\nupdate DNS!\n\n\n\n\nNote\n\n\nthis is \nnot\n how you should connect to your cluster after the quickstart. This is\nfor demonstration purposes only. Instead, you will want to use your own domain name routed to\nthe ELB through your domain registrar. AWS actively manages the ELB IPv4 addresses, so what may\nbe an IP address associated with your ELB today will be something else later on.\n\n\n\n\nFirst, pick one of the IP addresses allocated to your ELB:\n\n\n$ host abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com\nabce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com has address 52.8.166.233\nabce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com has address 54.193.5.73\n\n\n\n\nGrab either address for the next step. We'll use \n52.8.166.233\n for this example.\n\n\nTo verify the Workflow API server and nip.io, construct your hostname by taking\nthe ip address for your load balancer and adding \nnip.io\n. For our example\nabove, the address would be: \n52.8.166.233.nip.io\n.\n\n\nNip answers with the ip address no matter the hostname:\n\n\n$ host 52.8.166.233.nip.io\n52.8.166.233.nip.io has address 52.8.166.233\n$ host something-random.52.8.166.233.nip.io\nsomething-random.52.8.166.233.nip.io has address 52.8.166.233\n\n\n\n\nBy default, any HTTP traffic for the hostname \ndeis\n will be sent to the Workflow API service. To\ntest that everything is connected properly you may validate connectivity using \ncurl\n:\n\n\n$ curl http://deis.52.8.166.233.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}\n\n\n\n\nYou should see a failed request because we provided no credentials to the API server.\n\n\nRemember the hostname, we will use it in the next step.\n\n\nYou are now ready to \nregister an admin user and deploy your first app\n.\n\n\nnext: deploy your first app",
            "title": "DNS"
        },
        {
            "location": "/quickstart/provider/aws/dns/#find-your-load-balancer-hostname",
            "text": "On EC2, Deis Workflow will automatically provision and attach an Elastic Load Balancer (ELB) to the Router . The Router is responsible for routing HTTP and HTTPS requests from the public internet\nto applications that are deployed and managed by Deis Workflow, as well as streaming TCP requests\nto the  Builder .  By describing the  deis-router  service, you can see what hostname allocated by AWS for your Deis\nWorkflow cluster:  $ kubectl --namespace=deis describe svc deis-router | egrep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com",
            "title": "Find Your Load Balancer Hostname"
        },
        {
            "location": "/quickstart/provider/aws/dns/#prepare-the-hostname",
            "text": "",
            "title": "Prepare the Hostname"
        },
        {
            "location": "/quickstart/provider/aws/dns/#using-dns",
            "text": "Now that we have the hostname of the load balancer, let's create the wildcard DNS record that\ndirects requests from your machine to the application.  First, if you haven't already done so, register your domain name. The Internet Corporation for\nAssigned Names and Numbers (ICANN) manages domain names on the Internet. You register a domain name\nusing a domain name registrar, an ICANN-accredited organization that manages the registry of domain\nnames. The website for your registrar will provide detailed instructions and pricing information\nfor registering your domain name. For more information, see the following resources:   To use Amazon Route 53 to register a domain name, see  Registering Domain Names Using Amazon Route 53 .  For a list of accredited registrars, see the  Accredited Registrar Directory .   Next, use your DNS service, such as your domain registrar, to create a wildcard CNAME record to\nroute queries to your load balancer. For more information, see the documentation for your DNS\nservice.  Alternatively, you can use Amazon Route 53 as your DNS service. You create a hosted zone, which\ncontains information about how to route traffic on the Internet for your domain, and an alias\nresource record set, which routes queries for your domain name to your load balancer.  To create a hosted zone and an alias record set for your domain using Amazon Route 53:   Open the Amazon Route 53 console at https://console.aws.amazon.com/route53/.  Create a Public Hosted Zone with your domain name.  Select the hosted zone that you just created for your domain.  Click Go to Record Sets.  Create a Record Set with the name as  * , the type as  CNAME - Canonical Name , and as an alias\n    of the Load Balancer created from the router.",
            "title": "Using DNS"
        },
        {
            "location": "/quickstart/provider/aws/dns/#using-nipio",
            "text": "If you do not have registered a domain name and just want to try out Workflow on AWS, we can use\nthe  nip.io  wildcard DNS service to route arbitrary hostnames to the Deis Workflow edge router.\nThis lets us point the Workflow CLI at your cluster without having to either use your own domain or\nupdate DNS!   Note  this is  not  how you should connect to your cluster after the quickstart. This is\nfor demonstration purposes only. Instead, you will want to use your own domain name routed to\nthe ELB through your domain registrar. AWS actively manages the ELB IPv4 addresses, so what may\nbe an IP address associated with your ELB today will be something else later on.   First, pick one of the IP addresses allocated to your ELB:  $ host abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com\nabce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com has address 52.8.166.233\nabce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com has address 54.193.5.73  Grab either address for the next step. We'll use  52.8.166.233  for this example.  To verify the Workflow API server and nip.io, construct your hostname by taking\nthe ip address for your load balancer and adding  nip.io . For our example\nabove, the address would be:  52.8.166.233.nip.io .  Nip answers with the ip address no matter the hostname:  $ host 52.8.166.233.nip.io\n52.8.166.233.nip.io has address 52.8.166.233\n$ host something-random.52.8.166.233.nip.io\nsomething-random.52.8.166.233.nip.io has address 52.8.166.233  By default, any HTTP traffic for the hostname  deis  will be sent to the Workflow API service. To\ntest that everything is connected properly you may validate connectivity using  curl :  $ curl http://deis.52.8.166.233.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}  You should see a failed request because we provided no credentials to the API server.  Remember the hostname, we will use it in the next step.  You are now ready to  register an admin user and deploy your first app .  next: deploy your first app",
            "title": "Using nip.io"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/",
            "text": "Installing Deis Workflow on Amazon Web Services\n\u00b6\n\n\nCheck Your Setup\n\u00b6\n\n\nFirst check that the \nhelm\n command is available and the version is v2.5.0 or newer.\n\n\n$ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\n\n\n\n\nEnsure the \nkubectl\n client is installed and can connect to your Kubernetes cluster.\n\n\nAdd the Deis Chart Repository\n\u00b6\n\n\nThe Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single \nhelm install deis/workflow --namespace deis\n command.\n\n\nAdd this repository to Helm:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\n\n\n\nInstall Deis Workflow\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow by running:\n\n\n$ helm install deis/workflow --namespace deis\n\n\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nIf it's preferred to have \nkubectl\n automatically update as the pod states change, run (type Ctrl-C to stop the watch):\n\n\n$ kubectl --namespace=deis get pods -w\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, Deis Workflow is up and running!\n\n\nNext, \nconfigure dns\n so you can register your first user and deploy an application.\n\n\nConfigure your AWS Load Balancer\n\u00b6\n\n\nAfter installing Workflow on your cluster, you will need to adjust your load balancer\nconfiguration. By default, the connection timeout for Elastic Load Blancers is 60 seconds.\nUnfortunately, this timeout is too short for long running connections when using \ngit push\n\nfunctionality of Deis Workflow.\n\n\nDeis Workflow will automatically provision and attach a Elastic Loadbalancer to the router\ncomponent. This component is responsible for routing HTTP and HTTPS requests from the public\ninternet to applications that are deployed and managed by Deis Workflow.\n\n\nBy describing the \ndeis-router\n service, you can see what IP hostname has been allocated by AWS for\nyour Deis Workflow cluster:\n\n\n$ kubectl --namespace=deis describe svc deis-router | egrep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com\n\n\n\n\nThe AWS name for the ELB is the first part of hostname, before the \n-\n. List all of your ELBs by\nname to confirm:\n\n\n$ aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].LoadBalancerName'\nabce0d48217d311e69a470643b4d9062\n\n\n\n\nSet the connection timeout to 1200 seconds, make sure you use your load balancer name:\n\n\n$ aws elb modify-load-balancer-attributes \\\n        --load-balancer-name abce0d48217d311e69a470643b4d9062 \\\n        --load-balancer-attributes \"{\\\"ConnectionSettings\\\":{\\\"IdleTimeout\\\":1200}}\"\nabce0d48217d311e69a470643b4d9062\nCONNECTIONSETTINGS  1200",
            "title": "Install Workflow"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/#installing-deis-workflow-on-amazon-web-services",
            "text": "",
            "title": "Installing Deis Workflow on Amazon Web Services"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/#check-your-setup",
            "text": "First check that the  helm  command is available and the version is v2.5.0 or newer.  $ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}  Ensure the  kubectl  client is installed and can connect to your Kubernetes cluster.",
            "title": "Check Your Setup"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/#add-the-deis-chart-repository",
            "text": "The Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single  helm install deis/workflow --namespace deis  command.  Add this repository to Helm:  $ helm repo add deis https://charts.deis.com/workflow",
            "title": "Add the Deis Chart Repository"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/#install-deis-workflow",
            "text": "Now that Helm is installed and the repository has been added, install Workflow by running:  $ helm install deis/workflow --namespace deis  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  If it's preferred to have  kubectl  automatically update as the pod states change, run (type Ctrl-C to stop the watch):  $ kubectl --namespace=deis get pods -w  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m  Once all of the pods are in the  READY  state, Deis Workflow is up and running!  Next,  configure dns  so you can register your first user and deploy an application.",
            "title": "Install Deis Workflow"
        },
        {
            "location": "/quickstart/provider/aws/install-aws/#configure-your-aws-load-balancer",
            "text": "After installing Workflow on your cluster, you will need to adjust your load balancer\nconfiguration. By default, the connection timeout for Elastic Load Blancers is 60 seconds.\nUnfortunately, this timeout is too short for long running connections when using  git push \nfunctionality of Deis Workflow.  Deis Workflow will automatically provision and attach a Elastic Loadbalancer to the router\ncomponent. This component is responsible for routing HTTP and HTTPS requests from the public\ninternet to applications that are deployed and managed by Deis Workflow.  By describing the  deis-router  service, you can see what IP hostname has been allocated by AWS for\nyour Deis Workflow cluster:  $ kubectl --namespace=deis describe svc deis-router | egrep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   abce0d48217d311e69a470643b4d9062-2074277678.us-west-1.elb.amazonaws.com  The AWS name for the ELB is the first part of hostname, before the  - . List all of your ELBs by\nname to confirm:  $ aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].LoadBalancerName'\nabce0d48217d311e69a470643b4d9062  Set the connection timeout to 1200 seconds, make sure you use your load balancer name:  $ aws elb modify-load-balancer-attributes \\\n        --load-balancer-name abce0d48217d311e69a470643b4d9062 \\\n        --load-balancer-attributes \"{\\\"ConnectionSettings\\\":{\\\"IdleTimeout\\\":1200}}\"\nabce0d48217d311e69a470643b4d9062\nCONNECTIONSETTINGS  1200",
            "title": "Configure your AWS Load Balancer"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/",
            "text": "Booting Kubernetes on Azure Container Service\n\u00b6\n\n\nAzure Container Service (ACS) is an optimized container hosting solution that works\nwith all the open source tools you know. Azure is great for Kubernetes and Deis Workflow.\n\n\nIf you don't yet have a Microsoft Azure account, start a trial with $200 of free credit\n\nhere\n.\n\n\nPrerequisites\n\u00b6\n\n\n\n\n\n\nYou should be able to run the \naz\n command, which is used to provision resources in the Azure\ncloud. Either \ninstall Azure CLI to your computer\n or open a \nCloud Shell\n by clicking\nthis icon near the upper right of the \nAzure Portal\n: \n\n\n\n\n\n\nYou need an SSH key to deploy the Kubernetes cluster. For help, see Microsoft's documentation\nabout \ncreating SSH key pairs\n for Linux VMs on Azure.\n\n\n\n\n\n\nConfigure the Azure CLI\n\u00b6\n\n\nIf you use \nCloud Shell\n, the \naz\n client command is already configured.\n\n\nIf you installed \naz\n locally, log in to your Azure account by typing \naz login\n at a command\nprompt and complete the confirmation code process.\n\n\nYou can verify which account is active with the \naz account show\n command.\n\n\n\n\nNote\n\n\nYour Azure account needs ownership or contributor permissions on an Azure subscription.\n\n\nIf the subscription has 2FA enabled, your Azure account must have ownership credentials in\norder to create the service principal.\n\n\n\n\nCreate an ACS Kubernetes Cluster\n\u00b6\n\n\nAzure Container Service can create a Kubernetes cluster using either\n\nthe \naz\n command line\n or \nthe Azure web portal\n.\n\n\nOption 1: Command Line\n\u00b6\n\n\nCreate a group to contain the ACS Kubernetes cluster resources. Export the resource group's name\nand location to environment variables for use by later commands:\n\n\n$ # list worldwide datacenter locations so we can pick one\n$ az account list-locations --query [].name --output tsv\n$ export AZURE_DC_LOCATION=southcentralus  # for example\n$ export AZURE_RG_NAME=myresourcegroup\n$ az group create --name \"${AZURE_RG_NAME}\" --location \"${AZURE_DC_LOCATION}\"\n\n\n\n\nRun the \naz acs create\n command to create your Kubernetes cluster, replacing the \n--dns-prefix\n\nand \n--ssh-key-value\n arguments below with your values:\n\n\n$ export AZURE_SERVICE_NAME=myacs\n$ export AZURE_DNS_PREFIX=mydnsprefix\n$ az acs create --resource-group=\"${AZURE_RG_NAME}\" --location=\"${AZURE_DC_LOCATION}\" \\\n  --orchestrator-type=kubernetes --master-count=1 --agent-count=1 \\\n  --agent-vm-size=\"Standard_D2_v2\" \\\n  --admin-username=\"k8sadmin\" \\\n  --name=\"${AZURE_SERVICE_NAME}\" --dns-prefix=\"${AZURE_DNS_PREFIX}\" \\\n  --ssh-key-value @$HOME/.ssh/id_rsa.pub\n\n\n\n\nAzure Container Services immediately begins creating the Kubernetes cluster. After a few minutes,\nthe command returns with information about the new deployment:\n\n\n{\n  \"id\": \"/subscriptions/a123b456-1234-1ab2-12ab-12345678abcd/resourceGroups/myresourcegroup/providers/Microsoft.Resources/deployments/azurecli1496357873.8344654\",\n  \"name\": \"azurecli1496357873.8344654\",\n  \"properties\": {\n    \"correlationId\": \"eae284bc-4380-484c-9302-f355e278c651\",\n    \"debugSetting\": null,\n    \"dependencies\": [],\n    \"mode\": \"Incremental\",\n    \"outputs\": null,\n...\n  },\n  \"resourceGroup\": \"myresourcegroup\"\n}\n\n\n\n\nYour Kubernetes cluster on Azure is ready. Skip the next section and\n\nconnect to the ACS Kubernetes cluster\n.\n\n\nOption 2: Web Portal\n\u00b6\n\n\nSign in to the \nAzure Portal\n and create a new Azure Container Service.\nClick on the \n+ New\n link, then the \nCompute\n link, then \nAzure Container Service\n.\n\n\n\n\nSelect \nResource Manager\n as the deployment model:\n\n\n\n\nThen click the \nCreate\n button.\n\n\nBasics\n\u00b6\n\n\nProvide these \nBasics\n for a new Azure Kubernetes cluster:\n\n\n\n\nOrchestrator: \nKubernetes\n\n\nSubscription: choose the Azure subscription to be charged for cloud resources\n\n\nResource group: \"Create new\" with a unique name\n\n\nLocation: choose one of Azure's worldwide datacenters\n\n\n\n\n\n\nThen click the \nOK\n button to move on to \nMaster configuration\n.\n\n\nMaster configuration\n\u00b6\n\n\nFirst take a slight detour to \ncreate a service principal\n to access resources. Then supply the\n\nMaster configuration\n options for your Kubernetes cluster:\n\n\n\n\nDNS name prefix: the first section of the cluster's hostname\n\n\nUser name: name of a unix user who will be added to all Kubernetes nodes\n\n\nSSH public Key: a public key to authenticate the unix user specified above\n\n\nService principal client ID: the \nappId\n field of the service principal\n\n\nService principal client secret: the \npassword\n field of the service principal\n\n\nMaster count: number of Kubernetes masters for the cluster\n\n\n\n\n\n\nWhen you are satisfied with your choices, click \nOK\n to move on to\n\nAgent Configuration\n.\n\n\nAgent configuration\n\u00b6\n\n\nChoose \nAgent configuration\n options for your Kubernetes cluster:\n\n\n\n\nAgent count: number of Kubernetes nodes to create\n\n\nAgent virtual machine size: \"Standard DS2\" or better is recommended\n\n\nOperating system: Linux\n\n\n\n\n\n\nWhen you are satisfied with your choices, click \nOK\n to move on to \nSummary\n.\n\n\nSummary\n\u00b6\n\n\nConfirm the \nSummary\n of configuration choices for your Kubernetes cluster:\n\n\n\n\nClick \nOK\n to tell Azure Container Services to start creating your new Kubernetes cluster. You\ncan monitor the progress of the deployment on the Azure dashboard, or just wait for a\nnotification that it has completed.\n\n\nYour Kubernetes cluster on Azure is ready. Now make sure you can\n\nconnect to the ACS Kubernetes cluster\n.\n\n\nConnect to the ACS Kubernetes Cluster\n\u00b6\n\n\nkubectl\n is the Kubernetes command line client.  If you don't already have it installed, you can install it with:\n\n\naz acs kubernetes install-cli\n\n\n\n\nDownload the master kubernetes cluster configuration to the ~/.kube/config file by running the following command:\n\n\naz acs kubernetes get-credentials --resource-group=$AZURE_RG_NAME --name=$AZURE_SERVICE_NAME\n\n\n\n\n\n\nNote: If the cluster was provisioned using any other SSH key than \n/home/myusername/.ssh/id_rsa\n then the \n--ssh-key-file\n parameter must be used pointing to the SSH key utilized to provision the cluster.\n\n\n\n\nVerify connectivity to the new ACS Kubernetes cluster by running \nkubectl cluster-info\n\n\n$ kubectl cluster-info\nKubernetes master is running at https://mydnsprefix.myregion.cloudapp.azure.com\nHeapster is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/heapster\nKubeDNS is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard\n\n\n\n\nYou are now ready to \ninstall Deis Workflow",
            "title": "Boot"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#booting-kubernetes-on-azure-container-service",
            "text": "Azure Container Service (ACS) is an optimized container hosting solution that works\nwith all the open source tools you know. Azure is great for Kubernetes and Deis Workflow.  If you don't yet have a Microsoft Azure account, start a trial with $200 of free credit here .",
            "title": "Booting Kubernetes on Azure Container Service"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#prerequisites",
            "text": "You should be able to run the  az  command, which is used to provision resources in the Azure\ncloud. Either  install Azure CLI to your computer  or open a  Cloud Shell  by clicking\nthis icon near the upper right of the  Azure Portal :     You need an SSH key to deploy the Kubernetes cluster. For help, see Microsoft's documentation\nabout  creating SSH key pairs  for Linux VMs on Azure.",
            "title": "Prerequisites"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#configure-the-azure-cli",
            "text": "If you use  Cloud Shell , the  az  client command is already configured.  If you installed  az  locally, log in to your Azure account by typing  az login  at a command\nprompt and complete the confirmation code process.  You can verify which account is active with the  az account show  command.   Note  Your Azure account needs ownership or contributor permissions on an Azure subscription.  If the subscription has 2FA enabled, your Azure account must have ownership credentials in\norder to create the service principal.",
            "title": "Configure the Azure CLI"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#create-an-acs-kubernetes-cluster",
            "text": "Azure Container Service can create a Kubernetes cluster using either the  az  command line  or  the Azure web portal .",
            "title": "Create an ACS Kubernetes Cluster"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#option-1-command-line",
            "text": "Create a group to contain the ACS Kubernetes cluster resources. Export the resource group's name\nand location to environment variables for use by later commands:  $ # list worldwide datacenter locations so we can pick one\n$ az account list-locations --query [].name --output tsv\n$ export AZURE_DC_LOCATION=southcentralus  # for example\n$ export AZURE_RG_NAME=myresourcegroup\n$ az group create --name \"${AZURE_RG_NAME}\" --location \"${AZURE_DC_LOCATION}\"  Run the  az acs create  command to create your Kubernetes cluster, replacing the  --dns-prefix \nand  --ssh-key-value  arguments below with your values:  $ export AZURE_SERVICE_NAME=myacs\n$ export AZURE_DNS_PREFIX=mydnsprefix\n$ az acs create --resource-group=\"${AZURE_RG_NAME}\" --location=\"${AZURE_DC_LOCATION}\" \\\n  --orchestrator-type=kubernetes --master-count=1 --agent-count=1 \\\n  --agent-vm-size=\"Standard_D2_v2\" \\\n  --admin-username=\"k8sadmin\" \\\n  --name=\"${AZURE_SERVICE_NAME}\" --dns-prefix=\"${AZURE_DNS_PREFIX}\" \\\n  --ssh-key-value @$HOME/.ssh/id_rsa.pub  Azure Container Services immediately begins creating the Kubernetes cluster. After a few minutes,\nthe command returns with information about the new deployment:  {\n  \"id\": \"/subscriptions/a123b456-1234-1ab2-12ab-12345678abcd/resourceGroups/myresourcegroup/providers/Microsoft.Resources/deployments/azurecli1496357873.8344654\",\n  \"name\": \"azurecli1496357873.8344654\",\n  \"properties\": {\n    \"correlationId\": \"eae284bc-4380-484c-9302-f355e278c651\",\n    \"debugSetting\": null,\n    \"dependencies\": [],\n    \"mode\": \"Incremental\",\n    \"outputs\": null,\n...\n  },\n  \"resourceGroup\": \"myresourcegroup\"\n}  Your Kubernetes cluster on Azure is ready. Skip the next section and connect to the ACS Kubernetes cluster .",
            "title": "Option 1: Command Line"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#option-2-web-portal",
            "text": "Sign in to the  Azure Portal  and create a new Azure Container Service.\nClick on the  + New  link, then the  Compute  link, then  Azure Container Service .   Select  Resource Manager  as the deployment model:   Then click the  Create  button.",
            "title": "Option 2: Web Portal"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#basics",
            "text": "Provide these  Basics  for a new Azure Kubernetes cluster:   Orchestrator:  Kubernetes  Subscription: choose the Azure subscription to be charged for cloud resources  Resource group: \"Create new\" with a unique name  Location: choose one of Azure's worldwide datacenters    Then click the  OK  button to move on to  Master configuration .",
            "title": "Basics"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#master-configuration",
            "text": "First take a slight detour to  create a service principal  to access resources. Then supply the Master configuration  options for your Kubernetes cluster:   DNS name prefix: the first section of the cluster's hostname  User name: name of a unix user who will be added to all Kubernetes nodes  SSH public Key: a public key to authenticate the unix user specified above  Service principal client ID: the  appId  field of the service principal  Service principal client secret: the  password  field of the service principal  Master count: number of Kubernetes masters for the cluster    When you are satisfied with your choices, click  OK  to move on to Agent Configuration .",
            "title": "Master configuration"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#agent-configuration",
            "text": "Choose  Agent configuration  options for your Kubernetes cluster:   Agent count: number of Kubernetes nodes to create  Agent virtual machine size: \"Standard DS2\" or better is recommended  Operating system: Linux    When you are satisfied with your choices, click  OK  to move on to  Summary .",
            "title": "Agent configuration"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#summary",
            "text": "Confirm the  Summary  of configuration choices for your Kubernetes cluster:   Click  OK  to tell Azure Container Services to start creating your new Kubernetes cluster. You\ncan monitor the progress of the deployment on the Azure dashboard, or just wait for a\nnotification that it has completed.  Your Kubernetes cluster on Azure is ready. Now make sure you can connect to the ACS Kubernetes cluster .",
            "title": "Summary"
        },
        {
            "location": "/quickstart/provider/azure-acs/boot/#connect-to-the-acs-kubernetes-cluster",
            "text": "kubectl  is the Kubernetes command line client.  If you don't already have it installed, you can install it with:  az acs kubernetes install-cli  Download the master kubernetes cluster configuration to the ~/.kube/config file by running the following command:  az acs kubernetes get-credentials --resource-group=$AZURE_RG_NAME --name=$AZURE_SERVICE_NAME   Note: If the cluster was provisioned using any other SSH key than  /home/myusername/.ssh/id_rsa  then the  --ssh-key-file  parameter must be used pointing to the SSH key utilized to provision the cluster.   Verify connectivity to the new ACS Kubernetes cluster by running  kubectl cluster-info  $ kubectl cluster-info\nKubernetes master is running at https://mydnsprefix.myregion.cloudapp.azure.com\nHeapster is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/heapster\nKubeDNS is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://mydnsprefix.myregion.cloudapp.azure.com/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard  You are now ready to  install Deis Workflow",
            "title": "Connect to the ACS Kubernetes Cluster"
        },
        {
            "location": "/quickstart/provider/azure-acs/dns/",
            "text": "Find the Load Balancer Address\n\u00b6\n\n\nOn Azure Container Engine, Deis Workflow will automatically provision and\nattach a Azure Load Balancer to the router component. This component is\nresponsible for routing HTTP and HTTPS requests from the public internet to\napplications that are deployed and managed by Deis Workflow.\n\n\nDiscover the ip address assigned to the \ndeis-router\n, by describing the\n\ndeis-router\n service:\n\n\n$ kubectl --namespace=deis get service deis-router\nNAME          CLUSTER-IP    EXTERNAL-IP    PORT(S)                            AGE\ndeis-router   10.0.60.172   13.82.148.57   80/TCP,443/TCP,2222/TCP,9090/TCP   54m\n\n\n\n\nIf the \nEXTERNAL-IP\n column shows \n<pending>\n instead of an ip address continue\nto wait until Azure finishes provisioning and attaching the load balancer.\n\n\nPrepare the Hostname\n\u00b6\n\n\nNow that an ip address has been attached to the load balancer use the \nnip.io\n\nDNS service to route arbitrary hostnames to the Deis Workflow edge router.\nUsage of \nnip.io\n is not recommended for long-term use and is intended here as\na short cut to prevent fiddling with DNS.\n\n\nTo verify connectivity to the Workflow API server and nip.io, construct the\nhostname by taking the ip address of load balancer and adding \nnip.io\n.\n\n\nFor our example above, the address would be: \n13.82.148.57.nip.io\n.\n\n\nNip answers with the ip address no matter the hostname:\n\n\n$ host 13.82.148.57.nip.io\n13.82.148.57.nip.io has address 13.82.148.57\n$ host something-random.13.82.148.57.nip.io\nsomething-random.13.82.148.57.nip.io has address 13.82.148.57\n\n\n\n\nBy default, any HTTP traffic destined for the hostname \ndeis\n is automatically sent to the Workflow API service. To test that everything is connected properly use \ncurl\n:\n\n\n$ curl http://deis.13.82.148.57.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}\n\n\n\n\nSince no authentication information has been provided, \ncurl\n will return an error. However this does validate that \ncurl\n has reached the Workflow API service.\n\n\nRemember the hostname, it will used in the next step.\n\n\nYou are now ready to \nregister an admin user and deploy your first app\n.",
            "title": "DNS"
        },
        {
            "location": "/quickstart/provider/azure-acs/dns/#find-the-load-balancer-address",
            "text": "On Azure Container Engine, Deis Workflow will automatically provision and\nattach a Azure Load Balancer to the router component. This component is\nresponsible for routing HTTP and HTTPS requests from the public internet to\napplications that are deployed and managed by Deis Workflow.  Discover the ip address assigned to the  deis-router , by describing the deis-router  service:  $ kubectl --namespace=deis get service deis-router\nNAME          CLUSTER-IP    EXTERNAL-IP    PORT(S)                            AGE\ndeis-router   10.0.60.172   13.82.148.57   80/TCP,443/TCP,2222/TCP,9090/TCP   54m  If the  EXTERNAL-IP  column shows  <pending>  instead of an ip address continue\nto wait until Azure finishes provisioning and attaching the load balancer.",
            "title": "Find the Load Balancer Address"
        },
        {
            "location": "/quickstart/provider/azure-acs/dns/#prepare-the-hostname",
            "text": "Now that an ip address has been attached to the load balancer use the  nip.io \nDNS service to route arbitrary hostnames to the Deis Workflow edge router.\nUsage of  nip.io  is not recommended for long-term use and is intended here as\na short cut to prevent fiddling with DNS.  To verify connectivity to the Workflow API server and nip.io, construct the\nhostname by taking the ip address of load balancer and adding  nip.io .  For our example above, the address would be:  13.82.148.57.nip.io .  Nip answers with the ip address no matter the hostname:  $ host 13.82.148.57.nip.io\n13.82.148.57.nip.io has address 13.82.148.57\n$ host something-random.13.82.148.57.nip.io\nsomething-random.13.82.148.57.nip.io has address 13.82.148.57  By default, any HTTP traffic destined for the hostname  deis  is automatically sent to the Workflow API service. To test that everything is connected properly use  curl :  $ curl http://deis.13.82.148.57.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}  Since no authentication information has been provided,  curl  will return an error. However this does validate that  curl  has reached the Workflow API service.  Remember the hostname, it will used in the next step.  You are now ready to  register an admin user and deploy your first app .",
            "title": "Prepare the Hostname"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/",
            "text": "Install Deis Workflow on Azure Container Service\n\u00b6\n\n\nCheck Your Setup\n\u00b6\n\n\nFirst check that the \nhelm\n command is available and the version is v2.5.0 or newer.\n\n\n$ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\n\n\n\n\nFinally, initialize Helm:\n\n\nhelm init\n\n\n\n\nEnsure the \nkubectl\n client is installed and can connect to your Kubernetes cluster.\n\n\nAdd the Deis Chart Repository\n\u00b6\n\n\nThe Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single \nhelm install deis/workflow --namespace deis\n command.\n\n\nAdd this repository to Helm:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\n\n\n\nCreate New Azure Storage Account\n\u00b6\n\n\nIt is recommended to use a dedicated storage account for the operational aspects of Workflow, which includes storing slug and container images, database backups, and disaster recovery. This storage account is passed as parameters during the \nhelm install\n command in the next step. Replace the \nAZURE_SA_NAME\n variable with a unique name for your storage account and execute these commands.\n\n\n$ export AZURE_SA_NAME=YourGlobalUniqueName\n$ az storage account create -n $AZURE_SA_NAME -l $AZURE_DC_LOCATION -g $AZURE_RG_NAME --sku Standard_LRS\n$ export AZURE_SA_KEY=`az storage account keys list -n $AZURE_SA_NAME -g $AZURE_RG_NAME --query [0].value --output tsv`\n\n\n\n\n\n\nNote: Premium Storage skus are not supported yet due to \nlack of block blob storage support\n required for the deis database to function.\n\n\n\n\nInstall Deis Workflow\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow by running:\n\n\n$ helm install deis/workflow --namespace=deis --set global.storage=azure,azure.accountname=$AZURE_SA_NAME,azure.accountkey=$AZURE_SA_KEY,azure.registry_container=registry,azure.database_container=database,azure.builder_container=builder\n\n\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nIf it's preferred to have \nkubectl\n automatically update as the pod states change, run (type Ctrl-C to stop the watch):\n\n\n$ kubectl --namespace=deis get pods -w\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, Deis Workflow is up and running!\n\n\nNext, \nconfigure dns\n so you can register your first user and deploy an application.",
            "title": "Install Workflow"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/#install-deis-workflow-on-azure-container-service",
            "text": "",
            "title": "Install Deis Workflow on Azure Container Service"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/#check-your-setup",
            "text": "First check that the  helm  command is available and the version is v2.5.0 or newer.  $ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}  Finally, initialize Helm:  helm init  Ensure the  kubectl  client is installed and can connect to your Kubernetes cluster.",
            "title": "Check Your Setup"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/#add-the-deis-chart-repository",
            "text": "The Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single  helm install deis/workflow --namespace deis  command.  Add this repository to Helm:  $ helm repo add deis https://charts.deis.com/workflow",
            "title": "Add the Deis Chart Repository"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/#create-new-azure-storage-account",
            "text": "It is recommended to use a dedicated storage account for the operational aspects of Workflow, which includes storing slug and container images, database backups, and disaster recovery. This storage account is passed as parameters during the  helm install  command in the next step. Replace the  AZURE_SA_NAME  variable with a unique name for your storage account and execute these commands.  $ export AZURE_SA_NAME=YourGlobalUniqueName\n$ az storage account create -n $AZURE_SA_NAME -l $AZURE_DC_LOCATION -g $AZURE_RG_NAME --sku Standard_LRS\n$ export AZURE_SA_KEY=`az storage account keys list -n $AZURE_SA_NAME -g $AZURE_RG_NAME --query [0].value --output tsv`   Note: Premium Storage skus are not supported yet due to  lack of block blob storage support  required for the deis database to function.",
            "title": "Create New Azure Storage Account"
        },
        {
            "location": "/quickstart/provider/azure-acs/install-azure-acs/#install-deis-workflow",
            "text": "Now that Helm is installed and the repository has been added, install Workflow by running:  $ helm install deis/workflow --namespace=deis --set global.storage=azure,azure.accountname=$AZURE_SA_NAME,azure.accountkey=$AZURE_SA_KEY,azure.registry_container=registry,azure.database_container=database,azure.builder_container=builder  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  If it's preferred to have  kubectl  automatically update as the pod states change, run (type Ctrl-C to stop the watch):  $ kubectl --namespace=deis get pods -w  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m  Once all of the pods are in the  READY  state, Deis Workflow is up and running!  Next,  configure dns  so you can register your first user and deploy an application.",
            "title": "Install Deis Workflow"
        },
        {
            "location": "/quickstart/provider/gke/boot/",
            "text": "Booting Kubernetes on Google Container Engine\n\u00b6\n\n\nGoogle Container Engine (GKE) is a managed Kubernetes environment which is great for hosting Deis Workflow. Google Container Engine manages the Kubernetes master and you pay for the compute nodes. Clusters smaller than five nodes are charged only for the compute. Clusters six nodes are larger cost $0.15/hour per cluster.\n\n\nIf you do not already have a Google Cloud account, you can start a trial with $300 of free credit \nhere\n. After completing sign up, you must add your billing information.\n\n\nCreate Your Google Cloud Project\n\u00b6\n\n\nSign in to your \nGoogle Cloud Platform Console\n and create a new project:\n\n\n\n\nPick a project name. A project groups resources together and can hold more than one container cluster:\n\n\n\n\nNote the project ID. This is a unique name across all Google Cloud projects. Later, we will refer to this as \nPROJECT_ID\n.\n\n\nNext, \nenable billing\n in the console. Next, enable the \nContainer Engine API\n and \nCompute Engine API\n. You must complete \nall three\n steps before continuing.\n\n\nCreate Your GKE Cluster\n\u00b6\n\n\nFrom the navigation hamburger in the upper left corner, find and select \nContainer Engine\n:\n\n\n\n\nSelect \nCreate Container Cluster\n:\n\n\n\n\nFor development and testing, we recommend you use the \nn1-standard-2\n machine type which has 2 VCPUs and 7.5 GB of RAM per server, and a cluster size of at least 2:\n\n\n\n\nClick \"Create\" and Google Container Engine will provision your cluster. The process will take a few minutes to complete.\n\n\nCheck Kubernetes version\n\u00b6\n\n\n]\n\n\nAfter the cluster is created, check the node version. See \nKubernetes Versions\n under System Requirements for more details.\n\n\nInstall and configure the Google Cloud CLI\n\u00b6\n\n\nWhile your container cluster is booting. You will need to install the Google Cloud CLI tools. We will use the tools to fetch cluster credentials to authenitcate to your new Kubernetes cluster.\n\n\nGoogle maintains a number of \nquickstart guides\n which walk you through the installation.\n\n\nOnce you have installed the CLI tooling set your default project and list your container clusters:\n\n\n$ gcloud projects list\nPROJECT_ID             NAME               PROJECT_NUMBER\nascendant-yeti-130419  My First Cluster   614974141267\n\n\n\n\nSet your default project:\n\n\n$ gcloud config set project ascendant-yeti-130419\n\n\n\n\nThen list your container clusters:\n\n\n$ gcloud container clusters list\nNAME       ZONE           MASTER_VERSION  MASTER_IP        MACHINE_TYPE   NODE_VERSION  NUM_NODES  STATUS\ncluster-1  us-central1-b  1.4.0           104.154.234.246  n1-standard-2  1.4.0 *       2          RUNNING\n\n\n\n\nIf you haven't configured your default zone, make sure it matches the ZONE for your cluster:\n\n\n$ gcloud config set compute/zone us-central1-b\n\n\n\n\nNow you may fetch credentials to connect to Kubernetes:\n\n\n$ gcloud auth application-default login\nYour browser has been opened to visit:\nhttps://accounts.google.com/o/oauth2/auth?redirect_uri=....\n\nCredentials saved to file: [~/.config/gcloud/application_default_credentials.json]\n\nThese credentials will be used by any library that requests\nApplication Default Credentials.\n\n\n\n\nIf you don't have \nkubectl\n CLI setup just yet, run this to get it available\nlocally:\n\n\n$ gcloud components install kubectl\n\n\n\n\nYour local \nkubectl\n utility should now be pointed at your new container cluster. You can verify your credentials and local configuration by running:\n\n\n$ kubectl cluster-info\nKubernetes master is running at https://104.154.234.246\nGLBCDefaultBackend is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/default-http-backend\nHeapster is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/heapster\nKubeDNS is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard\n\n\n\n\nIf \nkubectl cluster-info\n returned with the following error:\n\n\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?\n\n\n\n\nYou'll need to run:\n\n\n$ gcloud container clusters get-credentials\n\n\n\n\nTo download the credentials necessary. The \nkubectl cluster-info\n command should then work as intended.\n\n\nYou are now ready to \ninstall Deis Workflow",
            "title": "Boot"
        },
        {
            "location": "/quickstart/provider/gke/boot/#booting-kubernetes-on-google-container-engine",
            "text": "Google Container Engine (GKE) is a managed Kubernetes environment which is great for hosting Deis Workflow. Google Container Engine manages the Kubernetes master and you pay for the compute nodes. Clusters smaller than five nodes are charged only for the compute. Clusters six nodes are larger cost $0.15/hour per cluster.  If you do not already have a Google Cloud account, you can start a trial with $300 of free credit  here . After completing sign up, you must add your billing information.",
            "title": "Booting Kubernetes on Google Container Engine"
        },
        {
            "location": "/quickstart/provider/gke/boot/#create-your-google-cloud-project",
            "text": "Sign in to your  Google Cloud Platform Console  and create a new project:   Pick a project name. A project groups resources together and can hold more than one container cluster:   Note the project ID. This is a unique name across all Google Cloud projects. Later, we will refer to this as  PROJECT_ID .  Next,  enable billing  in the console. Next, enable the  Container Engine API  and  Compute Engine API . You must complete  all three  steps before continuing.",
            "title": "Create Your Google Cloud Project"
        },
        {
            "location": "/quickstart/provider/gke/boot/#create-your-gke-cluster",
            "text": "From the navigation hamburger in the upper left corner, find and select  Container Engine :   Select  Create Container Cluster :   For development and testing, we recommend you use the  n1-standard-2  machine type which has 2 VCPUs and 7.5 GB of RAM per server, and a cluster size of at least 2:   Click \"Create\" and Google Container Engine will provision your cluster. The process will take a few minutes to complete.",
            "title": "Create Your GKE Cluster"
        },
        {
            "location": "/quickstart/provider/gke/boot/#check-kubernetes-version",
            "text": "]  After the cluster is created, check the node version. See  Kubernetes Versions  under System Requirements for more details.",
            "title": "Check Kubernetes version"
        },
        {
            "location": "/quickstart/provider/gke/boot/#install-and-configure-the-google-cloud-cli",
            "text": "While your container cluster is booting. You will need to install the Google Cloud CLI tools. We will use the tools to fetch cluster credentials to authenitcate to your new Kubernetes cluster.  Google maintains a number of  quickstart guides  which walk you through the installation.  Once you have installed the CLI tooling set your default project and list your container clusters:  $ gcloud projects list\nPROJECT_ID             NAME               PROJECT_NUMBER\nascendant-yeti-130419  My First Cluster   614974141267  Set your default project:  $ gcloud config set project ascendant-yeti-130419  Then list your container clusters:  $ gcloud container clusters list\nNAME       ZONE           MASTER_VERSION  MASTER_IP        MACHINE_TYPE   NODE_VERSION  NUM_NODES  STATUS\ncluster-1  us-central1-b  1.4.0           104.154.234.246  n1-standard-2  1.4.0 *       2          RUNNING  If you haven't configured your default zone, make sure it matches the ZONE for your cluster:  $ gcloud config set compute/zone us-central1-b  Now you may fetch credentials to connect to Kubernetes:  $ gcloud auth application-default login\nYour browser has been opened to visit:\nhttps://accounts.google.com/o/oauth2/auth?redirect_uri=....\n\nCredentials saved to file: [~/.config/gcloud/application_default_credentials.json]\n\nThese credentials will be used by any library that requests\nApplication Default Credentials.  If you don't have  kubectl  CLI setup just yet, run this to get it available\nlocally:  $ gcloud components install kubectl  Your local  kubectl  utility should now be pointed at your new container cluster. You can verify your credentials and local configuration by running:  $ kubectl cluster-info\nKubernetes master is running at https://104.154.234.246\nGLBCDefaultBackend is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/default-http-backend\nHeapster is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/heapster\nKubeDNS is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://104.154.234.246/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard  If  kubectl cluster-info  returned with the following error:  The connection to the server localhost:8080 was refused - did you specify the right host or port?  You'll need to run:  $ gcloud container clusters get-credentials  To download the credentials necessary. The  kubectl cluster-info  command should then work as intended.  You are now ready to  install Deis Workflow",
            "title": "Install and configure the Google Cloud CLI"
        },
        {
            "location": "/quickstart/provider/gke/dns/",
            "text": "Find Your Load Balancer Address\n\u00b6\n\n\nOn Google Container Engine, Deis Workflow will automatically provision and\nattach a Google Cloud Loadbalancer to the router copmonent. This component is\nresponsible for routing HTTP and HTTPS requests from the public internet to\napplications that are deployed and managed by Deis Workflow.\n\n\nBy describing the \ndeis-router\n service, you can see what IP address has been\nallocated by Google Cloud for your Deis Workflow cluster:\n\n\n$ kubectl --namespace=deis describe svc deis-router | grep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   104.197.125.75\n\n\n\n\nPrepare the Hostname\n\u00b6\n\n\nNow that you have the ip address of your load balancer we can use the \nnip.io\n\nDNS service to route arbitrary hostnames to the Deis Workflow edge router. This\nlets us point the Workflow CLI at your cluster without having to either use\nyour own domain or update DNS!\n\n\nTo verify the Workflow API server and nip.io, construct your hostname by taking\nthe ip address for your load balancer and adding \nnip.io\n. For our example\nabove, the address would be: \n104.197.125.75.nip.io\n.\n\n\nNip answers with the ip address no matter the hostname:\n\n\n$ host 104.197.125.75.nip.io\n104.197.125.75.nip.io has address 104.197.125.75\n$ host something-random.104.197.125.75.nip.io\nsomething-random.104.197.125.75.nip.io has address 104.197.125.75\n\n\n\n\nBy default, any HTTP traffic for the hostname \ndeis\n will be sent to the Workflow API service. To test that everything is connected properly you may validate connectivity using \ncurl\n:\n\n\n$ curl http://deis.104.197.125.75.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}\n\n\n\n\nYou should see a failed request because we provided no credentials to the API server.\n\n\nRemember the hostname, we will use it in the next step.\n\n\nYou are now ready to \nregister an admin user and deploy your first app\n.",
            "title": "DNS"
        },
        {
            "location": "/quickstart/provider/gke/dns/#find-your-load-balancer-address",
            "text": "On Google Container Engine, Deis Workflow will automatically provision and\nattach a Google Cloud Loadbalancer to the router copmonent. This component is\nresponsible for routing HTTP and HTTPS requests from the public internet to\napplications that are deployed and managed by Deis Workflow.  By describing the  deis-router  service, you can see what IP address has been\nallocated by Google Cloud for your Deis Workflow cluster:  $ kubectl --namespace=deis describe svc deis-router | grep LoadBalancer\nType:                   LoadBalancer\nLoadBalancer Ingress:   104.197.125.75",
            "title": "Find Your Load Balancer Address"
        },
        {
            "location": "/quickstart/provider/gke/dns/#prepare-the-hostname",
            "text": "Now that you have the ip address of your load balancer we can use the  nip.io \nDNS service to route arbitrary hostnames to the Deis Workflow edge router. This\nlets us point the Workflow CLI at your cluster without having to either use\nyour own domain or update DNS!  To verify the Workflow API server and nip.io, construct your hostname by taking\nthe ip address for your load balancer and adding  nip.io . For our example\nabove, the address would be:  104.197.125.75.nip.io .  Nip answers with the ip address no matter the hostname:  $ host 104.197.125.75.nip.io\n104.197.125.75.nip.io has address 104.197.125.75\n$ host something-random.104.197.125.75.nip.io\nsomething-random.104.197.125.75.nip.io has address 104.197.125.75  By default, any HTTP traffic for the hostname  deis  will be sent to the Workflow API service. To test that everything is connected properly you may validate connectivity using  curl :  $ curl http://deis.104.197.125.75.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}  You should see a failed request because we provided no credentials to the API server.  Remember the hostname, we will use it in the next step.  You are now ready to  register an admin user and deploy your first app .",
            "title": "Prepare the Hostname"
        },
        {
            "location": "/quickstart/provider/gke/install-gke/",
            "text": "Install Deis Workflow on Google Compute Engine\n\u00b6\n\n\nCheck Your Setup\n\u00b6\n\n\nFirst check that the \nhelm\n command is available and the version is v2.5.0 or newer.\n\n\n$ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\n\n\n\n\nEnsure the \nkubectl\n client is installed and can connect to your Kubernetes cluster.\n\n\nAdd the Deis Chart Repository\n\u00b6\n\n\nThe Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single \nhelm install deis/workflow --namespace deis\n command.\n\n\nAdd this repository to Helm:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\n\n\n\nInstall Deis Workflow\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow by running:\n\n\n$ helm install deis/workflow --namespace deis\n\n\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nIf it's preferred to have \nkubectl\n automatically update as the pod states change, run (type Ctrl-C to stop the watch):\n\n\n$ kubectl --namespace=deis get pods -w\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, Deis Workflow is up and running!\n\n\nNext, \nconfigure dns\n so you can register your first user and deploy an application.",
            "title": "Install Workflow"
        },
        {
            "location": "/quickstart/provider/gke/install-gke/#install-deis-workflow-on-google-compute-engine",
            "text": "",
            "title": "Install Deis Workflow on Google Compute Engine"
        },
        {
            "location": "/quickstart/provider/gke/install-gke/#check-your-setup",
            "text": "First check that the  helm  command is available and the version is v2.5.0 or newer.  $ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}  Ensure the  kubectl  client is installed and can connect to your Kubernetes cluster.",
            "title": "Check Your Setup"
        },
        {
            "location": "/quickstart/provider/gke/install-gke/#add-the-deis-chart-repository",
            "text": "The Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single  helm install deis/workflow --namespace deis  command.  Add this repository to Helm:  $ helm repo add deis https://charts.deis.com/workflow",
            "title": "Add the Deis Chart Repository"
        },
        {
            "location": "/quickstart/provider/gke/install-gke/#install-deis-workflow",
            "text": "Now that Helm is installed and the repository has been added, install Workflow by running:  $ helm install deis/workflow --namespace deis  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  If it's preferred to have  kubectl  automatically update as the pod states change, run (type Ctrl-C to stop the watch):  $ kubectl --namespace=deis get pods -w  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m  Once all of the pods are in the  READY  state, Deis Workflow is up and running!  Next,  configure dns  so you can register your first user and deploy an application.",
            "title": "Install Deis Workflow"
        },
        {
            "location": "/quickstart/provider/minikube/boot/",
            "text": "Booting Kubernetes Using Minikube\n\u00b6\n\n\nThis guide will walk you through the process of installing a small development\nKubernetes cluster on your local machine using \nminikube\n.\n\n\nPre-requisites\n\u00b6\n\n\n\n\nOS X\n\n\nxhyve driver\n, \nVirtualBox\n or \nVMware Fusion\n installation\n\n\n\n\n\n\nLinux\n\n\nVirtualBox\n or \nKVM\n installation\n\n\n\n\n\n\nWindows\n\n\nHyper-V\n\n\n\n\n\n\nVT-x/AMD-v virtualization must be enabled in BIOS\n\n\nThe most recent version of \nkubectl\n. You can install kubectl following\n  \nthese steps\n.\n\n\nInternet connection\n\n\nYou will need a decent internet connection running \nminikube start\n for the first time for\nMinikube to pull its Docker images. It might take Minikube some time to start.\n\n\n\n\n\n\n\n\nDownload and Unpack Minikube\n\u00b6\n\n\nSee the installation instructions for the\n\nlatest release of minikube\n.\n\n\nSet your VM driver (optional)\n\u00b6\n\n\nYou can set your preferred driver (virtualbox - default, vmwarefusion, kvm, xhyve) using the following command:\n\n\nminikube config set vm-driver virtualbox\n\n\n\n\nBoot Your First Cluster\n\u00b6\n\n\nWe are now ready to boot our first Kubernetes cluster using Minikube!\n\n\n$ minikube start --disk-size=60g --memory=4096\nStarting local Kubernetes cluster...\nKubectl is now configured to use the cluster.\n\n\n\n\nNow that the cluster is up and ready, \nminikube\n automatically configures \nkubectl\n on your machine\nwith the appropriate authentication and endpoint information.\n\n\n$ kubectl cluster-info\nKubernetes master is running at https://192.168.99.100:8443\nKubeDNS is running at https://192.168.99.100:8443/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://192.168.99.100:8443/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n\n\n\n\nYou are now ready to \ninstall Deis Workflow",
            "title": "Boot"
        },
        {
            "location": "/quickstart/provider/minikube/boot/#booting-kubernetes-using-minikube",
            "text": "This guide will walk you through the process of installing a small development\nKubernetes cluster on your local machine using  minikube .",
            "title": "Booting Kubernetes Using Minikube"
        },
        {
            "location": "/quickstart/provider/minikube/boot/#pre-requisites",
            "text": "OS X  xhyve driver ,  VirtualBox  or  VMware Fusion  installation    Linux  VirtualBox  or  KVM  installation    Windows  Hyper-V    VT-x/AMD-v virtualization must be enabled in BIOS  The most recent version of  kubectl . You can install kubectl following\n   these steps .  Internet connection  You will need a decent internet connection running  minikube start  for the first time for\nMinikube to pull its Docker images. It might take Minikube some time to start.",
            "title": "Pre-requisites"
        },
        {
            "location": "/quickstart/provider/minikube/boot/#download-and-unpack-minikube",
            "text": "See the installation instructions for the latest release of minikube .",
            "title": "Download and Unpack Minikube"
        },
        {
            "location": "/quickstart/provider/minikube/boot/#set-your-vm-driver-optional",
            "text": "You can set your preferred driver (virtualbox - default, vmwarefusion, kvm, xhyve) using the following command:  minikube config set vm-driver virtualbox",
            "title": "Set your VM driver (optional)"
        },
        {
            "location": "/quickstart/provider/minikube/boot/#boot-your-first-cluster",
            "text": "We are now ready to boot our first Kubernetes cluster using Minikube!  $ minikube start --disk-size=60g --memory=4096\nStarting local Kubernetes cluster...\nKubectl is now configured to use the cluster.  Now that the cluster is up and ready,  minikube  automatically configures  kubectl  on your machine\nwith the appropriate authentication and endpoint information.  $ kubectl cluster-info\nKubernetes master is running at https://192.168.99.100:8443\nKubeDNS is running at https://192.168.99.100:8443/api/v1/proxy/namespaces/kube-system/services/kube-dns\nkubernetes-dashboard is running at https://192.168.99.100:8443/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.  You are now ready to  install Deis Workflow",
            "title": "Boot Your First Cluster"
        },
        {
            "location": "/quickstart/provider/minikube/dns/",
            "text": "Find Your Load Balancer Address\n\u00b6\n\n\nDuring installation, Deis Workflow specifies that Kubernetes should provision and attach a load\nbalancer to the router component. The router component is responsible for routing HTTP and HTTPS\nrequests from outside the cluster to applications that are managed by Deis Worfklow. In cloud\nenvironments, Kubernetes provisions and attaches a load balancer for you. Since we are running in a\nlocal environment, we need to do a little bit of extra work to send requests to the router.\n\n\nFirst, determine the ip address allocated to the worker node.\n\n\n$ minikube ip\n192.168.99.100\n\n\n\n\nPrepare the Hostname\n\u00b6\n\n\nNow that you have the ip address of your virtual machine, we can use the \nnip.io\n DNS service or \ndnsmasq\n to\nroute arbitrary hostnames to the Deis Workflow edge router. This lets us point the Workflow CLI at\nyour cluster without having to either use your own domain or update DNS!\n\n\nUsing \nnip.io\n\u00b6\n\n\nTo verify the Workflow API server and nip.io, construct your hostname by taking the ip address for\nyour load balancer and adding \nnip.io\n. For our example above, the address would be \n192.168.99.100\n.\n\n\nNip answers with the ip address no matter the hostname:\n\n\n$ host 192.168.99.100.nip.io\n192.168.99.100.nip.io has address 192.168.99.100\n$ host something-random.192.168.99.100.nip.io\nsomething-random.192.168.99.100.nip.io has address 192.168.99.100\n\n\n\n\nUsing DNSMasq\n\u00b6\n\n\nIf \nnip.io\n is working for you, you can skip this section, and proceed to verify the hostname.\n\n\nIf you prefer not to use \nnip.io\n or cannot (because your DNS provider might have blocked it), you can use \ndnsmasq\n on Linux and macOS or \nAcrylic\n on Windows.\n\n\nYou can install and configure \ndnsmasq\n on macOS with \nHomebrew\n with the following commands:\n\n\n# Installing dnsmasq\n$ brew install dnsmasq\n\n# Configure `.minikube` subdomains to always use minikube IP:\n$ echo \"address=/.minikube/`minikube ip`\" >> /usr/local/etc/dnsmasq.conf\n$ sudo brew services start dnsmasq\n\n# Make the system resolver use dnsmasq to resolve addresses:\n$ sudo mkdir /etc/resolver\n$ echo nameserver 127.0.0.1 | sudo tee /etc/resolver/minikube\n\n# You might need to clear the DNS resolver cache:\n$ sudo killall -HUP mDNSResponder\n\n\n\n\nYou may need to ensure that the \ndnsmasq\n service at 127.0.0.1 is listed as a DNS server for your network connection. You may check this using the following command:\n\n\n$ scutil --dns | grep minikube -B 1 -A 3\nresolver #8\n  domain   : minikube\n  nameserver[0] : 127.0.0.1\n  flags    : Request A records, Request AAAA records\n  reach    : Reachable, Local Address, Directly Reachable Address\n\n\n\n\nTo verify the hostname, you will need to use \ndeis.minikube\n as hostname instead of \ndeis.192.168.99.100.nip.io\n in the next section. We will also use it in the next step.\n\n\nVerify the hostname\n\u00b6\n\n\nBy default, any HTTP traffic for the hostname \ndeis\n will be sent to the Workflow API service. To test that everything is connected properly you may validate connectivity using \ncurl\n:\n\n\n$ curl http://deis.192.168.99.100.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}\n\n\n\n\nYou should see a failed request because we provided no credentials to the API server.\n\n\nRemember the hostname, we will use it in the next step.\n\n\nnext: deploy your first app",
            "title": "DNS"
        },
        {
            "location": "/quickstart/provider/minikube/dns/#find-your-load-balancer-address",
            "text": "During installation, Deis Workflow specifies that Kubernetes should provision and attach a load\nbalancer to the router component. The router component is responsible for routing HTTP and HTTPS\nrequests from outside the cluster to applications that are managed by Deis Worfklow. In cloud\nenvironments, Kubernetes provisions and attaches a load balancer for you. Since we are running in a\nlocal environment, we need to do a little bit of extra work to send requests to the router.  First, determine the ip address allocated to the worker node.  $ minikube ip\n192.168.99.100",
            "title": "Find Your Load Balancer Address"
        },
        {
            "location": "/quickstart/provider/minikube/dns/#prepare-the-hostname",
            "text": "Now that you have the ip address of your virtual machine, we can use the  nip.io  DNS service or  dnsmasq  to\nroute arbitrary hostnames to the Deis Workflow edge router. This lets us point the Workflow CLI at\nyour cluster without having to either use your own domain or update DNS!",
            "title": "Prepare the Hostname"
        },
        {
            "location": "/quickstart/provider/minikube/dns/#using-nipio",
            "text": "To verify the Workflow API server and nip.io, construct your hostname by taking the ip address for\nyour load balancer and adding  nip.io . For our example above, the address would be  192.168.99.100 .  Nip answers with the ip address no matter the hostname:  $ host 192.168.99.100.nip.io\n192.168.99.100.nip.io has address 192.168.99.100\n$ host something-random.192.168.99.100.nip.io\nsomething-random.192.168.99.100.nip.io has address 192.168.99.100",
            "title": "Using nip.io"
        },
        {
            "location": "/quickstart/provider/minikube/dns/#using-dnsmasq",
            "text": "If  nip.io  is working for you, you can skip this section, and proceed to verify the hostname.  If you prefer not to use  nip.io  or cannot (because your DNS provider might have blocked it), you can use  dnsmasq  on Linux and macOS or  Acrylic  on Windows.  You can install and configure  dnsmasq  on macOS with  Homebrew  with the following commands:  # Installing dnsmasq\n$ brew install dnsmasq\n\n# Configure `.minikube` subdomains to always use minikube IP:\n$ echo \"address=/.minikube/`minikube ip`\" >> /usr/local/etc/dnsmasq.conf\n$ sudo brew services start dnsmasq\n\n# Make the system resolver use dnsmasq to resolve addresses:\n$ sudo mkdir /etc/resolver\n$ echo nameserver 127.0.0.1 | sudo tee /etc/resolver/minikube\n\n# You might need to clear the DNS resolver cache:\n$ sudo killall -HUP mDNSResponder  You may need to ensure that the  dnsmasq  service at 127.0.0.1 is listed as a DNS server for your network connection. You may check this using the following command:  $ scutil --dns | grep minikube -B 1 -A 3\nresolver #8\n  domain   : minikube\n  nameserver[0] : 127.0.0.1\n  flags    : Request A records, Request AAAA records\n  reach    : Reachable, Local Address, Directly Reachable Address  To verify the hostname, you will need to use  deis.minikube  as hostname instead of  deis.192.168.99.100.nip.io  in the next section. We will also use it in the next step.",
            "title": "Using DNSMasq"
        },
        {
            "location": "/quickstart/provider/minikube/dns/#verify-the-hostname",
            "text": "By default, any HTTP traffic for the hostname  deis  will be sent to the Workflow API service. To test that everything is connected properly you may validate connectivity using  curl :  $ curl http://deis.192.168.99.100.nip.io/v2/ && echo\n{\"detail\":\"Authentication credentials were not provided.\"}  You should see a failed request because we provided no credentials to the API server.  Remember the hostname, we will use it in the next step.  next: deploy your first app",
            "title": "Verify the hostname"
        },
        {
            "location": "/quickstart/provider/minikube/install-minikube/",
            "text": "Install Deis Workflow on Minikube\n\u00b6\n\n\nCheck Your Setup\n\u00b6\n\n\nFirst check that the \nhelm\n command is available and the version is v2.5.0 or newer.\n\n\n$ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\n\n\n\n\nEnsure the \nkubectl\n client is installed and can connect to your Kubernetes cluster.\n\n\nAdd the Deis Chart Repository\n\u00b6\n\n\nThe Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single \nhelm install deis/workflow --namespace deis\n command.\n\n\nAdd this repository to Helm:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\n\n\n\nInstall Deis Workflow\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow by running:\n\n\n$ helm install deis/workflow --namespace deis --set router.host_port.enabled=true\n\n\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nIf it's preferred to have \nkubectl\n automatically update as the pod states change, run (type Ctrl-C to stop the watch):\n\n\n$ kubectl --namespace=deis get pods -w\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, Deis Workflow is up and running!\n\n\nNext, \nconfigure dns\n so you can register your first user and deploy an application.",
            "title": "Install Workflow"
        },
        {
            "location": "/quickstart/provider/minikube/install-minikube/#install-deis-workflow-on-minikube",
            "text": "",
            "title": "Install Deis Workflow on Minikube"
        },
        {
            "location": "/quickstart/provider/minikube/install-minikube/#check-your-setup",
            "text": "First check that the  helm  command is available and the version is v2.5.0 or newer.  $ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}  Ensure the  kubectl  client is installed and can connect to your Kubernetes cluster.",
            "title": "Check Your Setup"
        },
        {
            "location": "/quickstart/provider/minikube/install-minikube/#add-the-deis-chart-repository",
            "text": "The Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single  helm install deis/workflow --namespace deis  command.  Add this repository to Helm:  $ helm repo add deis https://charts.deis.com/workflow",
            "title": "Add the Deis Chart Repository"
        },
        {
            "location": "/quickstart/provider/minikube/install-minikube/#install-deis-workflow",
            "text": "Now that Helm is installed and the repository has been added, install Workflow by running:  $ helm install deis/workflow --namespace deis --set router.host_port.enabled=true  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  If it's preferred to have  kubectl  automatically update as the pod states change, run (type Ctrl-C to stop the watch):  $ kubectl --namespace=deis get pods -w  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-router-k1ond             1/1       Running   0          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m  Once all of the pods are in the  READY  state, Deis Workflow is up and running!  Next,  configure dns  so you can register your first user and deploy an application.",
            "title": "Install Deis Workflow"
        },
        {
            "location": "/quickstart/deploy-an-app/",
            "text": "Determine Your Host and Hostname Values\n\u00b6\n\n\nFor the rest of this example we will refer to a special variables called \n$hostname\n. Please choose one of the two methods for building your \n$hostname\n.\n\n\nOption 1: Standard Installation\n\u00b6\n\n\nFor a standard installation that includes deis-router, you can calculate the hostname value using its public IP address and a wildcard DNS record.\n\n\nIf your router IP is \n1.1.1.1\n, its \n$hostname\n will be \ndeis.1.1.1.1.nip.io\n. You can find your IP address by running:\n\n\nkubectl --namespace=deis describe svc deis-router\n\n\n\n\nIf you do not have an load balancer IP, the router automatically forwards traffic from a kubernetes node to the router. In this case, use the IP of a kubernetes node and the node\nport that routes to port 80 on the controller.\n\n\nDeis workflow requires a wildcard DNS record to dynamically map app names to the router.\n\n\nOption 2: Experimental Native Ingress Installation\n\u00b6\n\n\nIn this example, the user should already have DNS set up pointing to their known host. The \n$hostname\n value can be calculated by prepending \ndeis.\n to the value set in \ncontroller.platform_domain\n.\n\n\nRegister an Admin User\n\u00b6\n\n\nThe first user to register against Deis Workflow will automatically be given administrative privileges.\n\n\nUse the controller \n$hostname\n to register a user in the cluster.\n\n\n$ deis register http://$hostname\nusername: admin\npassword:\npassword (confirm):\nemail: jhansen@deis.com\nRegistered admin\nLogged in as admin\n$ deis whoami\nYou are admin at http://$hostname\n\n\n\n\nYou have now registered your first user and you are ready to deploy an application.\n\n\nDeploy an Application\n\u00b6\n\n\nDeis Workflow supports three different types of applications, Buildpacks,\nDockerfiles and Docker Images. Our first application will be a simple Docker\nImage-based application, so you don't have to wrestle with checking out code.\n\n\nRun \ndeis create\n to create a new application on Deis Workflow. If you do not\nspecify a name for your application, Workflow automatically generates a\nfriendly (and sometimes funny) name.\n\n\n$ deis create --no-remote\nCreating Application... done, created proper-barbecue\nIf you want to add a git remote for this app later, use `deis git:remote -a proper-barbecue`\n\n\n\n\nOur application has been created and named \nproper-barbecue\n. As with the\n\ndeis\n hostname, any HTTP traffic to \nproper-barbecue\n will be automatically\nrouted to your application pods by the edge router.\n\n\nLet's use the CLI to tell the platform to deploy an application and then use curl to send a request to the app:\n\n\n$ deis pull deis/example-go -a proper-barbecue\nCreating build... done\n$ curl http://proper-barbecue.$hostname\nPowered by Deis\n\n\n\n\n\n\nNote\nIf you see a 404 error, make sure you specified your application name with \n-a <appname>\n!\n\n\n\n\n\n\nWorkflow's edge router knows all about application names and automatically\nsends traffic to the right application. The router sends traffic for\n\nproper-barbecue.104.197.125.75.nip.io\n to your app, just like\n\ndeis.104.197.125.75.nip.io\n was sent to the Workflow API service.\n\n\nChange Application Configuration\n\u00b6\n\n\nNext, let's change some configuration using the CLI. Our example app is built\nto read configuration from the environment. By using \ndeis config:set\n we can\nchange how the application behaves:\n\n\n$ deis config:set POWERED_BY=\"Docker Images + Kubernetes\" -a proper-barbecue\nCreating config... done\n\n=== proper-barbecue Config\nPOWERED_BY      Docker Images + Kubernetes\n\n\n\n\nBehind the scenes, Workflow creates a new release for your application and uses\nKubernetes to provide a zero-downtime rolling deploy to the new release!\n\n\nValidate that our configuration change has worked:\n\n\n$ curl http://proper-barbecue.104.197.125.75.nip.io\nPowered by Docker Images + Kubernetes\n\n\n\n\nScale Your Application\n\u00b6\n\n\nLast, let's scale our application by adding more application processes. Using the CLI you can easily add and remove\nadditional processes to service requests:\n\n\n$ deis scale cmd=2 -a proper-barbecue\nScaling processes... but first, coffee!\ndone in 36s\n=== proper-barbecue Processes\n--- cmd:\nproper-barbecue-v18-cmd-rk644 up (v18)\nproper-barbecue-v18-cmd-0ag04 up (v18)\n\n\n\n\nCongratulations! You have deployed, configured, and scaled your first application using Deis Workflow.\n\n\nGoing Further\n\u00b6\n\n\nThere is a lot more you can do with Deis Workflow, play around with the CLI:\n\n\n\n\nImportant\n\n\nIn order to have permission to push an app you must add a SSH key to your user on the Deis Workflow.\nFor more information, please check \nUsers and SSH Keys\n and \nTroubleshooting Workflow\n.\n\n\n\n\n\n\nRoll back to a previous release with \ndeis rollback -a proper-barbecue\n\n\nSee application logs with \ndeis logs -a proper-barbecue\n\n\nTry one of our other example applications like:\n\n\ndeis/example-ruby-sinatra\n\n\ndeis/example-nodejs-express\n\n\ndeis/example-java-jetty\n\n\n\n\n\n\nRead about using application \nBuildpacks\n or \nDockerfiles\n\n\nJoin our \n#community slack channel\n and meet the team!",
            "title": "Deploy Your First App"
        },
        {
            "location": "/quickstart/deploy-an-app/#determine-your-host-and-hostname-values",
            "text": "For the rest of this example we will refer to a special variables called  $hostname . Please choose one of the two methods for building your  $hostname .",
            "title": "Determine Your Host and Hostname Values"
        },
        {
            "location": "/quickstart/deploy-an-app/#option-1-standard-installation",
            "text": "For a standard installation that includes deis-router, you can calculate the hostname value using its public IP address and a wildcard DNS record.  If your router IP is  1.1.1.1 , its  $hostname  will be  deis.1.1.1.1.nip.io . You can find your IP address by running:  kubectl --namespace=deis describe svc deis-router  If you do not have an load balancer IP, the router automatically forwards traffic from a kubernetes node to the router. In this case, use the IP of a kubernetes node and the node\nport that routes to port 80 on the controller.  Deis workflow requires a wildcard DNS record to dynamically map app names to the router.",
            "title": "Option 1: Standard Installation"
        },
        {
            "location": "/quickstart/deploy-an-app/#option-2-experimental-native-ingress-installation",
            "text": "In this example, the user should already have DNS set up pointing to their known host. The  $hostname  value can be calculated by prepending  deis.  to the value set in  controller.platform_domain .",
            "title": "Option 2: Experimental Native Ingress Installation"
        },
        {
            "location": "/quickstart/deploy-an-app/#register-an-admin-user",
            "text": "The first user to register against Deis Workflow will automatically be given administrative privileges.  Use the controller  $hostname  to register a user in the cluster.  $ deis register http://$hostname\nusername: admin\npassword:\npassword (confirm):\nemail: jhansen@deis.com\nRegistered admin\nLogged in as admin\n$ deis whoami\nYou are admin at http://$hostname  You have now registered your first user and you are ready to deploy an application.",
            "title": "Register an Admin User"
        },
        {
            "location": "/quickstart/deploy-an-app/#deploy-an-application",
            "text": "Deis Workflow supports three different types of applications, Buildpacks,\nDockerfiles and Docker Images. Our first application will be a simple Docker\nImage-based application, so you don't have to wrestle with checking out code.  Run  deis create  to create a new application on Deis Workflow. If you do not\nspecify a name for your application, Workflow automatically generates a\nfriendly (and sometimes funny) name.  $ deis create --no-remote\nCreating Application... done, created proper-barbecue\nIf you want to add a git remote for this app later, use `deis git:remote -a proper-barbecue`  Our application has been created and named  proper-barbecue . As with the deis  hostname, any HTTP traffic to  proper-barbecue  will be automatically\nrouted to your application pods by the edge router.  Let's use the CLI to tell the platform to deploy an application and then use curl to send a request to the app:  $ deis pull deis/example-go -a proper-barbecue\nCreating build... done\n$ curl http://proper-barbecue.$hostname\nPowered by Deis   Note If you see a 404 error, make sure you specified your application name with  -a <appname> !    Workflow's edge router knows all about application names and automatically\nsends traffic to the right application. The router sends traffic for proper-barbecue.104.197.125.75.nip.io  to your app, just like deis.104.197.125.75.nip.io  was sent to the Workflow API service.",
            "title": "Deploy an Application"
        },
        {
            "location": "/quickstart/deploy-an-app/#change-application-configuration",
            "text": "Next, let's change some configuration using the CLI. Our example app is built\nto read configuration from the environment. By using  deis config:set  we can\nchange how the application behaves:  $ deis config:set POWERED_BY=\"Docker Images + Kubernetes\" -a proper-barbecue\nCreating config... done\n\n=== proper-barbecue Config\nPOWERED_BY      Docker Images + Kubernetes  Behind the scenes, Workflow creates a new release for your application and uses\nKubernetes to provide a zero-downtime rolling deploy to the new release!  Validate that our configuration change has worked:  $ curl http://proper-barbecue.104.197.125.75.nip.io\nPowered by Docker Images + Kubernetes",
            "title": "Change Application Configuration"
        },
        {
            "location": "/quickstart/deploy-an-app/#scale-your-application",
            "text": "Last, let's scale our application by adding more application processes. Using the CLI you can easily add and remove\nadditional processes to service requests:  $ deis scale cmd=2 -a proper-barbecue\nScaling processes... but first, coffee!\ndone in 36s\n=== proper-barbecue Processes\n--- cmd:\nproper-barbecue-v18-cmd-rk644 up (v18)\nproper-barbecue-v18-cmd-0ag04 up (v18)  Congratulations! You have deployed, configured, and scaled your first application using Deis Workflow.",
            "title": "Scale Your Application"
        },
        {
            "location": "/quickstart/deploy-an-app/#going-further",
            "text": "There is a lot more you can do with Deis Workflow, play around with the CLI:   Important  In order to have permission to push an app you must add a SSH key to your user on the Deis Workflow.\nFor more information, please check  Users and SSH Keys  and  Troubleshooting Workflow .    Roll back to a previous release with  deis rollback -a proper-barbecue  See application logs with  deis logs -a proper-barbecue  Try one of our other example applications like:  deis/example-ruby-sinatra  deis/example-nodejs-express  deis/example-java-jetty    Read about using application  Buildpacks  or  Dockerfiles  Join our  #community slack channel  and meet the team!",
            "title": "Going Further"
        },
        {
            "location": "/understanding-workflow/concepts/",
            "text": "Concepts\n\u00b6\n\n\nDeis Workflow is a lightweight application platform that deploys and scales\nTwelve-Factor apps as containers across a Kubernetes cluster.\n\n\nTwelve-Factor Applications\n\u00b6\n\n\nThe \nTwelve-Factor App\n is a methodology for building modern\napplications that can be scaled across a distributed system.\n\n\nTwelve-factor is a valuable synthesis of years of experience with\nsoftware-as-a-service apps in the wild, particularly on the\nHeroku platform.\n\n\nWorkflow is designed to run applications that adhere to the \nTwelve-Factor App\n\nmethodology and best practices.\n\n\nKubernetes\n\u00b6\n\n\nKubernetes\n is an open-source cluster manager developed by Google and\ndonated to the \nCloud Native Compute Foundation\n. Kubernetes manages all\nthe activity on your cluster, including: desired state convergence, stable\nservice addresses, health monitoring, service discovery, and DNS resolution.\n\n\nWorkflow builds upon Kubernetes abstractions like Services,\nDeployments and Pods to provide a developer-friendly experience.\nBuilding containers directly from application source code, aggregating logs,\nand managing deployment configurations and app releases are just some of the\nfeatures Workflow adds.\n\n\nDeis Workflow is a set of Kubernetes-native components, installable via\n\nHelm\n. Systems engineers who are familiar with Kubernetes will feel right\nat home running Workflow.\n\n\nSee the \ncomponents\n overview for more detail.\n\n\nDocker\n\u00b6\n\n\nDocker\n is an open source project to build, ship and run any\napplication as a lightweight, portable, self-sufficient container.\n\n\nIf you have not yet converted your application to containers, Workflow provides\na simple and straightforward \"source to Docker image\" capability. Supporting\nmultiple language runtimes via community \nbuildpacks\n, building your application\nin a container can be as easy as \ngit push deis master\n.\n\n\nApplications which are packaged via a buildpack are run in Docker containers as\npart of the \nslugrunner\n process. View the \nslugrunner component\n\nfor more information.\n\n\nApplications which use either a Dockerfile or reference external Docker\nimages are launched unmodified.\n\n\nApplications\n\u00b6\n\n\nWorkflow is designed around the concept of an \napplication\n, or app.\n\n\nApplications come in one of three forms:\n\n\n\n\na collection of source files stored in a \ngit\n repository\n\n\na Dockerfile and associated source files stored in a \ngit\n repository\n\n\na reference to an existing image at a Docker repository\n\n\n\n\nApplications are identified by a unique name for easy reference. If you do not\nspecify a name when creating your application, Workflow generates one for you.\nWorkflow also manages related information, including domain names, SSL\ncertificates, and developer-provided configuration.\n\n\nBuild, Release, Run\n\u00b6\n\n\n\n\nBuild Stage\n\u00b6\n\n\nThe \nbuilder\n component processes incoming \ngit push deis master\n requests\nand manages your application packaging.\n\n\nIf your application is using a \nbuildpack\n, builder will launch an ephemeral\njob to extract and execute the packaging instructions. The resulting\napplication artifact is stored by the platform for execution during the run\nstage.\n\n\nIf instead builder finds a \nDockerfile\n, it follows those instructions to\ncreate a Docker image. The resulting artifact is stored in a Deis-managed registry which\nwill be referenced during the run stage.\n\n\nIf another system already builds and packages your application, that container\nartifact can be used directly. When referencing an \nexternal Docker\nimage\n, the builder component doesn't attempt to repackage your\napp.\n\n\nRelease Stage\n\u00b6\n\n\nDuring the release stage, a \nbuild\n is combined with \napplication configuration\n\nto create a new, numbered \nrelease\n. New releases are created any time a new\nbuild is created or application configuration is changed. Tracking releases as a\n\"write-only ledger\" this way makes it easy to rollback to any previous release.\n\n\nRun Stage\n\u00b6\n\n\nThe run stage deploys the new release to the underlying Kubernetes cluster by\nchanging the Deployment object which references the new release.\nBy managing the desired replica count, Workflow\norchestrates a zero-downtime, rolling update of your application. Once\nsuccessfully updated, Workflow removes the last reference to the old release.\nNote that during the deploy, your application will be running in a mixed mode.\n\n\nBacking Services\n\u00b6\n\n\nWorkflow treats all persistent services such as databases, caches, storage,\nmessaging systems, and other \nbacking services\n as resources managed\nseparately from your application. This philosophy aligns with Twelve-Factor\nbest practices.\n\n\nApplications attach to backing services using \nenvironment variables\n.\nBecause apps are decoupled from backing services, they are free to\nscale up independently, to use services provided by other apps, or to switch\nto external or third-party vendor services.\n\n\nSee Also\n\u00b6\n\n\n\n\nWorkflow Architecture\n\n\nWorkflow Components",
            "title": "Concepts"
        },
        {
            "location": "/understanding-workflow/concepts/#concepts",
            "text": "Deis Workflow is a lightweight application platform that deploys and scales\nTwelve-Factor apps as containers across a Kubernetes cluster.",
            "title": "Concepts"
        },
        {
            "location": "/understanding-workflow/concepts/#twelve-factor-applications",
            "text": "The  Twelve-Factor App  is a methodology for building modern\napplications that can be scaled across a distributed system.  Twelve-factor is a valuable synthesis of years of experience with\nsoftware-as-a-service apps in the wild, particularly on the\nHeroku platform.  Workflow is designed to run applications that adhere to the  Twelve-Factor App \nmethodology and best practices.",
            "title": "Twelve-Factor Applications"
        },
        {
            "location": "/understanding-workflow/concepts/#kubernetes",
            "text": "Kubernetes  is an open-source cluster manager developed by Google and\ndonated to the  Cloud Native Compute Foundation . Kubernetes manages all\nthe activity on your cluster, including: desired state convergence, stable\nservice addresses, health monitoring, service discovery, and DNS resolution.  Workflow builds upon Kubernetes abstractions like Services,\nDeployments and Pods to provide a developer-friendly experience.\nBuilding containers directly from application source code, aggregating logs,\nand managing deployment configurations and app releases are just some of the\nfeatures Workflow adds.  Deis Workflow is a set of Kubernetes-native components, installable via Helm . Systems engineers who are familiar with Kubernetes will feel right\nat home running Workflow.  See the  components  overview for more detail.",
            "title": "Kubernetes"
        },
        {
            "location": "/understanding-workflow/concepts/#docker",
            "text": "Docker  is an open source project to build, ship and run any\napplication as a lightweight, portable, self-sufficient container.  If you have not yet converted your application to containers, Workflow provides\na simple and straightforward \"source to Docker image\" capability. Supporting\nmultiple language runtimes via community  buildpacks , building your application\nin a container can be as easy as  git push deis master .  Applications which are packaged via a buildpack are run in Docker containers as\npart of the  slugrunner  process. View the  slugrunner component \nfor more information.  Applications which use either a Dockerfile or reference external Docker\nimages are launched unmodified.",
            "title": "Docker"
        },
        {
            "location": "/understanding-workflow/concepts/#applications",
            "text": "Workflow is designed around the concept of an  application , or app.  Applications come in one of three forms:   a collection of source files stored in a  git  repository  a Dockerfile and associated source files stored in a  git  repository  a reference to an existing image at a Docker repository   Applications are identified by a unique name for easy reference. If you do not\nspecify a name when creating your application, Workflow generates one for you.\nWorkflow also manages related information, including domain names, SSL\ncertificates, and developer-provided configuration.",
            "title": "Applications"
        },
        {
            "location": "/understanding-workflow/concepts/#build-release-run",
            "text": "",
            "title": "Build, Release, Run"
        },
        {
            "location": "/understanding-workflow/concepts/#build-stage",
            "text": "The  builder  component processes incoming  git push deis master  requests\nand manages your application packaging.  If your application is using a  buildpack , builder will launch an ephemeral\njob to extract and execute the packaging instructions. The resulting\napplication artifact is stored by the platform for execution during the run\nstage.  If instead builder finds a  Dockerfile , it follows those instructions to\ncreate a Docker image. The resulting artifact is stored in a Deis-managed registry which\nwill be referenced during the run stage.  If another system already builds and packages your application, that container\nartifact can be used directly. When referencing an  external Docker\nimage , the builder component doesn't attempt to repackage your\napp.",
            "title": "Build Stage"
        },
        {
            "location": "/understanding-workflow/concepts/#release-stage",
            "text": "During the release stage, a  build  is combined with  application configuration \nto create a new, numbered  release . New releases are created any time a new\nbuild is created or application configuration is changed. Tracking releases as a\n\"write-only ledger\" this way makes it easy to rollback to any previous release.",
            "title": "Release Stage"
        },
        {
            "location": "/understanding-workflow/concepts/#run-stage",
            "text": "The run stage deploys the new release to the underlying Kubernetes cluster by\nchanging the Deployment object which references the new release.\nBy managing the desired replica count, Workflow\norchestrates a zero-downtime, rolling update of your application. Once\nsuccessfully updated, Workflow removes the last reference to the old release.\nNote that during the deploy, your application will be running in a mixed mode.",
            "title": "Run Stage"
        },
        {
            "location": "/understanding-workflow/concepts/#backing-services",
            "text": "Workflow treats all persistent services such as databases, caches, storage,\nmessaging systems, and other  backing services  as resources managed\nseparately from your application. This philosophy aligns with Twelve-Factor\nbest practices.  Applications attach to backing services using  environment variables .\nBecause apps are decoupled from backing services, they are free to\nscale up independently, to use services provided by other apps, or to switch\nto external or third-party vendor services.",
            "title": "Backing Services"
        },
        {
            "location": "/understanding-workflow/concepts/#see-also",
            "text": "Workflow Architecture  Workflow Components",
            "title": "See Also"
        },
        {
            "location": "/understanding-workflow/architecture/",
            "text": "Architecture\n\u00b6\n\n\nDeis Workflow is built using a service oriented architecture. All components\nare published as a set of container images which can be deployed to any\ncompliant Kubernetes cluster.\n\n\nOverview\n\u00b6\n\n\n\n\nOperators use \nHelm\n to configure and install the Workflow components which\ninterface directly with the underlying Kubernetes cluster. Service discovery,\ncontainer availability and networking are all delegated to Kubernetes, while\nWorkflow provides a clean and simple developer experience.\n\n\nPlatform Services\n\u00b6\n\n\n\n\nDeis Workflow provides additional functionality to your Kubernetes cluster, including:\n\n\n\n\nSource to Image Builder\n which compiles your Application code via Buildpacks or Dockerfiles\n\n\nCross-Pod Log Aggregation\n which gathers logs from all of your Application processes\n\n\nSimple REST API\n which powers the CLI and any external integrations\n\n\nApplication release and rollback\n\n\nAuthentication and Authorization to Application resources\n\n\nHTTP/HTTPS edge routing\n for your Applications\n\n\n\n\nKubernetes-Native\n\u00b6\n\n\nAll platform components and applications deployed via Workflow expect to be\nrunning on an existing Kubernetes cluster. This means that you can happily run\nyour Kubernetes-native workloads next to applications that are managed through\nDeis Workflow.\n\n\n\n\nApplication Layout and Edge Routing\n\u00b6\n\n\nBy default Workflow creates per-application Namespaces and Services so you can\neasily connect your applications to other on-cluster services through standard\nKubernetes mechanisms.\n\n\n\n\nThe router component is responsible for routing HTTP/s traffic to your\nApplications as well as proxying \ngit push\n and platform API traffic.\n\n\nBy default, the router component is deployed as a Kubernetes service with type\n\nLoadBalancer\n; which, depending on your configuration, will provision a\ncloud-native load balancer automatically.\n\n\nThe router automatically discovers routable Applications, SSL/TLS certificates\nand application-specific configurations through the use of Kubernetes\nannotations. Any changes to router configuration or certificates are applied\nwithin seconds.\n\n\nTopologies\n\u00b6\n\n\nDeis Workflow no longer dictates a specific topology or server count for your\ndeployment. The platform components will happily run on single-server\nconfigurations as well as multi-server production clusters.",
            "title": "Architecture"
        },
        {
            "location": "/understanding-workflow/architecture/#architecture",
            "text": "Deis Workflow is built using a service oriented architecture. All components\nare published as a set of container images which can be deployed to any\ncompliant Kubernetes cluster.",
            "title": "Architecture"
        },
        {
            "location": "/understanding-workflow/architecture/#overview",
            "text": "Operators use  Helm  to configure and install the Workflow components which\ninterface directly with the underlying Kubernetes cluster. Service discovery,\ncontainer availability and networking are all delegated to Kubernetes, while\nWorkflow provides a clean and simple developer experience.",
            "title": "Overview"
        },
        {
            "location": "/understanding-workflow/architecture/#platform-services",
            "text": "Deis Workflow provides additional functionality to your Kubernetes cluster, including:   Source to Image Builder  which compiles your Application code via Buildpacks or Dockerfiles  Cross-Pod Log Aggregation  which gathers logs from all of your Application processes  Simple REST API  which powers the CLI and any external integrations  Application release and rollback  Authentication and Authorization to Application resources  HTTP/HTTPS edge routing  for your Applications",
            "title": "Platform Services"
        },
        {
            "location": "/understanding-workflow/architecture/#kubernetes-native",
            "text": "All platform components and applications deployed via Workflow expect to be\nrunning on an existing Kubernetes cluster. This means that you can happily run\nyour Kubernetes-native workloads next to applications that are managed through\nDeis Workflow.",
            "title": "Kubernetes-Native"
        },
        {
            "location": "/understanding-workflow/architecture/#application-layout-and-edge-routing",
            "text": "By default Workflow creates per-application Namespaces and Services so you can\neasily connect your applications to other on-cluster services through standard\nKubernetes mechanisms.   The router component is responsible for routing HTTP/s traffic to your\nApplications as well as proxying  git push  and platform API traffic.  By default, the router component is deployed as a Kubernetes service with type LoadBalancer ; which, depending on your configuration, will provision a\ncloud-native load balancer automatically.  The router automatically discovers routable Applications, SSL/TLS certificates\nand application-specific configurations through the use of Kubernetes\nannotations. Any changes to router configuration or certificates are applied\nwithin seconds.",
            "title": "Application Layout and Edge Routing"
        },
        {
            "location": "/understanding-workflow/architecture/#topologies",
            "text": "Deis Workflow no longer dictates a specific topology or server count for your\ndeployment. The platform components will happily run on single-server\nconfigurations as well as multi-server production clusters.",
            "title": "Topologies"
        },
        {
            "location": "/understanding-workflow/components/",
            "text": "Components\n\u00b6\n\n\nWorkflow is comprised of a number of small, independent services that combine\nto create a distributed PaaS. All Workflow components are deployed as services\n(and associated controllers) in your Kubernetes cluster. If you are interested\nwe have a more detailed exploration of the \nWorkflow\narchitecture\n.\n\n\nAll of the componentry for Workflow is built with composability in mind. If you\nneed to customize one of the components for your specific deployment or need\nthe functionality in your own project we invite you to give it a shot!\n\n\nController\n\u00b6\n\n\nProject Location:\n \ndeis/controller\n\n\nThe controller component is an HTTP API server which serves as the endpoint for\nthe \ndeis\n CLI. The controller provides all of the platform functionality as\nwell as interfacing with your Kubernetes cluster. The controller persists all\nof its data to the database component.\n\n\nDatabase\n\u00b6\n\n\nProject Location:\n \ndeis/postgres\n\n\nThe database component is a managed instance of \nPostgreSQL\n which holds a\nmajority of the platforms state. Backups and WAL files are pushed to object\nstorage via \nWAL-E\n. When the database is restarted, backups are fetched and\nreplayed from object storage so no data is lost.\n\n\nBuilder\n\u00b6\n\n\nProject Location:\n \ndeis/builder\n\n\nThe builder component is responsible for accepting code pushes via \nGit\n and\nmanaging the build process of your \nApplication\n. The builder process is:\n\n\n\n\nReceives incoming \ngit push\n requests over SSH\n\n\nAuthenticates the user via SSH key fingerprint\n\n\nAuthorizes the user's access to push code to the Application\n\n\nStarts the Application Build phase (see below)\n\n\nTriggers a new \nRelease\n via the Controller\n\n\n\n\nBuilder currently supports both buildpack and Dockerfile based builds.\n\n\nProject Location:\n \ndeis/slugbuilder\n\n\nFor Buildpack-based deploys, the builder component will launch a one-shot Pod\nin the \ndeis\n namespace. This pod runs \nslugbuilder\n component which handles\ndefault and custom buildpacks (specified by \nBUILDPACK_URL\n). The \"compiled\"\napplication results in a slug, consisting of your application code and all of\nits dependencies as determined by the buildpack. The slug is pushed to the\ncluster-configured object storage for later execution. For more information\nabout buildpacks see \nusing buildpacks\n.\n\n\nProject Location:\n \ndeis/dockerbuilder\n\n\nFor Applications which contain a \nDockerfile\n in the root of the repository,\n\nbuilder\n will instead launch the \ndockerbuilder\n to package your application.\nInstead of generating a slug, \ndockerbuilder\n generates a Docker image (using\nthe underlying Docker engine). The completed image is pushed to the managed\nDocker registry on cluster. For more information see \nusing Dockerfiles\n.\n\n\nSlugrunner\n\u00b6\n\n\nProject Location:\n \ndeis/slugrunner\n\n\nSlugrunner is the component responsible for executing buildpack-based\nApplications. Slugrunner receives slug information from the controller and\ndownloads the application slug just before launching your application\nprocesses.\n\n\nObject Storage\n\u00b6\n\n\nProject Location:\n \ndeis/minio\n\n\nAll of the Workflow components that need to persist data will ship them to the\nobject storage that was configured for the cluster.For example, database ships\nits WAL files, registry stores Docker images, and slugbuilder stores slugs.\n\n\nWorkflow supports either on or off-cluster storage. For production deployments\nwe highly recommend that you configure \noff-cluster object storage\n.\n\n\nTo facilitate experimentation, development and test environments, the default charts for\nWorkflow include on-cluster object storage via \nminio\n.\n\n\nIf you also feel comfortable using Kubernetes persistent volumes you may\nconfigure minio to use persistent storage available in your environment.\n\n\nRegistry\n\u00b6\n\n\nProject Location:\n \ndeis/registry\n\n\nThe registry component is a managed docker registry which holds application\nimages generated from the builder component. Registry persists the Docker image\nimages to either local storage (in development mode) or to object storage\nconfigured for the cluster.\n\n\nRouter\n\u00b6\n\n\nProject Location:\n \ndeis/router\n\n\nThe router component is based on \nNginx\n and is responsible for routing\ninbound HTTP(S) traffic to your applications. The default workflow charts\nprovision a Kubernetes service in the \ndeis\n namespace with a service type of\n\nLoadBalancer\n. Depending on your Kubernetes configuration, this may provision\na cloud-based loadbalancer automatically.\n\n\nThe router component uses Kubernetes annotations for both Application discovery\nas well as router configuration. For more detailed documentation and possible\nconfiguration view the router \nproject documentation\n.\n\n\nLogger: fluentd, logger\n\u00b6\n\n\nThe logging subsystem consists of two components. Fluentd handles log shipping\nand logger maintains a ring-buffer of application logs.\n\n\nProject Location:\n \ndeis/fluentd\n\n\nFluentd is deployed to your Kubernetes cluster via Daemon Sets. Fluentd\nsubscribes to all container logs, decorates the output with Kubernetes metadata\nand can be configured to drain logs to multiple destinations. By default,\nfluentd ships logs to the logger component, which powers \ndeis logs\n.\n\n\nProject Location:\n \ndeis/logger\n\n\nThe \nlogger\n component receives log streams from \nfluentd\n, collating by\nApplication name. Logger does not persist logs to disk, instead maintaining an\nin-memory ring buffer. For more information on logger see the \nproject\ndocumentation\n.\n\n\nMonitor\n\u00b6\n\n\nProject Location:\n \ndeis/monitor\n\n\nThe monitoring subsystem consists of three components: Telegraf, InfluxDB and Grafana.\n\n\nTelegraf is the is the metrics collection agent that runs using the daemon set API. It runs on\nevery worker node in the cluster, fetches information about the pods currently running and ships it\nto InfluxDB.\n\n\nInfluxDB is a database that stores the metrics collected by Telegraf. Out of the box, it does not\npersist to disk, but you can set it up to back it with a persisitent volume or swap this out with\na more robust InfluxDB setup in a production setting.\n\n\nGrafana is a standalone graphing application. It natively supports InfluxDB as a datasource and\nprovides a robust engine for creating dashboards on top of timeseries data. Workflow provides a few\ndashboards out of the box for monitoring Deis Workflow and Kubernetes. The dashboards can be used\nas a starting point for creating more custom dashboards to suit a user's needs.\n\n\nWorkflow Manager\n\u00b6\n\n\nProject Location:\n \ndeis/workflow-manager\n\n\nWorkflow Manager\n will regularly check your cluster against the latest stable\ncomponents. If components are missing due to failure or are simply out of date,\nWorkflow operators will know at a glance. By default, this submits component\nand version information to Deis' version service. If you prefer, you may\ndisable the function by setting \nWORKFLOW_MANAGER_CHECKVERSIONS\n to false in\nWorkflow Manager's Deployment.\n\n\nSee Also\n\u00b6\n\n\n\n\nWorkflow Concepts\n\n\nWorkflow Architecture",
            "title": "Components"
        },
        {
            "location": "/understanding-workflow/components/#components",
            "text": "Workflow is comprised of a number of small, independent services that combine\nto create a distributed PaaS. All Workflow components are deployed as services\n(and associated controllers) in your Kubernetes cluster. If you are interested\nwe have a more detailed exploration of the  Workflow\narchitecture .  All of the componentry for Workflow is built with composability in mind. If you\nneed to customize one of the components for your specific deployment or need\nthe functionality in your own project we invite you to give it a shot!",
            "title": "Components"
        },
        {
            "location": "/understanding-workflow/components/#controller",
            "text": "Project Location:   deis/controller  The controller component is an HTTP API server which serves as the endpoint for\nthe  deis  CLI. The controller provides all of the platform functionality as\nwell as interfacing with your Kubernetes cluster. The controller persists all\nof its data to the database component.",
            "title": "Controller"
        },
        {
            "location": "/understanding-workflow/components/#database",
            "text": "Project Location:   deis/postgres  The database component is a managed instance of  PostgreSQL  which holds a\nmajority of the platforms state. Backups and WAL files are pushed to object\nstorage via  WAL-E . When the database is restarted, backups are fetched and\nreplayed from object storage so no data is lost.",
            "title": "Database"
        },
        {
            "location": "/understanding-workflow/components/#builder",
            "text": "Project Location:   deis/builder  The builder component is responsible for accepting code pushes via  Git  and\nmanaging the build process of your  Application . The builder process is:   Receives incoming  git push  requests over SSH  Authenticates the user via SSH key fingerprint  Authorizes the user's access to push code to the Application  Starts the Application Build phase (see below)  Triggers a new  Release  via the Controller   Builder currently supports both buildpack and Dockerfile based builds.  Project Location:   deis/slugbuilder  For Buildpack-based deploys, the builder component will launch a one-shot Pod\nin the  deis  namespace. This pod runs  slugbuilder  component which handles\ndefault and custom buildpacks (specified by  BUILDPACK_URL ). The \"compiled\"\napplication results in a slug, consisting of your application code and all of\nits dependencies as determined by the buildpack. The slug is pushed to the\ncluster-configured object storage for later execution. For more information\nabout buildpacks see  using buildpacks .  Project Location:   deis/dockerbuilder  For Applications which contain a  Dockerfile  in the root of the repository, builder  will instead launch the  dockerbuilder  to package your application.\nInstead of generating a slug,  dockerbuilder  generates a Docker image (using\nthe underlying Docker engine). The completed image is pushed to the managed\nDocker registry on cluster. For more information see  using Dockerfiles .",
            "title": "Builder"
        },
        {
            "location": "/understanding-workflow/components/#slugrunner",
            "text": "Project Location:   deis/slugrunner  Slugrunner is the component responsible for executing buildpack-based\nApplications. Slugrunner receives slug information from the controller and\ndownloads the application slug just before launching your application\nprocesses.",
            "title": "Slugrunner"
        },
        {
            "location": "/understanding-workflow/components/#object-storage",
            "text": "Project Location:   deis/minio  All of the Workflow components that need to persist data will ship them to the\nobject storage that was configured for the cluster.For example, database ships\nits WAL files, registry stores Docker images, and slugbuilder stores slugs.  Workflow supports either on or off-cluster storage. For production deployments\nwe highly recommend that you configure  off-cluster object storage .  To facilitate experimentation, development and test environments, the default charts for\nWorkflow include on-cluster object storage via  minio .  If you also feel comfortable using Kubernetes persistent volumes you may\nconfigure minio to use persistent storage available in your environment.",
            "title": "Object Storage"
        },
        {
            "location": "/understanding-workflow/components/#registry",
            "text": "Project Location:   deis/registry  The registry component is a managed docker registry which holds application\nimages generated from the builder component. Registry persists the Docker image\nimages to either local storage (in development mode) or to object storage\nconfigured for the cluster.",
            "title": "Registry"
        },
        {
            "location": "/understanding-workflow/components/#router",
            "text": "Project Location:   deis/router  The router component is based on  Nginx  and is responsible for routing\ninbound HTTP(S) traffic to your applications. The default workflow charts\nprovision a Kubernetes service in the  deis  namespace with a service type of LoadBalancer . Depending on your Kubernetes configuration, this may provision\na cloud-based loadbalancer automatically.  The router component uses Kubernetes annotations for both Application discovery\nas well as router configuration. For more detailed documentation and possible\nconfiguration view the router  project documentation .",
            "title": "Router"
        },
        {
            "location": "/understanding-workflow/components/#logger-fluentd-logger",
            "text": "The logging subsystem consists of two components. Fluentd handles log shipping\nand logger maintains a ring-buffer of application logs.  Project Location:   deis/fluentd  Fluentd is deployed to your Kubernetes cluster via Daemon Sets. Fluentd\nsubscribes to all container logs, decorates the output with Kubernetes metadata\nand can be configured to drain logs to multiple destinations. By default,\nfluentd ships logs to the logger component, which powers  deis logs .  Project Location:   deis/logger  The  logger  component receives log streams from  fluentd , collating by\nApplication name. Logger does not persist logs to disk, instead maintaining an\nin-memory ring buffer. For more information on logger see the  project\ndocumentation .",
            "title": "Logger: fluentd, logger"
        },
        {
            "location": "/understanding-workflow/components/#monitor",
            "text": "Project Location:   deis/monitor  The monitoring subsystem consists of three components: Telegraf, InfluxDB and Grafana.  Telegraf is the is the metrics collection agent that runs using the daemon set API. It runs on\nevery worker node in the cluster, fetches information about the pods currently running and ships it\nto InfluxDB.  InfluxDB is a database that stores the metrics collected by Telegraf. Out of the box, it does not\npersist to disk, but you can set it up to back it with a persisitent volume or swap this out with\na more robust InfluxDB setup in a production setting.  Grafana is a standalone graphing application. It natively supports InfluxDB as a datasource and\nprovides a robust engine for creating dashboards on top of timeseries data. Workflow provides a few\ndashboards out of the box for monitoring Deis Workflow and Kubernetes. The dashboards can be used\nas a starting point for creating more custom dashboards to suit a user's needs.",
            "title": "Monitor"
        },
        {
            "location": "/understanding-workflow/components/#workflow-manager",
            "text": "Project Location:   deis/workflow-manager  Workflow Manager  will regularly check your cluster against the latest stable\ncomponents. If components are missing due to failure or are simply out of date,\nWorkflow operators will know at a glance. By default, this submits component\nand version information to Deis' version service. If you prefer, you may\ndisable the function by setting  WORKFLOW_MANAGER_CHECKVERSIONS  to false in\nWorkflow Manager's Deployment.",
            "title": "Workflow Manager"
        },
        {
            "location": "/understanding-workflow/components/#see-also",
            "text": "Workflow Concepts  Workflow Architecture",
            "title": "See Also"
        },
        {
            "location": "/installing-workflow/system-requirements/",
            "text": "Requirements\n\u00b6\n\n\nTo run Deis Workflow on a Kubernetes cluster, there are a few requirements to keep in mind.\n\n\nKubernetes Versions\n\u00b6\n\n\nDeis Workflow requires Kubernetes v1.3.4 or later, or Kubernetes v1.6.2 or later. Kubernetes v1.6.0\nand v1.6.1 have \na bug\n that can prevent\n\ngit push deis master\n from completing successfully.\n\n\nStorage Requirements\n\u00b6\n\n\nA variety of Deis Workflow components rely on an object storage system to do their work, including storing application\nslugs, Docker images and database logs.\n\n\nDeis Workflow ships with Minio by default, which provides in-cluster, ephemeral object storage. This means that if the\nMinio server crashes, all data will be lost. Therefore, Minio should be used for development or testing only.\n\n\nWorkflow supports Amazon Simple Storage Service (S3), Google Cloud Storage (GCS), OpenShift Swift, and Azure Blob\nStorage. See \nconfiguring object storage\n for setup instructions.\n\n\nResource Requirements\n\u00b6\n\n\nWhen deploying Deis Workflow, it's important to provision machines with adequate resources. Deis is a highly-available\ndistributed system, which means that Deis components and your deployed applications will move around the cluster onto\nhealthy hosts as hosts leave the cluster for various reasons (failures, reboots, autoscalers, etc.). Because of this,\nyou should have ample spare resources on any machine in your cluster to withstand the additional load of running\nservices for failed machines.\n\n\nDeis Workflow components use about 2.5GB of memory across the cluster, and require approximately 30GB of hard disk\nspace. Because it may need to handle additional load if another one fails, each machine has minimum requirements of:\n\n\n\n\nAt least 4GB of RAM (more is better)\n\n\nAt least 40GB of hard disk space\n\n\n\n\nNote that these estimates are for Deis Workflow and Kubernetes only. Be sure to leave enough spare capacity for your\napplication footprint as well.\n\n\nRunning smaller machines will likely result in increased system load and has been known to result in component failures\nand instability.\n\n\n\n\nWarning\n\n\nWorkflow versions prior to 2.2 require '--insecure-registry' to function properly. Depending on\nyour Kubernetes and Docker configuration, setting\n\nEXTRA_DOCKER_OPTS=\"--insecure-registry=10.0.0.0/8\"\n may be sufficient.\n\n\n\n\nSELinux + OverlayFS\n\u00b6\n\n\nIf you are using Docker with OverlayFS, you must disable SELinux by adding \n--selinux-enabled=false\n to\n\nEXTRA_DOCKER_OPTS\n. For more background information, see:\n\n\n\n\nhttps://github.com/docker/docker/issues/7952\n\n\nhttps://github.com/deisthree/workflow/issues/63",
            "title": "System Requirements"
        },
        {
            "location": "/installing-workflow/system-requirements/#requirements",
            "text": "To run Deis Workflow on a Kubernetes cluster, there are a few requirements to keep in mind.",
            "title": "Requirements"
        },
        {
            "location": "/installing-workflow/system-requirements/#kubernetes-versions",
            "text": "Deis Workflow requires Kubernetes v1.3.4 or later, or Kubernetes v1.6.2 or later. Kubernetes v1.6.0\nand v1.6.1 have  a bug  that can prevent git push deis master  from completing successfully.",
            "title": "Kubernetes Versions"
        },
        {
            "location": "/installing-workflow/system-requirements/#storage-requirements",
            "text": "A variety of Deis Workflow components rely on an object storage system to do their work, including storing application\nslugs, Docker images and database logs.  Deis Workflow ships with Minio by default, which provides in-cluster, ephemeral object storage. This means that if the\nMinio server crashes, all data will be lost. Therefore, Minio should be used for development or testing only.  Workflow supports Amazon Simple Storage Service (S3), Google Cloud Storage (GCS), OpenShift Swift, and Azure Blob\nStorage. See  configuring object storage  for setup instructions.",
            "title": "Storage Requirements"
        },
        {
            "location": "/installing-workflow/system-requirements/#resource-requirements",
            "text": "When deploying Deis Workflow, it's important to provision machines with adequate resources. Deis is a highly-available\ndistributed system, which means that Deis components and your deployed applications will move around the cluster onto\nhealthy hosts as hosts leave the cluster for various reasons (failures, reboots, autoscalers, etc.). Because of this,\nyou should have ample spare resources on any machine in your cluster to withstand the additional load of running\nservices for failed machines.  Deis Workflow components use about 2.5GB of memory across the cluster, and require approximately 30GB of hard disk\nspace. Because it may need to handle additional load if another one fails, each machine has minimum requirements of:   At least 4GB of RAM (more is better)  At least 40GB of hard disk space   Note that these estimates are for Deis Workflow and Kubernetes only. Be sure to leave enough spare capacity for your\napplication footprint as well.  Running smaller machines will likely result in increased system load and has been known to result in component failures\nand instability.   Warning  Workflow versions prior to 2.2 require '--insecure-registry' to function properly. Depending on\nyour Kubernetes and Docker configuration, setting EXTRA_DOCKER_OPTS=\"--insecure-registry=10.0.0.0/8\"  may be sufficient.",
            "title": "Resource Requirements"
        },
        {
            "location": "/installing-workflow/system-requirements/#selinux-overlayfs",
            "text": "If you are using Docker with OverlayFS, you must disable SELinux by adding  --selinux-enabled=false  to EXTRA_DOCKER_OPTS . For more background information, see:   https://github.com/docker/docker/issues/7952  https://github.com/deisthree/workflow/issues/63",
            "title": "SELinux + OverlayFS"
        },
        {
            "location": "/installing-workflow/",
            "text": "Installing Deis Workflow\n\u00b6\n\n\nThis document is aimed at those who have already provisioned a \nKubernetes v1.3.4+\n cluster\nand want to install Deis Workflow. If help is required getting started with Kubernetes and\nDeis Workflow, follow the \nquickstart guide\n for assistance.\n\n\nPrerequisites\n\u00b6\n\n\n\n\nVerify the \nKubernetes system requirements\n\n\nInstall \nHelm and Deis Workflow CLI\n tools\n\n\n\n\nCheck Your Setup\n\u00b6\n\n\nCheck that the \nhelm\n command is available and the version is v2.5.0 or newer.\n\n\n$ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\n\n\n\n\nCheck Your Authorization\n\u00b6\n\n\nIf your cluster uses \nRBAC\n for authorization, \nhelm\n will need to be granted the necessary permissions to create Workflow resources.\nThis can be done with the following commands:\n\n\n$ kubectl create sa tiller-deploy -n kube-system\n$ kubectl create clusterrolebinding helm --clusterrole=cluster-admin --serviceaccount=kube-system:tiller-deploy\n$ helm init --service-account=tiller-deploy\n\n\n\n\nIf \nhelm\n is already installed in cluster without sufficient rights, simply add \n--upgrade\n to the \ninit\n command above.\n\n\nNote\n: Specific \nhelm\n permissions haven't been sorted yet and details may change (watch \nhelm\n \ndocs\n)\n\n\nChoose Your Deployment Strategy\n\u00b6\n\n\nDeis Workflow includes everything it needs to run out of the box. However, these defaults are aimed at simplicity rather than\nproduction readiness. Production and staging deployments of Workflow should, at a minimum, use off-cluster storage\nwhich is used by Workflow components to store and backup critical data. Should an operator need to completely re-install\nWorkflow, the required components can recover from off-cluster storage. See the documentation for \nconfiguring object\nstorage\n for more details.\n\n\nMore rigorous installations would benefit from using outside sources for the following things:\n\n \nPostgres\n - For example AWS RDS.\n\n \nRegistry\n - This includes \nquay.io\n, \ndockerhub\n, \nAmazon ECR\n, and \nGoogle GCR\n.\n\n \nRedis\n - Such as AWS Elasticache\n\n \nInfluxDB\n and \nGrafana\n\n\n(Experimental) Kubernetes Native Ingress\n\u00b6\n\n\nWorkflow now offers \nexperimental native ingress\n to take advantage of native Kubernetes routing. Any compatible Kubernetes ingress controller can be used in place of Workflow's nginx-based deis-router. Follow \nthis guide\n to enable experimental native ingress.\n\n\nAdd the Deis Chart Repository\n\u00b6\n\n\nThe Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single \nhelm install deis/workflow --namespace deis\n command.\n\n\nAdd this repository to Helm:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\n\n\n\nInstall Deis Workflow\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow by running:\n\n\n$ helm install deis/workflow --namespace deis\n\n\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nIf it's preferred to have \nkubectl\n automatically update as the pod states change, run (type Ctrl-C to stop the watch):\n\n\n$ kubectl --namespace=deis get pods -w\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                                     READY     STATUS    RESTARTS   AGE\ndeis-builder-574483744-l15zj             1/1       Running   0          4m\ndeis-controller-3953262871-pncgq         1/1       Running   2          4m\ndeis-database-83844344-47ld6             1/1       Running   0          4m\ndeis-logger-176328999-wjckx              1/1       Running   4          4m\ndeis-logger-fluentd-zxnqb                1/1       Running   0          4m\ndeis-logger-redis-304849759-1f35p        1/1       Running   0          4m\ndeis-minio-676004970-nxqgt               1/1       Running   0          4m\ndeis-monitor-grafana-432627134-lnl2h     1/1       Running   0          4m\ndeis-monitor-influxdb-2729788615-m9b5n   1/1       Running   0          4m\ndeis-monitor-telegraf-wmcmn              1/1       Running   1          4m\ndeis-nsqd-3597503299-6mn2x               1/1       Running   0          4m\ndeis-registry-756475849-lwc6b            1/1       Running   1          4m\ndeis-registry-proxy-96c4p                1/1       Running   0          4m\ndeis-router-2126433040-6sl6z             1/1       Running   0          4m\ndeis-workflow-manager-2528409207-jkz2r   1/1       Running   0          4m\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, Deis Workflow is up and running!\n\n\nAfter installing Workflow, \nregister a user and deploy an application\n.",
            "title": "Installing Workflow"
        },
        {
            "location": "/installing-workflow/#installing-deis-workflow",
            "text": "This document is aimed at those who have already provisioned a  Kubernetes v1.3.4+  cluster\nand want to install Deis Workflow. If help is required getting started with Kubernetes and\nDeis Workflow, follow the  quickstart guide  for assistance.",
            "title": "Installing Deis Workflow"
        },
        {
            "location": "/installing-workflow/#prerequisites",
            "text": "Verify the  Kubernetes system requirements  Install  Helm and Deis Workflow CLI  tools",
            "title": "Prerequisites"
        },
        {
            "location": "/installing-workflow/#check-your-setup",
            "text": "Check that the  helm  command is available and the version is v2.5.0 or newer.  $ helm version\nClient: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.5.0\", GitCommit:\"012cb0ac1a1b2f888144ef5a67b8dab6c2d45be6\", GitTreeState:\"clean\"}",
            "title": "Check Your Setup"
        },
        {
            "location": "/installing-workflow/#check-your-authorization",
            "text": "If your cluster uses  RBAC  for authorization,  helm  will need to be granted the necessary permissions to create Workflow resources.\nThis can be done with the following commands:  $ kubectl create sa tiller-deploy -n kube-system\n$ kubectl create clusterrolebinding helm --clusterrole=cluster-admin --serviceaccount=kube-system:tiller-deploy\n$ helm init --service-account=tiller-deploy  If  helm  is already installed in cluster without sufficient rights, simply add  --upgrade  to the  init  command above.  Note : Specific  helm  permissions haven't been sorted yet and details may change (watch  helm   docs )",
            "title": "Check Your Authorization"
        },
        {
            "location": "/installing-workflow/#choose-your-deployment-strategy",
            "text": "Deis Workflow includes everything it needs to run out of the box. However, these defaults are aimed at simplicity rather than\nproduction readiness. Production and staging deployments of Workflow should, at a minimum, use off-cluster storage\nwhich is used by Workflow components to store and backup critical data. Should an operator need to completely re-install\nWorkflow, the required components can recover from off-cluster storage. See the documentation for  configuring object\nstorage  for more details.  More rigorous installations would benefit from using outside sources for the following things:   Postgres  - For example AWS RDS.   Registry  - This includes  quay.io ,  dockerhub ,  Amazon ECR , and  Google GCR .   Redis  - Such as AWS Elasticache   InfluxDB  and  Grafana",
            "title": "Choose Your Deployment Strategy"
        },
        {
            "location": "/installing-workflow/#experimental-kubernetes-native-ingress",
            "text": "Workflow now offers  experimental native ingress  to take advantage of native Kubernetes routing. Any compatible Kubernetes ingress controller can be used in place of Workflow's nginx-based deis-router. Follow  this guide  to enable experimental native ingress.",
            "title": "(Experimental) Kubernetes Native Ingress"
        },
        {
            "location": "/installing-workflow/#add-the-deis-chart-repository",
            "text": "The Deis Chart Repository contains everything needed to install Deis Workflow onto a Kubernetes cluster, with a single  helm install deis/workflow --namespace deis  command.  Add this repository to Helm:  $ helm repo add deis https://charts.deis.com/workflow",
            "title": "Add the Deis Chart Repository"
        },
        {
            "location": "/installing-workflow/#install-deis-workflow",
            "text": "Now that Helm is installed and the repository has been added, install Workflow by running:  $ helm install deis/workflow --namespace deis  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  If it's preferred to have  kubectl  automatically update as the pod states change, run (type Ctrl-C to stop the watch):  $ kubectl --namespace=deis get pods -w  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                                     READY     STATUS    RESTARTS   AGE\ndeis-builder-574483744-l15zj             1/1       Running   0          4m\ndeis-controller-3953262871-pncgq         1/1       Running   2          4m\ndeis-database-83844344-47ld6             1/1       Running   0          4m\ndeis-logger-176328999-wjckx              1/1       Running   4          4m\ndeis-logger-fluentd-zxnqb                1/1       Running   0          4m\ndeis-logger-redis-304849759-1f35p        1/1       Running   0          4m\ndeis-minio-676004970-nxqgt               1/1       Running   0          4m\ndeis-monitor-grafana-432627134-lnl2h     1/1       Running   0          4m\ndeis-monitor-influxdb-2729788615-m9b5n   1/1       Running   0          4m\ndeis-monitor-telegraf-wmcmn              1/1       Running   1          4m\ndeis-nsqd-3597503299-6mn2x               1/1       Running   0          4m\ndeis-registry-756475849-lwc6b            1/1       Running   1          4m\ndeis-registry-proxy-96c4p                1/1       Running   0          4m\ndeis-router-2126433040-6sl6z             1/1       Running   0          4m\ndeis-workflow-manager-2528409207-jkz2r   1/1       Running   0          4m  Once all of the pods are in the  READY  state, Deis Workflow is up and running!  After installing Workflow,  register a user and deploy an application .",
            "title": "Install Deis Workflow"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/",
            "text": "Configuring Object Storage\n\u00b6\n\n\nA variety of Deis Workflow components rely on an object storage system to do their work including storing application slugs, Docker images and database logs.\n\n\nDeis Workflow ships with \nMinio\n by default, which provides in-cluster, ephemeral object storage. This means that \nif the Minio server crashes, all data will be lost\n. Therefore, \nMinio should be used for development or testing only\n.\n\n\nConfiguring off-cluster Object Storage\n\u00b6\n\n\nEvery component that relies on object storage uses two inputs for configuration:\n\n\n\n\nComponent-specific environment variables (e.g. \nBUILDER_STORAGE\n and \nREGISTRY_STORAGE\n)\n\n\nAccess credentials stored as a Kubernetes secret named \nobjectstorage-keyfile\n\n\n\n\nThe helm chart for Deis Workflow can be easily configured to connect Workflow components to off-cluster object storage. Deis Workflow currently supports Google Compute Storage, Amazon S3, \nAzure Blob Storage\n and OpenStack Swift Storage.\n\n\nStep 1: Create storage buckets\n\u00b6\n\n\nCreate storage buckets for each of the Workflow subsystems: \nbuilder\n, \nregistry\n, and \ndatabase\n.\n\n\nDepending on your chosen object storage you may need to provide globally unique bucket names. If you are using S3, use hyphens instead of periods in the bucket names. Using periods in the bucket name will cause an \nssl certificate validation issue with S3\n.\n\n\nIf you provide credentials with sufficient access to the underlying storage, Workflow components will create the buckets if they do not exist.\n\n\nStep 2: Generate storage credentials\n\u00b6\n\n\nIf applicable, generate credentials that have create and write access to the storage buckets created in Step 1.\n\n\nIf you are using AWS S3 and your Kubernetes nodes are configured with appropriate \nIAM\n API keys via InstanceRoles, you do not need to create API credentials. Do, however, validate that the InstanceRole has appropriate permissions to the configured buckets!\n\n\nStep 3: Add Deis Repo\n\u00b6\n\n\nIf you haven't already added the Helm repo, do so with \nhelm repo add deis https://charts.deis.com/workflow\n\n\nStep 4: Configure Workflow Chart\n\u00b6\n\n\nOperators should configure object storage by editing the Helm values file before running \nhelm install\n. To do so:\n\n\n\n\nFetch the Helm values by running \nhelm inspect values deis/workflow > values.yaml\n\n\nUpdate the \nglobal/storage\n parameter to reference the platform you are using, e.g. \ns3\n, \nazure\n, \ngcs\n, or \nswift\n\n\nFind the corresponding section for your storage type and provide appropriate values including region, bucket names, and access credentials.\n\n\nSave your changes.\n\n\n\n\n\n\nNote\n\n\nAll values will be automatically (base64) encoded \nexcept\n the \nkey_json\n values under \ngcs\n/\ngcr\n.  These must be base64-encoded.  This is to support cleanly passing said encoded text via \nhelm --set\n cli functionality rather than attempting to pass the raw JSON data.  For example:\n\n\n$ helm install workflow --namespace deis \\\n    --set global.storage=gcs,gcs.key_json=\"$(cat /path/to/gcs_creds.json | base64 -w 0)\"\n\n\n\n\n\n\nYou are now ready to run \nhelm install deis/workflow --namespace deis -f values.yaml\n using your desired object storage.",
            "title": "Configuring Object Storage"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#configuring-object-storage",
            "text": "A variety of Deis Workflow components rely on an object storage system to do their work including storing application slugs, Docker images and database logs.  Deis Workflow ships with  Minio  by default, which provides in-cluster, ephemeral object storage. This means that  if the Minio server crashes, all data will be lost . Therefore,  Minio should be used for development or testing only .",
            "title": "Configuring Object Storage"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#configuring-off-cluster-object-storage",
            "text": "Every component that relies on object storage uses two inputs for configuration:   Component-specific environment variables (e.g.  BUILDER_STORAGE  and  REGISTRY_STORAGE )  Access credentials stored as a Kubernetes secret named  objectstorage-keyfile   The helm chart for Deis Workflow can be easily configured to connect Workflow components to off-cluster object storage. Deis Workflow currently supports Google Compute Storage, Amazon S3,  Azure Blob Storage  and OpenStack Swift Storage.",
            "title": "Configuring off-cluster Object Storage"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#step-1-create-storage-buckets",
            "text": "Create storage buckets for each of the Workflow subsystems:  builder ,  registry , and  database .  Depending on your chosen object storage you may need to provide globally unique bucket names. If you are using S3, use hyphens instead of periods in the bucket names. Using periods in the bucket name will cause an  ssl certificate validation issue with S3 .  If you provide credentials with sufficient access to the underlying storage, Workflow components will create the buckets if they do not exist.",
            "title": "Step 1: Create storage buckets"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#step-2-generate-storage-credentials",
            "text": "If applicable, generate credentials that have create and write access to the storage buckets created in Step 1.  If you are using AWS S3 and your Kubernetes nodes are configured with appropriate  IAM  API keys via InstanceRoles, you do not need to create API credentials. Do, however, validate that the InstanceRole has appropriate permissions to the configured buckets!",
            "title": "Step 2: Generate storage credentials"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#step-3-add-deis-repo",
            "text": "If you haven't already added the Helm repo, do so with  helm repo add deis https://charts.deis.com/workflow",
            "title": "Step 3: Add Deis Repo"
        },
        {
            "location": "/installing-workflow/configuring-object-storage/#step-4-configure-workflow-chart",
            "text": "Operators should configure object storage by editing the Helm values file before running  helm install . To do so:   Fetch the Helm values by running  helm inspect values deis/workflow > values.yaml  Update the  global/storage  parameter to reference the platform you are using, e.g.  s3 ,  azure ,  gcs , or  swift  Find the corresponding section for your storage type and provide appropriate values including region, bucket names, and access credentials.  Save your changes.    Note  All values will be automatically (base64) encoded  except  the  key_json  values under  gcs / gcr .  These must be base64-encoded.  This is to support cleanly passing said encoded text via  helm --set  cli functionality rather than attempting to pass the raw JSON data.  For example:  $ helm install workflow --namespace deis \\\n    --set global.storage=gcs,gcs.key_json=\"$(cat /path/to/gcs_creds.json | base64 -w 0)\"   You are now ready to run  helm install deis/workflow --namespace deis -f values.yaml  using your desired object storage.",
            "title": "Step 4: Configure Workflow Chart"
        },
        {
            "location": "/installing-workflow/configuring-postgres/",
            "text": "Configuring Postgres\n\u00b6\n\n\nDeis Workflow's controller component relies on a PostgreSQL database to store platform state.\n\n\nBy default, Deis Workflow ships with the \ndatabase\n component, which provides an in-cluster PostgreSQL database backed up to in-cluster or off-cluster \nobject storage\n. Currently, for object storage, which is utilized by \nseveral\n Workflow components, only off-cluster solutions such as S3 or GCS are recommended in production environments. Experience has shown that many operators already opting for off-cluster object storage similarly prefer to host Postgres off-cluster as well, using Amazon RDS or similar. When excercising both options, a Workflow installation becomes entirely stateless, and is thus restored or rebuilt with greater ease should the need ever arise.\n\n\nProvisioning off-cluster Postgres\n\u00b6\n\n\nFirst, provision a PostgreSQL RDBMS using the cloud provider or other infrastructure of your choice. Take care to ensure that security groups or other firewall rules will permit connectivity from your Kubernetes worker nodes, any of which may play host to the Workflow controller component.\n\n\nTake note of the following:\n\n\n\n\nThe hostname or public IP of your PostgreSQL RDBMS\n\n\nThe port on which your PostgreSQL RDBMS runs-- typically 5432\n\n\n\n\nWithin the off-cluster RDBMS, manually provision the following:\n\n\n\n\nA database user (take note of the username and password)\n\n\nA database owned by that user (take note of its name)\n\n\n\n\nIf you are able to log into the RDBMS as a superuser or a user with appropriate permissions, this process will \ntypically\n look like this:\n\n\n$ psql -h <host> -p <port> -d postgres -U <\"postgres\" or your own username>\n> create user <deis username; typically \"deis\"> with password '<password>';\n> create database <database name; typically \"deis\"> with owner <deis username>;\n> \\q\n\n\n\n\nConfiguring Workflow\n\u00b6\n\n\nThe Helm chart for Deis Workflow can be easily configured to connect the Workflow controller component to an off-cluster PostgreSQL database.\n\n\n\n\nStep 1:\n If you haven't already fetched the values, do so with \nhelm inspect values deis/workflow > values.yaml\n\n\nStep 2:\n Update database connection details by modifying \nvalues.yaml\n:\n\n\nUpdate the \ndatabase_location\n parameter to \noff-cluster\n.\n\n\nUpdate the values in the \n[database]\n configuration section to properly reflect all connection details.\n\n\nSave your changes.\n\n\nNote: you do not need to (and must not) base64 encode any values, as the Helm chart will automatically handle encoding as necessary.\n\n\n\n\n\n\n\n\nYou are now ready to \nhelm install deis/workflow --namespace deis -f values.yaml\n \nas usual\n.",
            "title": "Configuring Postgres"
        },
        {
            "location": "/installing-workflow/configuring-postgres/#configuring-postgres",
            "text": "Deis Workflow's controller component relies on a PostgreSQL database to store platform state.  By default, Deis Workflow ships with the  database  component, which provides an in-cluster PostgreSQL database backed up to in-cluster or off-cluster  object storage . Currently, for object storage, which is utilized by  several  Workflow components, only off-cluster solutions such as S3 or GCS are recommended in production environments. Experience has shown that many operators already opting for off-cluster object storage similarly prefer to host Postgres off-cluster as well, using Amazon RDS or similar. When excercising both options, a Workflow installation becomes entirely stateless, and is thus restored or rebuilt with greater ease should the need ever arise.",
            "title": "Configuring Postgres"
        },
        {
            "location": "/installing-workflow/configuring-postgres/#provisioning-off-cluster-postgres",
            "text": "First, provision a PostgreSQL RDBMS using the cloud provider or other infrastructure of your choice. Take care to ensure that security groups or other firewall rules will permit connectivity from your Kubernetes worker nodes, any of which may play host to the Workflow controller component.  Take note of the following:   The hostname or public IP of your PostgreSQL RDBMS  The port on which your PostgreSQL RDBMS runs-- typically 5432   Within the off-cluster RDBMS, manually provision the following:   A database user (take note of the username and password)  A database owned by that user (take note of its name)   If you are able to log into the RDBMS as a superuser or a user with appropriate permissions, this process will  typically  look like this:  $ psql -h <host> -p <port> -d postgres -U <\"postgres\" or your own username>\n> create user <deis username; typically \"deis\"> with password '<password>';\n> create database <database name; typically \"deis\"> with owner <deis username>;\n> \\q",
            "title": "Provisioning off-cluster Postgres"
        },
        {
            "location": "/installing-workflow/configuring-postgres/#configuring-workflow",
            "text": "The Helm chart for Deis Workflow can be easily configured to connect the Workflow controller component to an off-cluster PostgreSQL database.   Step 1:  If you haven't already fetched the values, do so with  helm inspect values deis/workflow > values.yaml  Step 2:  Update database connection details by modifying  values.yaml :  Update the  database_location  parameter to  off-cluster .  Update the values in the  [database]  configuration section to properly reflect all connection details.  Save your changes.  Note: you do not need to (and must not) base64 encode any values, as the Helm chart will automatically handle encoding as necessary.     You are now ready to  helm install deis/workflow --namespace deis -f values.yaml   as usual .",
            "title": "Configuring Workflow"
        },
        {
            "location": "/installing-workflow/configuring-registry/",
            "text": "Configuring Registry\n\u00b6\n\n\nDeis Workflow's builder component relies on a registry for storing application docker images.\n\n\nDeis Workflow ships with a \nregistry\n component by default, which provides an in-cluster Docker registry backed by the platform-configured \nobject storage\n. Operators might want to use an off-cluster registry for performance or security reasons.\n\n\nConfiguring Off-Cluster Private Registry\n\u00b6\n\n\nEvery component that relies on a registry uses two inputs for configuration:\n\n\n\n\nRegistry Location environment variable named \nDEIS_REGISTRY_LOCATION\n\n\nAccess credentials stored as a Kubernetes secret named \nregistry-secret\n\n\n\n\nThe Helm chart for Deis Workflow can be easily configured to connect Workflow components to off-cluster registry. Deis Workflow supports external registries which provide either short-lived tokens that are valid only for a specified amount of time or long-lived tokens (basic username/password) which are valid forever for authenticating to them. For those registries which provide short lived tokens for authentication, Deis Workflow will generate and refresh them such that the deployed apps will only have access to the short-lived tokens and not to the actual credentials for the registries.\n\n\nWhen using a private registry the docker images are no longer pulled by Deis Workflow Controller but rather are managed by \nKubernetes\n. This will increase security and overall speed, however the \nport\n information can no longer be discovered. Instead the \nport\n information can be set via \ndeis config:set PORT=<port>\n prior to deploying the application.\n\n\nDeis Workflow currently supports:\n\n\n\n\nGoogle Container Registry(\ngcr\n).\n\n\nEC2 Container Registry(\necr\n).\n\n\noff-cluster: Any provider which supports long-lived username/password authentication, such as \nAzure Container Registry\n, \nDocker Hub\n, \nquay.io\n, or a self-hosted Docker registry.\n\n\n\n\nConfiguration\n\u00b6\n\n\n\n\nIf you haven't already fetched the values file, do so with \nhelm inspect values deis/workflow > values.yaml\n\n\nUpdate registry location details by modifying the values file:\n\n\nUpdate the \nregistry_location\n parameter to reference the registry location you are using: \noff-cluster\n, \necr\n, \ngcr\n\n\nUpdate the values in the section which corresponds to your registry location type.\n\n\n\n\n\n\n\n\nYou are now ready to \nhelm install deis/workflow --namespace deis -f values.yaml\n using your desired registry.\n\n\nExamples\n\u00b6\n\n\nHere we show how the relevant parts of the fetched \nvalues.yaml\n file might look like after configuring for a particular off-cluster registry:\n\n\nECR\n\u00b6\n\n\nglobal:\n...\n  registry_location: \"ecr\"\n...\nregistry-token-refresher:\n  # Time in minutes after which the token should be refreshed.\n  # Leave it empty to use the default provider time.\n  token_refresh_time: \"\"\n...\n  ecr:\n    # Your AWS access key. Leave it empty if you want to use IAM credentials.\n    accesskey: \"ACCESS_KEY\"\n    # Your AWS secret key. Leave it empty if you want to use IAM credentials.\n    secretkey: \"SECRET_KEY\"\n    # Any S3 region\n    region: \"us-west-2\"\n    registryid: \"\"\n    hostname: \"\"\n...\n\n\n\n\nNote:\n \nregistryid\n and \nhostname\n should \nnot\n be set.  See \nthis issue\n for more info.\n\n\nGCR\n\u00b6\n\n\nglobal:\n...\n  registry_location: \"gcr\"\n...\nregistry-token-refresher:\n  # Time in minutes after which the token should be refreshed.\n  # Leave it empty to use the default provider time.\n  token_refresh_time: \"\"\n...\n  gcr:\n    key_json: <base64-encoded JSON data>\n    hostname: \"\"\n\n\n\n\nNote:\n \nhostname\n should be left empty.\n\n\nAzure Container Registry\n (ACR)\n\u00b6\n\n\nAfter following the \ndocs\n and creating a registry, e.g. \nmyregistry\n, with its corresponding login server of \nmyregistry.azurecr.io\n, the following values should be supplied:\n\n\nglobal:\n...\n  registry_location: \"off-cluster\"\n...\nregistry-token-refresher:\n...\n  off_cluster_registry:\n    hostname: \"myregistry.azurecr.io\"\n    organization: \"myorg\"\n    username: \"myusername\"\n    password: \"mypassword\"\n...\n\n\n\n\nNote:\n The mandatory organization field (here \nmyorg\n) will be created as an ACR repository if it does not already exist.\n\n\nQuay.io\n\u00b6\n\n\nglobal:\n...\n  registry_location: \"off-cluster\"\n...\nregistry-token-refresher:\n...\n  off_cluster_registry:\n    hostname: \"quay.io\"\n    organization: \"myorg\"\n    username: \"myusername\"\n    password: \"mypassword\"\n...",
            "title": "Configuring the Registry"
        },
        {
            "location": "/installing-workflow/configuring-registry/#configuring-registry",
            "text": "Deis Workflow's builder component relies on a registry for storing application docker images.  Deis Workflow ships with a  registry  component by default, which provides an in-cluster Docker registry backed by the platform-configured  object storage . Operators might want to use an off-cluster registry for performance or security reasons.",
            "title": "Configuring Registry"
        },
        {
            "location": "/installing-workflow/configuring-registry/#configuring-off-cluster-private-registry",
            "text": "Every component that relies on a registry uses two inputs for configuration:   Registry Location environment variable named  DEIS_REGISTRY_LOCATION  Access credentials stored as a Kubernetes secret named  registry-secret   The Helm chart for Deis Workflow can be easily configured to connect Workflow components to off-cluster registry. Deis Workflow supports external registries which provide either short-lived tokens that are valid only for a specified amount of time or long-lived tokens (basic username/password) which are valid forever for authenticating to them. For those registries which provide short lived tokens for authentication, Deis Workflow will generate and refresh them such that the deployed apps will only have access to the short-lived tokens and not to the actual credentials for the registries.  When using a private registry the docker images are no longer pulled by Deis Workflow Controller but rather are managed by  Kubernetes . This will increase security and overall speed, however the  port  information can no longer be discovered. Instead the  port  information can be set via  deis config:set PORT=<port>  prior to deploying the application.  Deis Workflow currently supports:   Google Container Registry( gcr ).  EC2 Container Registry( ecr ).  off-cluster: Any provider which supports long-lived username/password authentication, such as  Azure Container Registry ,  Docker Hub ,  quay.io , or a self-hosted Docker registry.",
            "title": "Configuring Off-Cluster Private Registry"
        },
        {
            "location": "/installing-workflow/configuring-registry/#configuration",
            "text": "If you haven't already fetched the values file, do so with  helm inspect values deis/workflow > values.yaml  Update registry location details by modifying the values file:  Update the  registry_location  parameter to reference the registry location you are using:  off-cluster ,  ecr ,  gcr  Update the values in the section which corresponds to your registry location type.     You are now ready to  helm install deis/workflow --namespace deis -f values.yaml  using your desired registry.",
            "title": "Configuration"
        },
        {
            "location": "/installing-workflow/configuring-registry/#examples",
            "text": "Here we show how the relevant parts of the fetched  values.yaml  file might look like after configuring for a particular off-cluster registry:",
            "title": "Examples"
        },
        {
            "location": "/installing-workflow/configuring-registry/#ecr",
            "text": "global:\n...\n  registry_location: \"ecr\"\n...\nregistry-token-refresher:\n  # Time in minutes after which the token should be refreshed.\n  # Leave it empty to use the default provider time.\n  token_refresh_time: \"\"\n...\n  ecr:\n    # Your AWS access key. Leave it empty if you want to use IAM credentials.\n    accesskey: \"ACCESS_KEY\"\n    # Your AWS secret key. Leave it empty if you want to use IAM credentials.\n    secretkey: \"SECRET_KEY\"\n    # Any S3 region\n    region: \"us-west-2\"\n    registryid: \"\"\n    hostname: \"\"\n...  Note:   registryid  and  hostname  should  not  be set.  See  this issue  for more info.",
            "title": "ECR"
        },
        {
            "location": "/installing-workflow/configuring-registry/#gcr",
            "text": "global:\n...\n  registry_location: \"gcr\"\n...\nregistry-token-refresher:\n  # Time in minutes after which the token should be refreshed.\n  # Leave it empty to use the default provider time.\n  token_refresh_time: \"\"\n...\n  gcr:\n    key_json: <base64-encoded JSON data>\n    hostname: \"\"  Note:   hostname  should be left empty.",
            "title": "GCR"
        },
        {
            "location": "/installing-workflow/configuring-registry/#azure-container-registry-acr",
            "text": "After following the  docs  and creating a registry, e.g.  myregistry , with its corresponding login server of  myregistry.azurecr.io , the following values should be supplied:  global:\n...\n  registry_location: \"off-cluster\"\n...\nregistry-token-refresher:\n...\n  off_cluster_registry:\n    hostname: \"myregistry.azurecr.io\"\n    organization: \"myorg\"\n    username: \"myusername\"\n    password: \"mypassword\"\n...  Note:  The mandatory organization field (here  myorg ) will be created as an ACR repository if it does not already exist.",
            "title": "Azure Container Registry (ACR)"
        },
        {
            "location": "/installing-workflow/configuring-registry/#quayio",
            "text": "global:\n...\n  registry_location: \"off-cluster\"\n...\nregistry-token-refresher:\n...\n  off_cluster_registry:\n    hostname: \"quay.io\"\n    organization: \"myorg\"\n    username: \"myusername\"\n    password: \"mypassword\"\n...",
            "title": "Quay.io"
        },
        {
            "location": "/installing-workflow/chart-provenance/",
            "text": "Chart Provenance\n\u00b6\n\n\nAs of Workflow \nv2.8.0\n, Deis has released \nKubernetes Helm\n charts for Workflow\nand for each of its \ncomponents\n.\n\n\nHelm provides tools for establishing and verifying chart integrity.  (For an overview, see the \nProvenance\n doc.)  All release charts from the Deis Workflow team are now signed using this mechanism.\n\n\nThe full \nDeis, Inc. (Helm chart signing key) <security@deis.com>\n public key can be found \nhere\n, as well as the \npgp.mit.edu\n keyserver and the official Deis Keybase \naccount\n.  The key's fingerprint can be cross-checked against all of these sources.\n\n\nVerifying a signed chart\n\u00b6\n\n\nThe public key mentioned above must exist in a local keyring before a signed chart can be verified.\n\n\nTo add it to the default \n~/.gnupg/pubring.gpg\n keyring, any of the following commands will work:\n\n\n$ # via our hosted location\n$ curl https://deis.com/workflow/docs/security/1d6a97d0.txt | gpg --import\n\n$ # via the pgp.mit.edu keyserver\n$ gpg --keyserver pgp.mit.edu --recv-keys 1D6A97D0\n\n$ # via Keybase with account...\n$ keybase follow deis\n$ keybase pgp pull\n\n$ # via Keybase by curl\n$ curl https://keybase.io/deis/key.asc | gpg --import\n\n\n\n\nCharts signed with this key can then be verified when fetched:\n\n\n$ helm repo add deis https://charts.deis.com/workflow\n\"deis\" has been added to your repositories\n\n$ helm fetch --verify deis/workflow --version v2.17.0\nVerification: &{0xc420704c80 sha256:a2a140dca075a2eabe20422f1aa5bc1ce210b18a326472d6b2708e1a93afebea workflow-v2.17.0.tgz}\n\n\n\n\nOne can then inspect the fetched \nworkflow-v2.17.0.tgz.prov\n provenance file.\n\n\nIf the chart was not signed, the command above would result in:\n\n\nError: Failed to fetch provenance \"https://charts.deis.com/workflow/workflow-v2.17.0.tgz.prov\"\n\n\n\n\nAlternatively, the chart can also be verified at install time:\n\n\n$ helm install --verify deis/workflow --namespace deis\nNAME:   exiled-mink\nLAST DEPLOYED: Wed Aug  9 08:22:16 2017\nNAMESPACE: deis\nSTATUS: DEPLOYED\n...\n\n$ helm ls\nNAME        REVISION    UPDATED                     STATUS      CHART\nexiled-mink 1           Wed Aug  9 08:22:16 2017    DEPLOYED    workflow-v2.17.0\n\n\n\n\nHaving done so, one is assured of the origin and authenticity of any installed Workflow chart released by Deis.",
            "title": "Chart Provenance"
        },
        {
            "location": "/installing-workflow/chart-provenance/#chart-provenance",
            "text": "As of Workflow  v2.8.0 , Deis has released  Kubernetes Helm  charts for Workflow\nand for each of its  components .  Helm provides tools for establishing and verifying chart integrity.  (For an overview, see the  Provenance  doc.)  All release charts from the Deis Workflow team are now signed using this mechanism.  The full  Deis, Inc. (Helm chart signing key) <security@deis.com>  public key can be found  here , as well as the  pgp.mit.edu  keyserver and the official Deis Keybase  account .  The key's fingerprint can be cross-checked against all of these sources.",
            "title": "Chart Provenance"
        },
        {
            "location": "/installing-workflow/chart-provenance/#verifying-a-signed-chart",
            "text": "The public key mentioned above must exist in a local keyring before a signed chart can be verified.  To add it to the default  ~/.gnupg/pubring.gpg  keyring, any of the following commands will work:  $ # via our hosted location\n$ curl https://deis.com/workflow/docs/security/1d6a97d0.txt | gpg --import\n\n$ # via the pgp.mit.edu keyserver\n$ gpg --keyserver pgp.mit.edu --recv-keys 1D6A97D0\n\n$ # via Keybase with account...\n$ keybase follow deis\n$ keybase pgp pull\n\n$ # via Keybase by curl\n$ curl https://keybase.io/deis/key.asc | gpg --import  Charts signed with this key can then be verified when fetched:  $ helm repo add deis https://charts.deis.com/workflow\n\"deis\" has been added to your repositories\n\n$ helm fetch --verify deis/workflow --version v2.17.0\nVerification: &{0xc420704c80 sha256:a2a140dca075a2eabe20422f1aa5bc1ce210b18a326472d6b2708e1a93afebea workflow-v2.17.0.tgz}  One can then inspect the fetched  workflow-v2.17.0.tgz.prov  provenance file.  If the chart was not signed, the command above would result in:  Error: Failed to fetch provenance \"https://charts.deis.com/workflow/workflow-v2.17.0.tgz.prov\"  Alternatively, the chart can also be verified at install time:  $ helm install --verify deis/workflow --namespace deis\nNAME:   exiled-mink\nLAST DEPLOYED: Wed Aug  9 08:22:16 2017\nNAMESPACE: deis\nSTATUS: DEPLOYED\n...\n\n$ helm ls\nNAME        REVISION    UPDATED                     STATUS      CHART\nexiled-mink 1           Wed Aug  9 08:22:16 2017    DEPLOYED    workflow-v2.17.0  Having done so, one is assured of the origin and authenticity of any installed Workflow chart released by Deis.",
            "title": "Verifying a signed chart"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/",
            "text": "Experimental Native Ingress\n\u00b6\n\n\nInstall Deis Workflow (With experimental native ingress support)\n\u00b6\n\n\nNow that Helm is installed and the repository has been added, install Workflow with a native ingress by running:\n\n\n$ helm install deis/workflow --namespace deis --set global.experimental_native_ingress=true,controller.platform_domain=deis.com\n\n\n\n\nWhere \ncontroller.platform_domain\n is a \nrequired\n parameter that is traditionally not required for Workflow that is explained in the next section. In this example we are using \ndeis.com\n for \n$hostname\n.\n\n\nHelm will install a variety of Kubernetes resources in the \ndeis\n namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nYou should also notice that several Kubernetes ingresses has been installed on your cluster. You can view it by running:\n\n\n$ kubectl get ingress --namespace deis\n\n\n\n\nDepending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.\n\n\nHere, it can be seen that the controller, builder and registry all took a few loops waiting for minio before they were able to start:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m\n\n\n\n\nInstall a Kubernetes Ingress Controller\n\u00b6\n\n\nNow that Workflow has been deployed with the \nglobal.experimental_native_ingress\n flag set to \ntrue\n, we will need a Kubernetes ingress controller in place to begin routing traffic.\n\n\nHere is an example of how to use \ntraefik\n as an ingress controller for Workflow. Of course, you are welcome to use any controller you wish.\n\n\n$ helm install stable/traefik --name ingress --namespace kube-system\n\n\n\n\nConfigure DNS\n\u00b6\n\n\nThe experimental ingress feature requires a user to set up a hostname, and assumes the \ndeis.$host\n convention.\n\n\nWe need to point the \n*.$host\n record to the public IP address of your ingress controller. You can get the public IP using the following command. A wildcard entry is necessary here as apps will use the same rule after they are deployed.\n\n\n$ kubectl get svc ingress-traefik --namespace kube-system\nNAME              CLUSTER-IP   EXTERNAL-IP      PORT(S)                      AGE\ningress-traefik   10.0.25.3    138.91.243.152   80:31625/TCP,443:30871/TCP   33m\n\n\n\n\nAdditionally, we need to point the \ndeis-builder.$host\n record to the public IP address of the \nBuilder\n.\n\n\n$ kubectl get svc deis-builder --namespace deis\nNAME           CLUSTER-IP     EXTERNAL-IP     PORT(S)          AGE\ndeis-builder   10.0.165.140   40.86.182.187   2222:32488/TCP   33m\n\n\n\n\nIf we were using \ndeis.com\n as a hostname, we would need to create the following A DNS records.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n*.deis.com\n\n\nA\n\n\n138.91.243.152\n\n\n\n\n\n\ndeis-builder.deis.com\n\n\nA\n\n\n40.86.182.187\n\n\n\n\n\n\n\n\nOnce all of the pods are in the \nREADY\n state, and \ndeis.$host\n resolves to the external IP found above, Workflow is up and running!\n\n\nAfter installing Workflow, \nregister a user and deploy an application\n.\n\n\nFeedback\n\u00b6\n\n\nWhile this feature is experimental we welcome feedback on the issue. We would like to learn more about use cases, and user experience. Please \nopen a new issue\n for feedback.",
            "title": "Experimental Native Ingress"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/#experimental-native-ingress",
            "text": "",
            "title": "Experimental Native Ingress"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/#install-deis-workflow-with-experimental-native-ingress-support",
            "text": "Now that Helm is installed and the repository has been added, install Workflow with a native ingress by running:  $ helm install deis/workflow --namespace deis --set global.experimental_native_ingress=true,controller.platform_domain=deis.com  Where  controller.platform_domain  is a  required  parameter that is traditionally not required for Workflow that is explained in the next section. In this example we are using  deis.com  for  $hostname .  Helm will install a variety of Kubernetes resources in the  deis  namespace.\nWait for the pods that Helm launched to be ready. Monitor their status by running:  $ kubectl --namespace=deis get pods  You should also notice that several Kubernetes ingresses has been installed on your cluster. You can view it by running:  $ kubectl get ingress --namespace deis  Depending on the order in which the Workflow components initialize, some pods may restart. This is common during the\ninstallation: if a component's dependencies are not yet available, that component will exit and Kubernetes will\nautomatically restart it.  Here, it can be seen that the controller, builder and registry all took a few loops waiting for minio before they were able to start:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS    RESTARTS   AGE\ndeis-builder-hy3xv            1/1       Running   5          5m\ndeis-controller-g3cu8         1/1       Running   5          5m\ndeis-database-rad1o           1/1       Running   0          5m\ndeis-logger-fluentd-1v8uk     1/1       Running   0          5m\ndeis-logger-fluentd-esm60     1/1       Running   0          5m\ndeis-logger-sm8b3             1/1       Running   0          5m\ndeis-minio-4ww3t              1/1       Running   0          5m\ndeis-registry-asozo           1/1       Running   1          5m\ndeis-workflow-manager-68nu6   1/1       Running   0          5m",
            "title": "Install Deis Workflow (With experimental native ingress support)"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/#install-a-kubernetes-ingress-controller",
            "text": "Now that Workflow has been deployed with the  global.experimental_native_ingress  flag set to  true , we will need a Kubernetes ingress controller in place to begin routing traffic.  Here is an example of how to use  traefik  as an ingress controller for Workflow. Of course, you are welcome to use any controller you wish.  $ helm install stable/traefik --name ingress --namespace kube-system",
            "title": "Install a Kubernetes Ingress Controller"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/#configure-dns",
            "text": "The experimental ingress feature requires a user to set up a hostname, and assumes the  deis.$host  convention.  We need to point the  *.$host  record to the public IP address of your ingress controller. You can get the public IP using the following command. A wildcard entry is necessary here as apps will use the same rule after they are deployed.  $ kubectl get svc ingress-traefik --namespace kube-system\nNAME              CLUSTER-IP   EXTERNAL-IP      PORT(S)                      AGE\ningress-traefik   10.0.25.3    138.91.243.152   80:31625/TCP,443:30871/TCP   33m  Additionally, we need to point the  deis-builder.$host  record to the public IP address of the  Builder .  $ kubectl get svc deis-builder --namespace deis\nNAME           CLUSTER-IP     EXTERNAL-IP     PORT(S)          AGE\ndeis-builder   10.0.165.140   40.86.182.187   2222:32488/TCP   33m  If we were using  deis.com  as a hostname, we would need to create the following A DNS records.     Name  Type  Value      *.deis.com  A  138.91.243.152    deis-builder.deis.com  A  40.86.182.187     Once all of the pods are in the  READY  state, and  deis.$host  resolves to the external IP found above, Workflow is up and running!  After installing Workflow,  register a user and deploy an application .",
            "title": "Configure DNS"
        },
        {
            "location": "/installing-workflow/experimental-native-ingress/#feedback",
            "text": "While this feature is experimental we welcome feedback on the issue. We would like to learn more about use cases, and user experience. Please  open a new issue  for feedback.",
            "title": "Feedback"
        },
        {
            "location": "/users/cli/",
            "text": "Deis Workflow  CLI\n\u00b6\n\n\nThe Deis Workflow command-line interface (CLI), or client, allows you to interact\nwith Deis Workflow.\n\n\nInstallation\n\u00b6\n\n\nInstall the latest \ndeis\n client for Linux or Mac OS X with:\n\n\n$ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash\n\n\n\n\nThe installer puts \ndeis\n in your current directory, but you should move it\nsomewhere in your $PATH:\n\n\n$ ln -fs $PWD/deis /usr/local/bin/deis\n\n\n\n\nGetting Help\n\u00b6\n\n\nThe Deis client comes with comprehensive documentation for every command.\nUse \ndeis help\n to explore the commands available to you:\n\n\n$ deis help\nThe Deis command-line client issues API calls to a Deis controller.\n\nUsage: deis <command> [<args>...]\n\nAuth commands::\n\n  register      register a new user with a controller\n  login         login to a controller\n  logout        logout from the current controller\n\nSubcommands, use `deis help [subcommand]` to learn more::\n...\n\n\n\n\nTo get help on subcommands, use \ndeis help [subcommand]\n:\n\n\n$ deis help apps\nValid commands for apps:\n\napps:create        create a new application\napps:list          list accessible applications\napps:info          view info about an application\napps:open          open the application in a browser\napps:logs          view aggregated application logs\napps:run           run a command in an ephemeral app container\napps:destroy       destroy an application\n\nUse `deis help [command]` to learn more\n\n\n\n\nSupport for Multiple Profiles\n\u00b6\n\n\nThe CLI reads from the default \nclient\n profile, which is located on your\nworkstation at \n$HOME/.deis/client.json\n.\n\n\nEasily switch between multiple Deis Workflow installations or users by setting\nthe \n$DEIS_PROFILE\n environment variable or by using the \n-c\n flag.\n\n\nThere are two ways to set the \n$DEIS_PROFILE\n option.\n\n\n\n\nPath to a json configuration file.\n\n\nProfile name. If you set profile to just a name, it will be saved alongside the default profile,\n   in \n$HOME/.deis/<name>.json\n.\n\n\n\n\nExamples:\n\n\n$ DEIS_PROFILE=production deis login deis.production.com\n...\nConfiguration saved to /home/testuser/.deis/production.json\n$ DEIS_PROFILE=~/config.json deis login deis.example.com\n...\nConfiguration saved to /home/testuser/config.json\n\n\n\n\nThe configuration flag works identically to and overrides \n$DEIS_PROFILE\n:\n\n\n$ deis whoami -c ~/config.json\nYou are deis at deis.example.com\n\n\n\n\nProxy Support\n\u00b6\n\n\nIf your workstation uses a proxy to reach the network where the cluster lies,\nset the \nhttp_proxy\n or \nhttps_proxy\n environment variable to enable proxy support:\n\n\n$ export http_proxy=\"http://proxyip:port\"\n$ export https_proxy=\"http://proxyip:port\"\n\n\n\n\n\n\nNote\n\n\nConfiguring a proxy is generally not necessary for local Minikube clusters.\n\n\n\n\nCLI Plugins\n\u00b6\n\n\nPlugins allow developers to extend the functionality of the Deis Client, adding new commands or features.\n\n\nIf an unknown command is specified, the client will attempt to execute the command as a dash-separated command. In this case, \ndeis resource:command\n will execute \ndeis-resource\n with the argument list \ncommand\n. In full form:\n\n\n$ # these two are identical\n$ deis accounts:list\n$ deis-accounts list\n\n\n\n\nAny flags after the command will also be sent to the plugin as an argument:\n\n\n$ # these two are identical\n$ deis accounts:list --debug\n$ deis-accounts list --debug\n\n\n\n\nBut flags preceding the command will not:\n\n\n$ # these two are identical\n$ deis --debug accounts:list\n$ deis-accounts list",
            "title": "Command Line Interface"
        },
        {
            "location": "/users/cli/#deis-workflow-cli",
            "text": "The Deis Workflow command-line interface (CLI), or client, allows you to interact\nwith Deis Workflow.",
            "title": "Deis Workflow  CLI"
        },
        {
            "location": "/users/cli/#installation",
            "text": "Install the latest  deis  client for Linux or Mac OS X with:  $ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash  The installer puts  deis  in your current directory, but you should move it\nsomewhere in your $PATH:  $ ln -fs $PWD/deis /usr/local/bin/deis",
            "title": "Installation"
        },
        {
            "location": "/users/cli/#getting-help",
            "text": "The Deis client comes with comprehensive documentation for every command.\nUse  deis help  to explore the commands available to you:  $ deis help\nThe Deis command-line client issues API calls to a Deis controller.\n\nUsage: deis <command> [<args>...]\n\nAuth commands::\n\n  register      register a new user with a controller\n  login         login to a controller\n  logout        logout from the current controller\n\nSubcommands, use `deis help [subcommand]` to learn more::\n...  To get help on subcommands, use  deis help [subcommand] :  $ deis help apps\nValid commands for apps:\n\napps:create        create a new application\napps:list          list accessible applications\napps:info          view info about an application\napps:open          open the application in a browser\napps:logs          view aggregated application logs\napps:run           run a command in an ephemeral app container\napps:destroy       destroy an application\n\nUse `deis help [command]` to learn more",
            "title": "Getting Help"
        },
        {
            "location": "/users/cli/#support-for-multiple-profiles",
            "text": "The CLI reads from the default  client  profile, which is located on your\nworkstation at  $HOME/.deis/client.json .  Easily switch between multiple Deis Workflow installations or users by setting\nthe  $DEIS_PROFILE  environment variable or by using the  -c  flag.  There are two ways to set the  $DEIS_PROFILE  option.   Path to a json configuration file.  Profile name. If you set profile to just a name, it will be saved alongside the default profile,\n   in  $HOME/.deis/<name>.json .   Examples:  $ DEIS_PROFILE=production deis login deis.production.com\n...\nConfiguration saved to /home/testuser/.deis/production.json\n$ DEIS_PROFILE=~/config.json deis login deis.example.com\n...\nConfiguration saved to /home/testuser/config.json  The configuration flag works identically to and overrides  $DEIS_PROFILE :  $ deis whoami -c ~/config.json\nYou are deis at deis.example.com",
            "title": "Support for Multiple Profiles"
        },
        {
            "location": "/users/cli/#proxy-support",
            "text": "If your workstation uses a proxy to reach the network where the cluster lies,\nset the  http_proxy  or  https_proxy  environment variable to enable proxy support:  $ export http_proxy=\"http://proxyip:port\"\n$ export https_proxy=\"http://proxyip:port\"   Note  Configuring a proxy is generally not necessary for local Minikube clusters.",
            "title": "Proxy Support"
        },
        {
            "location": "/users/cli/#cli-plugins",
            "text": "Plugins allow developers to extend the functionality of the Deis Client, adding new commands or features.  If an unknown command is specified, the client will attempt to execute the command as a dash-separated command. In this case,  deis resource:command  will execute  deis-resource  with the argument list  command . In full form:  $ # these two are identical\n$ deis accounts:list\n$ deis-accounts list  Any flags after the command will also be sent to the plugin as an argument:  $ # these two are identical\n$ deis accounts:list --debug\n$ deis-accounts list --debug  But flags preceding the command will not:  $ # these two are identical\n$ deis --debug accounts:list\n$ deis-accounts list",
            "title": "CLI Plugins"
        },
        {
            "location": "/users/registration/",
            "text": "Users and Registration\n\u00b6\n\n\nThere are two classes of Workflow users: normal users and administrators.\n\n\n\n\nUsers can use most of the features of Workflow - creating and deploying applications, adding/removing domains, etc.\n\n\nAdministrators can perform all the actions that users can, but they also have owner access to all applications.\n\n\n\n\nThe first user created on a Workflow installation is automatically an administrator.\n\n\nRegister with a Controller\n\u00b6\n\n\nUse \ndeis register\n with the \nController\n URL (supplied by your Deis administrator)\nto create a new account. After successful registration you will be logged in as the new user.\n\n\n$ deis register http://deis.example.com\nusername: myuser\npassword:\npassword (confirm):\nemail: myuser@example.com\nRegistered myuser\nLogged in as myuser\n\n\n\n\n\n\nImportant\n\n\nThe first user to register with Deis Workflow automatically becomes an administrator. Additional users who register will be ordinary users.\n\n\n\n\nLogin to Workflow\n\u00b6\n\n\nIf you already have an account, use \ndeis login\n to authenticate against the Deis Workflow API.\n\n\n$ deis login http://deis.example.com\nusername: deis\npassword:\nLogged in as deis\n\n\n\n\nLogout from Workflow\n\u00b6\n\n\nLogout of an existing controller session using \ndeis logout\n.\n\n\n$ deis logout\nLogged out as deis\n\n\n\n\nVerify Your Session\n\u00b6\n\n\nYou can verify your client configuration by running \ndeis whoami\n.\n\n\n$ deis whoami\nYou are deis at http://deis.example.com\n\n\n\n\n\n\nNote\n\n\nSession and client configuration is stored in the \n~/.deis/client.json\n file.\n\n\n\n\nRegistering New Users\n\u00b6\n\n\nBy default, new users are not allowed to register after an initial user does. That initial user\nbecomes the first \"admin\" user. Others will now receive an error when trying to register, but when\nlogged in, an admin user can register new users:\n\n\n$ deis register --login=false --username=newuser --password=changeme123 --email=newuser@deis.io\n\n\n\n\nControlling Registration Modes\n\u00b6\n\n\nAfter creating your first user, you may wish to change the registration mode for Deis Workflow.\n\n\nDeis Workflow supports three registration modes:\n\n\n\n\n\n\n\n\nMode\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nadmin_only (default)\n\n\nOnly existing admins may register new users\n\n\n\n\n\n\nenabled\n\n\nRegistration is enabled and anyone can register\n\n\n\n\n\n\ndisabled\n\n\nDoes not allow anyone to register new users.\n\n\n\n\n\n\n\n\nTo modify the registration mode for Workflow you may add or modify the \nREGISTRATION_MODE\n environment variable for the\ncontroller component. If Deis Workflow is already running, use:\n\n\nkubectl --namespace=deis patch deployments deis-controller -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"deis-controller\",\"env\":[{\"name\":\"REGISTRATION_MODE\",\"value\":\"disabled\"}]}]}}}}'\n\n\nModify the \nvalue\n portion to match the desired mode.\n\n\nKubernetes will automatically deploy a new ReplicaSet and corresponding Pod with the new environment variables set.\n\n\nManaging Administrative Permissions\n\u00b6\n\n\nYou can use the \ndeis perms\n command to promote a user to an admin:\n\n\n$ deis perms:create john --admin\nAdding john to system administrators... done\n\n\n\n\nView current admins:\n\n\n$ deis perms:list --admin\n=== Administrators\nadmin\njohn\n\n\n\n\nDemote admins to normal users:\n\n\n$ deis perms:delete john --admin\nRemoving john from system administrators... done\n\n\n\n\nRe-issuing User Authentication Tokens\n\u00b6\n\n\nThe controller API uses a simple token-based HTTP Authentication scheme. Token authentication is appropriate for\nclient-server setups, such as native desktop and mobile clients. Each user of the platform is issued a token the first\ntime that they sign up on the platform. If this token is compromised, it will need to be regenerated.\n\n\nA user can regenerate their own token like this:\n\n\n$ deis auth:regenerate\n\n\n\n\nAn administrator can also regenerate the token of another user like this:\n\n\n$ deis auth:regenerate -u test-user\n\n\n\n\nAt this point, the user will no longer be able to authenticate against the controller with his auth token:\n\n\n$ deis apps\n401 UNAUTHORIZED\nDetail:\nInvalid token\n\n\n\n\nThey will need to log back in to use their new auth token.\n\n\nIf there is a cluster wide security breach, an administrator can regenerate everybody's auth token like this:\n\n\n$ deis auth:regenerate --all=true\n\n\n\n\nChanging Account Password\n\u00b6\n\n\nA user can change their own account's password like this:\n\n\n$ deis auth:passwd\ncurrent password:\nnew password:\nnew password (confirm):\n\n\n\n\nAn administrator can change the password of another user's account like this:\n\n\n$ deis auth:passwd --username=<username>\nnew password:\nnew password (confirm):",
            "title": "Users and Registration"
        },
        {
            "location": "/users/registration/#users-and-registration",
            "text": "There are two classes of Workflow users: normal users and administrators.   Users can use most of the features of Workflow - creating and deploying applications, adding/removing domains, etc.  Administrators can perform all the actions that users can, but they also have owner access to all applications.   The first user created on a Workflow installation is automatically an administrator.",
            "title": "Users and Registration"
        },
        {
            "location": "/users/registration/#register-with-a-controller",
            "text": "Use  deis register  with the  Controller  URL (supplied by your Deis administrator)\nto create a new account. After successful registration you will be logged in as the new user.  $ deis register http://deis.example.com\nusername: myuser\npassword:\npassword (confirm):\nemail: myuser@example.com\nRegistered myuser\nLogged in as myuser   Important  The first user to register with Deis Workflow automatically becomes an administrator. Additional users who register will be ordinary users.",
            "title": "Register with a Controller"
        },
        {
            "location": "/users/registration/#login-to-workflow",
            "text": "If you already have an account, use  deis login  to authenticate against the Deis Workflow API.  $ deis login http://deis.example.com\nusername: deis\npassword:\nLogged in as deis",
            "title": "Login to Workflow"
        },
        {
            "location": "/users/registration/#logout-from-workflow",
            "text": "Logout of an existing controller session using  deis logout .  $ deis logout\nLogged out as deis",
            "title": "Logout from Workflow"
        },
        {
            "location": "/users/registration/#verify-your-session",
            "text": "You can verify your client configuration by running  deis whoami .  $ deis whoami\nYou are deis at http://deis.example.com   Note  Session and client configuration is stored in the  ~/.deis/client.json  file.",
            "title": "Verify Your Session"
        },
        {
            "location": "/users/registration/#registering-new-users",
            "text": "By default, new users are not allowed to register after an initial user does. That initial user\nbecomes the first \"admin\" user. Others will now receive an error when trying to register, but when\nlogged in, an admin user can register new users:  $ deis register --login=false --username=newuser --password=changeme123 --email=newuser@deis.io",
            "title": "Registering New Users"
        },
        {
            "location": "/users/registration/#controlling-registration-modes",
            "text": "After creating your first user, you may wish to change the registration mode for Deis Workflow.  Deis Workflow supports three registration modes:     Mode  Description      admin_only (default)  Only existing admins may register new users    enabled  Registration is enabled and anyone can register    disabled  Does not allow anyone to register new users.     To modify the registration mode for Workflow you may add or modify the  REGISTRATION_MODE  environment variable for the\ncontroller component. If Deis Workflow is already running, use:  kubectl --namespace=deis patch deployments deis-controller -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"deis-controller\",\"env\":[{\"name\":\"REGISTRATION_MODE\",\"value\":\"disabled\"}]}]}}}}'  Modify the  value  portion to match the desired mode.  Kubernetes will automatically deploy a new ReplicaSet and corresponding Pod with the new environment variables set.",
            "title": "Controlling Registration Modes"
        },
        {
            "location": "/users/registration/#managing-administrative-permissions",
            "text": "You can use the  deis perms  command to promote a user to an admin:  $ deis perms:create john --admin\nAdding john to system administrators... done  View current admins:  $ deis perms:list --admin\n=== Administrators\nadmin\njohn  Demote admins to normal users:  $ deis perms:delete john --admin\nRemoving john from system administrators... done",
            "title": "Managing Administrative Permissions"
        },
        {
            "location": "/users/registration/#re-issuing-user-authentication-tokens",
            "text": "The controller API uses a simple token-based HTTP Authentication scheme. Token authentication is appropriate for\nclient-server setups, such as native desktop and mobile clients. Each user of the platform is issued a token the first\ntime that they sign up on the platform. If this token is compromised, it will need to be regenerated.  A user can regenerate their own token like this:  $ deis auth:regenerate  An administrator can also regenerate the token of another user like this:  $ deis auth:regenerate -u test-user  At this point, the user will no longer be able to authenticate against the controller with his auth token:  $ deis apps\n401 UNAUTHORIZED\nDetail:\nInvalid token  They will need to log back in to use their new auth token.  If there is a cluster wide security breach, an administrator can regenerate everybody's auth token like this:  $ deis auth:regenerate --all=true",
            "title": "Re-issuing User Authentication Tokens"
        },
        {
            "location": "/users/registration/#changing-account-password",
            "text": "A user can change their own account's password like this:  $ deis auth:passwd\ncurrent password:\nnew password:\nnew password (confirm):  An administrator can change the password of another user's account like this:  $ deis auth:passwd --username=<username>\nnew password:\nnew password (confirm):",
            "title": "Changing Account Password"
        },
        {
            "location": "/users/ssh-keys/",
            "text": "Users and SSH Keys\n\u00b6\n\n\nFor \nDockerfile\n and \nBuildpack\n based application deploys via \ngit push\n, Deis Workflow identifies users via SSH\nkeys. SSH keys are pushed to the platform and must be unique to each user. Users may have multiple SSH keys as needed.\n\n\nGenerate an SSH Key\n\u00b6\n\n\nIf you do not already have an SSH key or would like to create a new key for Deis Workflow, generate a new key using\n\nssh-keygen\n:\n\n\n$ ssh-keygen -f ~/.ssh/id_deis -t rsa\nGenerating public/private rsa key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /Users/admin/.ssh/id_deis.\nYour public key has been saved in /Users/admin/.ssh/id_deis.pub.\nThe key fingerprint is:\n3d:ac:1f:f4:83:f7:64:51:c1:7e:7f:80:b6:70:36:c9 admin@plinth-23437.local\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|              .. |\n|               ..|\n|           . o. .|\n|         o. E .o.|\n|        S == o..o|\n|         o +.  .o|\n|        . o + o .|\n|         . o =   |\n|          .   .  |\n+-----------------+\n$ ssh-add ~/.ssh/id_deis\nIdentity added: /Users/admin/.ssh/id_deis (/Users/admin/.ssh/id_deis)\n\n\n\n\nAdding and Removing SSH Keys\n\u00b6\n\n\nBy publishing the \npublic\n half of your SSH key to Deis Workflow the component responsible for receiving \ngit push\n\nwill be able to authenticate the user and ensure that they have access to the destination application.\n\n\n$ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done\n\n\n\n\nYou can always view the keys associated with your user as well:\n\n\n$ deis keys:list\n=== admin Keys\nadmin@plinth-23437.local ssh-rsa AAAAB3Nz...3437.local\nadmin@subgenius.local ssh-rsa AAAAB3Nz...nius.local\n\n\n\n\nRemove keys by their name:\n\n\n$ deis keys:remove admin@plinth-23437.local\nRemoving admin@plinth-23437.local SSH Key... don",
            "title": "SSH Keys"
        },
        {
            "location": "/users/ssh-keys/#users-and-ssh-keys",
            "text": "For  Dockerfile  and  Buildpack  based application deploys via  git push , Deis Workflow identifies users via SSH\nkeys. SSH keys are pushed to the platform and must be unique to each user. Users may have multiple SSH keys as needed.",
            "title": "Users and SSH Keys"
        },
        {
            "location": "/users/ssh-keys/#generate-an-ssh-key",
            "text": "If you do not already have an SSH key or would like to create a new key for Deis Workflow, generate a new key using ssh-keygen :  $ ssh-keygen -f ~/.ssh/id_deis -t rsa\nGenerating public/private rsa key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /Users/admin/.ssh/id_deis.\nYour public key has been saved in /Users/admin/.ssh/id_deis.pub.\nThe key fingerprint is:\n3d:ac:1f:f4:83:f7:64:51:c1:7e:7f:80:b6:70:36:c9 admin@plinth-23437.local\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|              .. |\n|               ..|\n|           . o. .|\n|         o. E .o.|\n|        S == o..o|\n|         o +.  .o|\n|        . o + o .|\n|         . o =   |\n|          .   .  |\n+-----------------+\n$ ssh-add ~/.ssh/id_deis\nIdentity added: /Users/admin/.ssh/id_deis (/Users/admin/.ssh/id_deis)",
            "title": "Generate an SSH Key"
        },
        {
            "location": "/users/ssh-keys/#adding-and-removing-ssh-keys",
            "text": "By publishing the  public  half of your SSH key to Deis Workflow the component responsible for receiving  git push \nwill be able to authenticate the user and ensure that they have access to the destination application.  $ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done  You can always view the keys associated with your user as well:  $ deis keys:list\n=== admin Keys\nadmin@plinth-23437.local ssh-rsa AAAAB3Nz...3437.local\nadmin@subgenius.local ssh-rsa AAAAB3Nz...nius.local  Remove keys by their name:  $ deis keys:remove admin@plinth-23437.local\nRemoving admin@plinth-23437.local SSH Key... don",
            "title": "Adding and Removing SSH Keys"
        },
        {
            "location": "/applications/deploying-apps/",
            "text": "Deploying an Application\n\u00b6\n\n\nAn \nApplication\n is deployed to Deis using \ngit push\n or the \ndeis\n client.\n\n\nSupported Applications\n\u00b6\n\n\nDeis Workflow can deploy any application or service that can run inside a Docker container.  In order to be scaled\nhorizontally, applications must follow the \nTwelve-Factor App\n methodology and store any application state in external\nbacking services.\n\n\nFor example, if your application persists state to the local filesystem -- common with content management systems like\nWordpress and Drupal -- it cannot be scaled horizontally using \ndeis scale\n.\n\n\nFortunately, most modern applications feature a stateless application tier that can scale horizontally inside Deis.\n\n\nLogin to the Controller\n\u00b6\n\n\n\n\nImportant\n\n\nif you haven't yet, now is a good time to \ninstall the client\n and \nregister\n.\n\n\n\n\nBefore deploying an application, users must first authenticate against the Deis \nController\n\nusing the URL supplied by their Deis administrator.\n\n\n$ deis login http://deis.example.com\nusername: deis\npassword:\nLogged in as deis\n\n\n\n\nSelect a Build Process\n\u00b6\n\n\nDeis Workflow supports three different ways of building applications:\n\n\nBuildpacks\n\u00b6\n\n\nHeroku buildpacks are useful if you want to follow Heroku's best practices for building applications or if you are porting an application from Heroku.\n\n\nLearn how to deploy applications \nusing Buildpacks\n.\n\n\nDockerfiles\n\u00b6\n\n\nDockerfiles are a powerful way to define a portable execution environment built on a base OS of your choosing.\n\n\nLearn how to deploy applications \nusing Dockerfiles\n.\n\n\nDocker Image\n\u00b6\n\n\nDeploying a Docker image onto Deis allows you to take a Docker image from either a public\nor a private registry and copy it over bit-for-bit, ensuring that you are running the same\nimage in development or in your CI pipeline as you are in production.\n\n\nLearn how to deploy applications \nusing Docker images\n.\n\n\nTuning Application Settings\n\u00b6\n\n\nIt is possible to configure a few of the \nglobally tunable\n settings on per application basis using \nconfig:set\n.\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDEIS_DISABLE_CACHE\n\n\nif set, this will disable the \nslugbuilder cache\n (default: not set)\n\n\n\n\n\n\nDEIS_DEPLOY_BATCHES\n\n\nthe number of pods to bring up and take down sequentially during a scale (default: number of available nodes)\n\n\n\n\n\n\nDEIS_DEPLOY_TIMEOUT\n\n\ndeploy timeout in seconds per deploy batch (default: 120)\n\n\n\n\n\n\nIMAGE_PULL_POLICY\n\n\nthe kubernetes [image pull policy][pull-policy] for application images (default: \"IfNotPresent\") (allowed values: \"Always\", \"IfNotPresent\")\n\n\n\n\n\n\nKUBERNETES_DEPLOYMENTS_REVISION_HISTORY_LIMIT\n\n\nhow many \nrevisions\n Kubernetes keeps around of a given Deployment (default: all revisions)\n\n\n\n\n\n\nKUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS\n\n\nhow many seconds kubernetes waits for a pod to finish work after a SIGTERM before sending SIGKILL (default: 30)\n\n\n\n\n\n\n\n\nDeploy Timeout\n\u00b6\n\n\nDeploy timeout in seconds - There are 2 deploy methods, Deployments (see below) and RC (versions prior to 2.4) and this setting affects those a bit differently.\n\n\nDeployments\n\u00b6\n\n\nDeployments behave a little bit differently from the RC based deployment strategy.\n\n\nKubernetes takes care of the entire deploy, doing rolling updates in the background. As a result, there is only an overall deployment timeout instead of a configurable per-batch timeout.\n\n\nThe base timeout is multiplied with \nDEIS_DEPLOY_BATCHES\n to create an overall timeout. This would be 240 (timeout) * 4 (batches) = 960 second overall timeout.\n\n\nRC deploy\n\u00b6\n\n\nThis deploy timeout defines how long to wait for each batch to complete in \nDEIS_DEPLOY_BATCHES\n.\n\n\nAdditions to the base timeout\n\u00b6\n\n\nThe base timeout is extended as well with healthchecks using \ninitialDelaySeconds\n on \nliveness\n and \nreadiness\n where the bigger of those two is applied.\nAdditionally the timeout system accounts for slow image pulls by adding an additional 10 minutes when it has seen an image pull take over 1 minute. This allows the timeout values to be reasonable without having to account for image pull slowness in the base deploy timeout.\n\n\nDeployments\n\u00b6\n\n\nWorkflow uses \nDeployments\n for deploys. In prior versions \nReplicationControllers\n were used with the ability to turn on Deployments via \nDEIS_KUBERNETES_DEPLOYMENTS=1\n.\n\n\nThe advantage of \nDeployments\n is that rolling-updates will happen server-side in Kubernetes instead of in Deis Workflow Controller,\nalong with a few other Pod management related functionality. This allows a deploy to continue even when the CLI connection is interrupted.\n\n\nBehind the scenes your application deploy will be built up of a Deployment object per process type,\neach having multiple ReplicaSets (one per release) which in turn manage the Pods running your application.\n\n\nDeis Workflow will behave the same way with \nDEIS_KUBERNETES_DEPLOYMENTS\n enabled or disabled (only applicable to versions prior to 2.4).\nThe changes are behind the scenes. Where you will see differences while using the CLI is \ndeis ps:list\n will output Pod names differently.",
            "title": "Deploying Apps"
        },
        {
            "location": "/applications/deploying-apps/#deploying-an-application",
            "text": "An  Application  is deployed to Deis using  git push  or the  deis  client.",
            "title": "Deploying an Application"
        },
        {
            "location": "/applications/deploying-apps/#supported-applications",
            "text": "Deis Workflow can deploy any application or service that can run inside a Docker container.  In order to be scaled\nhorizontally, applications must follow the  Twelve-Factor App  methodology and store any application state in external\nbacking services.  For example, if your application persists state to the local filesystem -- common with content management systems like\nWordpress and Drupal -- it cannot be scaled horizontally using  deis scale .  Fortunately, most modern applications feature a stateless application tier that can scale horizontally inside Deis.",
            "title": "Supported Applications"
        },
        {
            "location": "/applications/deploying-apps/#login-to-the-controller",
            "text": "Important  if you haven't yet, now is a good time to  install the client  and  register .   Before deploying an application, users must first authenticate against the Deis  Controller \nusing the URL supplied by their Deis administrator.  $ deis login http://deis.example.com\nusername: deis\npassword:\nLogged in as deis",
            "title": "Login to the Controller"
        },
        {
            "location": "/applications/deploying-apps/#select-a-build-process",
            "text": "Deis Workflow supports three different ways of building applications:",
            "title": "Select a Build Process"
        },
        {
            "location": "/applications/deploying-apps/#buildpacks",
            "text": "Heroku buildpacks are useful if you want to follow Heroku's best practices for building applications or if you are porting an application from Heroku.  Learn how to deploy applications  using Buildpacks .",
            "title": "Buildpacks"
        },
        {
            "location": "/applications/deploying-apps/#dockerfiles",
            "text": "Dockerfiles are a powerful way to define a portable execution environment built on a base OS of your choosing.  Learn how to deploy applications  using Dockerfiles .",
            "title": "Dockerfiles"
        },
        {
            "location": "/applications/deploying-apps/#docker-image",
            "text": "Deploying a Docker image onto Deis allows you to take a Docker image from either a public\nor a private registry and copy it over bit-for-bit, ensuring that you are running the same\nimage in development or in your CI pipeline as you are in production.  Learn how to deploy applications  using Docker images .",
            "title": "Docker Image"
        },
        {
            "location": "/applications/deploying-apps/#tuning-application-settings",
            "text": "It is possible to configure a few of the  globally tunable  settings on per application basis using  config:set .     Setting  Description      DEIS_DISABLE_CACHE  if set, this will disable the  slugbuilder cache  (default: not set)    DEIS_DEPLOY_BATCHES  the number of pods to bring up and take down sequentially during a scale (default: number of available nodes)    DEIS_DEPLOY_TIMEOUT  deploy timeout in seconds per deploy batch (default: 120)    IMAGE_PULL_POLICY  the kubernetes [image pull policy][pull-policy] for application images (default: \"IfNotPresent\") (allowed values: \"Always\", \"IfNotPresent\")    KUBERNETES_DEPLOYMENTS_REVISION_HISTORY_LIMIT  how many  revisions  Kubernetes keeps around of a given Deployment (default: all revisions)    KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS  how many seconds kubernetes waits for a pod to finish work after a SIGTERM before sending SIGKILL (default: 30)",
            "title": "Tuning Application Settings"
        },
        {
            "location": "/applications/deploying-apps/#deploy-timeout",
            "text": "Deploy timeout in seconds - There are 2 deploy methods, Deployments (see below) and RC (versions prior to 2.4) and this setting affects those a bit differently.",
            "title": "Deploy Timeout"
        },
        {
            "location": "/applications/deploying-apps/#deployments",
            "text": "Deployments behave a little bit differently from the RC based deployment strategy.  Kubernetes takes care of the entire deploy, doing rolling updates in the background. As a result, there is only an overall deployment timeout instead of a configurable per-batch timeout.  The base timeout is multiplied with  DEIS_DEPLOY_BATCHES  to create an overall timeout. This would be 240 (timeout) * 4 (batches) = 960 second overall timeout.",
            "title": "Deployments"
        },
        {
            "location": "/applications/deploying-apps/#rc-deploy",
            "text": "This deploy timeout defines how long to wait for each batch to complete in  DEIS_DEPLOY_BATCHES .",
            "title": "RC deploy"
        },
        {
            "location": "/applications/deploying-apps/#additions-to-the-base-timeout",
            "text": "The base timeout is extended as well with healthchecks using  initialDelaySeconds  on  liveness  and  readiness  where the bigger of those two is applied.\nAdditionally the timeout system accounts for slow image pulls by adding an additional 10 minutes when it has seen an image pull take over 1 minute. This allows the timeout values to be reasonable without having to account for image pull slowness in the base deploy timeout.",
            "title": "Additions to the base timeout"
        },
        {
            "location": "/applications/deploying-apps/#deployments_1",
            "text": "Workflow uses  Deployments  for deploys. In prior versions  ReplicationControllers  were used with the ability to turn on Deployments via  DEIS_KUBERNETES_DEPLOYMENTS=1 .  The advantage of  Deployments  is that rolling-updates will happen server-side in Kubernetes instead of in Deis Workflow Controller,\nalong with a few other Pod management related functionality. This allows a deploy to continue even when the CLI connection is interrupted.  Behind the scenes your application deploy will be built up of a Deployment object per process type,\neach having multiple ReplicaSets (one per release) which in turn manage the Pods running your application.  Deis Workflow will behave the same way with  DEIS_KUBERNETES_DEPLOYMENTS  enabled or disabled (only applicable to versions prior to 2.4).\nThe changes are behind the scenes. Where you will see differences while using the CLI is  deis ps:list  will output Pod names differently.",
            "title": "Deployments"
        },
        {
            "location": "/applications/using-buildpacks/",
            "text": "Using Buildpacks\n\u00b6\n\n\nDeis supports deploying applications via \nHeroku Buildpacks\n. Buildpacks are useful if you're interested in following Heroku's best practices for building applications or if you are deploying an application that already runs on Heroku.\n\n\nAdd SSH Key\n\u00b6\n\n\nFor \nBuildpack\n based application deploys via \ngit push\n, Deis Workflow identifies users via SSH keys. SSH keys are pushed to the platform and must be unique to each user.\n\n\n\n\n\n\nSee \nthis document\n for instructions on how to generate an SSH key.\n\n\n\n\n\n\nRun \ndeis keys:add\n to upload your SSH key to Deis Workflow.\n\n\n\n\n\n\n$ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done\n\n\n\n\nRead more about adding/removing SSH Keys \nhere\n.\n\n\nPrepare an Application\n\u00b6\n\n\nIf you do not have an existing application, you can clone an example application that demonstrates the Heroku Buildpack workflow.\n\n\n$ git clone https://github.com/deisthree/example-go.git\n$ cd example-go\n\n\n\n\nCreate an Application\n\u00b6\n\n\nUse \ndeis create\n to create an application on the \nController\n.\n\n\n$ deis create\nCreating application... done, created skiing-keypunch\nGit remote deis added\n\n\n\n\nPush to Deploy\n\u00b6\n\n\nUse \ngit push deis master\n to deploy your application.\n\n\n$ git push deis master\nCounting objects: 75, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (48/48), done.\nWriting objects: 100% (75/75), 18.28 KiB | 0 bytes/s, done.\nTotal 75 (delta 30), reused 58 (delta 22)\nStarting build... but first, coffee!\n-----> Go app detected\n-----> Checking Godeps/Godeps.json file.\n-----> Installing go1.4.2... done\n-----> Running: godep go install -tags heroku ./...\n-----> Discovering process types\n       Procfile declares types -> web\n-----> Compiled slug size is 1.7M\nBuild complete.\nLaunching app.\nLaunching...\nDone, skiing-keypunch:v2 deployed to Deis\n\nUse 'deis open' to view this application in your browser\n\nTo learn more, use 'deis help' or visit http://deis.io\n\nTo ssh://git@deis.staging-2.deis.com:2222/skiing-keypunch.git\n * [new branch]      master -> master\n\n$ curl -s http://skiing-keypunch.example.com\nPowered by Deis\nRelease v2 on skiing-keypunch-v2-web-02zb9\n\n\n\n\nBecause a Heroku-style application is detected, the \nweb\n process type is automatically scaled to 1 on first deploy.\n\n\nUse \ndeis scale web=3\n to increase \nweb\n processes to 3, for example. Scaling a\nprocess type directly changes the number of \npods\n running that process.\n\n\nIncluded Buildpacks\n\u00b6\n\n\nFor convenience, a number of buildpacks come bundled with Deis:\n\n\n\n\nRuby Buildpack\n\n\nNodejs Buildpack\n\n\nJava Buildpack\n\n\nGradle Buildpack\n\n\nGrails Buildpack\n\n\nPlay Buildpack\n\n\nPython Buildpack\n\n\nPHP Buildpack\n\n\nClojure Buildpack\n\n\nScala Buildpack\n\n\nGo Buildpack\n\n\nMulti Buildpack\n\n\n\n\nDeis will cycle through the \nbin/detect\n script of each buildpack to match the code you\nare pushing.\n\n\n\n\nNote\n\n\nIf you're testing against the \nScala Buildpack\n, the \nBuilder\n requires at least\n512MB of free memory to execute the Scala Build Tool.\n\n\n\n\nUsing a Custom Buildpack\n\u00b6\n\n\nTo use a custom buildpack, set the \nBUILDPACK_URL\n environment variable.\n\n\n$ deis config:set BUILDPACK_URL=https://github.com/dpiddy/heroku-buildpack-ruby-minimal\nCreating config... done, v2\n\n=== humble-autoharp\nBUILDPACK_URL: https://github.com/dpiddy/heroku-buildpack-ruby-minimal\n\n\n\n\n\n\nNote\n\n\nIf, however, you're unable to deploy using the latest version of the buildpack, You can set an exact version of a buildpack by using a git revision in your \nBUILDPACK_URL\n. For example: \nBUILDPACK_URL=https://github.com/dpiddy/heroku-buildpack-ruby-minimal#v13\n\n\n\n\nOn your next \ngit push\n, the custom buildpack will be used.\n\n\nCompile Hooks\n\u00b6\n\n\nSometimes, an application needs a way to stop or check if a service is running before building an\napp, which may require notifying a service that the \nBuilder\n has finished compiling the app. In\norder to do this, an app can provide two files in their \nbin/\n directory:\n\n\nbin/pre-compile\nbin/post-compile\n\n\n\n\nThe builder will run these commands before and after the build process, respectively.\n\n\nUsing Private Repositories\n\u00b6\n\n\nTo pull code from private repositories, set the \nSSH_KEY\n environment variable to a private key\nwhich has access. Use either the path of a private key file or the raw key material:\n\n\n$ deis config:set SSH_KEY=/home/user/.ssh/id_rsa\n$ deis config:set SSH_KEY=\"\"\"-----BEGIN RSA PRIVATE KEY-----\n(...)\n-----END RSA PRIVATE KEY-----\"\"\"\n\n\n\n\nFor example, to use a custom buildpack hosted at a private GitHub URL, ensure that an SSH public\nkey exists in your \nGitHub settings\n. Then set \nSSH_KEY\n to the corresponding SSH private key\nand set \nBUILDPACK_URL\n to the URL:\n\n\n$ deis config:set SSH_KEY=/home/user/.ssh/github_id_rsa\n$ deis config:set BUILDPACK_URL=git@github.com:user/private_buildpack.git\n$ git push deis master",
            "title": "Buildpacks"
        },
        {
            "location": "/applications/using-buildpacks/#using-buildpacks",
            "text": "Deis supports deploying applications via  Heroku Buildpacks . Buildpacks are useful if you're interested in following Heroku's best practices for building applications or if you are deploying an application that already runs on Heroku.",
            "title": "Using Buildpacks"
        },
        {
            "location": "/applications/using-buildpacks/#add-ssh-key",
            "text": "For  Buildpack  based application deploys via  git push , Deis Workflow identifies users via SSH keys. SSH keys are pushed to the platform and must be unique to each user.    See  this document  for instructions on how to generate an SSH key.    Run  deis keys:add  to upload your SSH key to Deis Workflow.    $ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done  Read more about adding/removing SSH Keys  here .",
            "title": "Add SSH Key"
        },
        {
            "location": "/applications/using-buildpacks/#prepare-an-application",
            "text": "If you do not have an existing application, you can clone an example application that demonstrates the Heroku Buildpack workflow.  $ git clone https://github.com/deisthree/example-go.git\n$ cd example-go",
            "title": "Prepare an Application"
        },
        {
            "location": "/applications/using-buildpacks/#create-an-application",
            "text": "Use  deis create  to create an application on the  Controller .  $ deis create\nCreating application... done, created skiing-keypunch\nGit remote deis added",
            "title": "Create an Application"
        },
        {
            "location": "/applications/using-buildpacks/#push-to-deploy",
            "text": "Use  git push deis master  to deploy your application.  $ git push deis master\nCounting objects: 75, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (48/48), done.\nWriting objects: 100% (75/75), 18.28 KiB | 0 bytes/s, done.\nTotal 75 (delta 30), reused 58 (delta 22)\nStarting build... but first, coffee!\n-----> Go app detected\n-----> Checking Godeps/Godeps.json file.\n-----> Installing go1.4.2... done\n-----> Running: godep go install -tags heroku ./...\n-----> Discovering process types\n       Procfile declares types -> web\n-----> Compiled slug size is 1.7M\nBuild complete.\nLaunching app.\nLaunching...\nDone, skiing-keypunch:v2 deployed to Deis\n\nUse 'deis open' to view this application in your browser\n\nTo learn more, use 'deis help' or visit http://deis.io\n\nTo ssh://git@deis.staging-2.deis.com:2222/skiing-keypunch.git\n * [new branch]      master -> master\n\n$ curl -s http://skiing-keypunch.example.com\nPowered by Deis\nRelease v2 on skiing-keypunch-v2-web-02zb9  Because a Heroku-style application is detected, the  web  process type is automatically scaled to 1 on first deploy.  Use  deis scale web=3  to increase  web  processes to 3, for example. Scaling a\nprocess type directly changes the number of  pods  running that process.",
            "title": "Push to Deploy"
        },
        {
            "location": "/applications/using-buildpacks/#included-buildpacks",
            "text": "For convenience, a number of buildpacks come bundled with Deis:   Ruby Buildpack  Nodejs Buildpack  Java Buildpack  Gradle Buildpack  Grails Buildpack  Play Buildpack  Python Buildpack  PHP Buildpack  Clojure Buildpack  Scala Buildpack  Go Buildpack  Multi Buildpack   Deis will cycle through the  bin/detect  script of each buildpack to match the code you\nare pushing.   Note  If you're testing against the  Scala Buildpack , the  Builder  requires at least\n512MB of free memory to execute the Scala Build Tool.",
            "title": "Included Buildpacks"
        },
        {
            "location": "/applications/using-buildpacks/#using-a-custom-buildpack",
            "text": "To use a custom buildpack, set the  BUILDPACK_URL  environment variable.  $ deis config:set BUILDPACK_URL=https://github.com/dpiddy/heroku-buildpack-ruby-minimal\nCreating config... done, v2\n\n=== humble-autoharp\nBUILDPACK_URL: https://github.com/dpiddy/heroku-buildpack-ruby-minimal   Note  If, however, you're unable to deploy using the latest version of the buildpack, You can set an exact version of a buildpack by using a git revision in your  BUILDPACK_URL . For example:  BUILDPACK_URL=https://github.com/dpiddy/heroku-buildpack-ruby-minimal#v13   On your next  git push , the custom buildpack will be used.",
            "title": "Using a Custom Buildpack"
        },
        {
            "location": "/applications/using-buildpacks/#compile-hooks",
            "text": "Sometimes, an application needs a way to stop or check if a service is running before building an\napp, which may require notifying a service that the  Builder  has finished compiling the app. In\norder to do this, an app can provide two files in their  bin/  directory:  bin/pre-compile\nbin/post-compile  The builder will run these commands before and after the build process, respectively.",
            "title": "Compile Hooks"
        },
        {
            "location": "/applications/using-buildpacks/#using-private-repositories",
            "text": "To pull code from private repositories, set the  SSH_KEY  environment variable to a private key\nwhich has access. Use either the path of a private key file or the raw key material:  $ deis config:set SSH_KEY=/home/user/.ssh/id_rsa\n$ deis config:set SSH_KEY=\"\"\"-----BEGIN RSA PRIVATE KEY-----\n(...)\n-----END RSA PRIVATE KEY-----\"\"\"  For example, to use a custom buildpack hosted at a private GitHub URL, ensure that an SSH public\nkey exists in your  GitHub settings . Then set  SSH_KEY  to the corresponding SSH private key\nand set  BUILDPACK_URL  to the URL:  $ deis config:set SSH_KEY=/home/user/.ssh/github_id_rsa\n$ deis config:set BUILDPACK_URL=git@github.com:user/private_buildpack.git\n$ git push deis master",
            "title": "Using Private Repositories"
        },
        {
            "location": "/applications/using-dockerfiles/",
            "text": "Using Dockerfiles\n\u00b6\n\n\nDeis supports deploying applications via Dockerfiles.  A \nDockerfile\n automates the steps for crafting a \nDocker Image\n.\nDockerfiles are incredibly powerful but require some extra work to define your exact application runtime environment.\n\n\nAdd SSH Key\n\u00b6\n\n\nFor \nDockerfile\n based application deploys via \ngit push\n, Deis Workflow identifies users via SSH keys. SSH keys are pushed to the platform and must be unique to each user.\n\n\n\n\n\n\nSee \nthis document\n for instructions on how to generate an SSH key.\n\n\n\n\n\n\nRun \ndeis keys:add\n to upload your SSH key to Deis Workflow.\n\n\n\n\n\n\n$ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done\n\n\n\n\nRead more about adding/removing SSH Keys \nhere\n.\n\n\nPrepare an Application\n\u00b6\n\n\nIf you do not have an existing application, you can clone an example application that demonstrates the Dockerfile workflow.\n\n\n$ git clone https://github.com/deisthree/helloworld.git\n$ cd helloworld\n\n\n\n\nDockerfile Requirements\n\u00b6\n\n\nIn order to deploy Dockerfile applications, they must conform to the following requirements:\n\n\n\n\nThe Dockerfile must use the \nEXPOSE\n directive to expose exactly one port.\n\n\nThat port must be listening for an HTTP connection.\n\n\nThe Dockerfile must use the \nCMD\n directive to define the default process that will run within the container.\n\n\nThe Docker image must contain \nbash\n to run processes.\n\n\n\n\n\n\nNote\n\n\nNote that if you are using a private registry of any kind (\ngcr\n or other) the application environment must include a \n$PORT\n config variable that matches the \nEXPOSE\n'd port, example: \ndeis config:set PORT=5000\n. See \nConfiguring Registry\n for more info.\n\n\n\n\nCreate an Application\n\u00b6\n\n\nUse \ndeis create\n to create an application on the \nController\n.\n\n\n$ deis create\nCreating application... done, created folksy-offshoot\nGit remote deis added\n\n\n\n\nPush to Deploy\n\u00b6\n\n\nUse \ngit push deis master\n to deploy your application.\n\n\n$ git push deis master\nCounting objects: 13, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (13/13), done.\nWriting objects: 100% (13/13), 1.99 KiB | 0 bytes/s, done.\nTotal 13 (delta 2), reused 0 (delta 0)\n-----> Building Docker image\nUploading context 4.096 kB\nUploading context\nStep 0 : FROM deis/base:latest\n ---> 60024338bc63\nStep 1 : RUN wget -O /tmp/go1.2.1.linux-amd64.tar.gz -q https://go.googlecode.com/files/go1.2.1.linux-amd64.tar.gz\n ---> Using cache\n ---> cf9ef8c5caa7\nStep 2 : RUN tar -C /usr/local -xzf /tmp/go1.2.1.linux-amd64.tar.gz\n ---> Using cache\n ---> 515b1faf3bd8\nStep 3 : RUN mkdir -p /go\n ---> Using cache\n ---> ebf4927a00e9\nStep 4 : ENV GOPATH /go\n ---> Using cache\n ---> c6a276eded37\nStep 5 : ENV PATH /usr/local/go/bin:/go/bin:$PATH\n ---> Using cache\n ---> 2ba6f6c9f108\nStep 6 : ADD . /go/src/github.com/deis/helloworld\n ---> 94ab7f4b977b\nRemoving intermediate container 171b7d9fdb34\nStep 7 : RUN cd /go/src/github.com/deis/helloworld && go install -v .\n ---> Running in 0c8fbb2d2812\ngithub.com/deis/helloworld\n ---> 13b5af931393\nRemoving intermediate container 0c8fbb2d2812\nStep 8 : ENV PORT 80\n ---> Running in 9b07da36a272\n ---> 2dce83167874\nRemoving intermediate container 9b07da36a272\nStep 9 : CMD [\"/go/bin/helloworld\"]\n ---> Running in f7b215199940\n ---> b1e55ce5195a\nRemoving intermediate container f7b215199940\nStep 10 : EXPOSE 80\n ---> Running in 7eb8ec45dcb0\n ---> ea1a8cc93ca3\nRemoving intermediate container 7eb8ec45dcb0\nSuccessfully built ea1a8cc93ca3\n-----> Pushing image to private registry\n\n       Launching... done, v2\n\n-----> folksy-offshoot deployed to Deis\n       http://folksy-offshoot.local3.deisapp.com\n\n       To learn more, use `deis help` or visit http://deis.io\n\nTo ssh://git@local3.deisapp.com:2222/folksy-offshoot.git\n * [new branch]      master -> master\n\n$ curl -s http://folksy-offshoot.local3.deisapp.com\nWelcome to Deis!\nSee the documentation at http://docs.deis.io/ for more information.\n\n\n\n\nBecause a Dockerfile application is detected, the \ncmd\n process type is automatically scaled to 1 on first deploy.\n\n\nUse \ndeis scale cmd=3\n to increase \ncmd\n processes to 3, for example. Scaling a\nprocess type directly changes the number of \ncontainers\n\nrunning that process.\n\n\nDocker Build Arguments\n\u00b6\n\n\nAs of Workflow v2.13.0, users can inject their application config into the Docker image using\n\nDocker build arguments\n. To opt into this, users must add a new environment variable\nto their application:\n\n\n$ deis config:set DEIS_DOCKER_BUILD_ARGS_ENABLED=1\n\n\n\n\nEvery environment variable set with \ndeis config:set\n will then be available for use inside the\nuser's Dockerfile. For example, if a user runs \ndeis config:set POWERED_BY=Workflow\n,\nthe user can utilize that build argument in their Dockerfile:\n\n\nARG POWERED_BY\nRUN echo \"Powered by $POWERED_BY\" > /etc/motd",
            "title": "Dockerfiles"
        },
        {
            "location": "/applications/using-dockerfiles/#using-dockerfiles",
            "text": "Deis supports deploying applications via Dockerfiles.  A  Dockerfile  automates the steps for crafting a  Docker Image .\nDockerfiles are incredibly powerful but require some extra work to define your exact application runtime environment.",
            "title": "Using Dockerfiles"
        },
        {
            "location": "/applications/using-dockerfiles/#add-ssh-key",
            "text": "For  Dockerfile  based application deploys via  git push , Deis Workflow identifies users via SSH keys. SSH keys are pushed to the platform and must be unique to each user.    See  this document  for instructions on how to generate an SSH key.    Run  deis keys:add  to upload your SSH key to Deis Workflow.    $ deis keys:add ~/.ssh/id_deis.pub\nUploading id_deis.pub to deis... done  Read more about adding/removing SSH Keys  here .",
            "title": "Add SSH Key"
        },
        {
            "location": "/applications/using-dockerfiles/#prepare-an-application",
            "text": "If you do not have an existing application, you can clone an example application that demonstrates the Dockerfile workflow.  $ git clone https://github.com/deisthree/helloworld.git\n$ cd helloworld",
            "title": "Prepare an Application"
        },
        {
            "location": "/applications/using-dockerfiles/#dockerfile-requirements",
            "text": "In order to deploy Dockerfile applications, they must conform to the following requirements:   The Dockerfile must use the  EXPOSE  directive to expose exactly one port.  That port must be listening for an HTTP connection.  The Dockerfile must use the  CMD  directive to define the default process that will run within the container.  The Docker image must contain  bash  to run processes.    Note  Note that if you are using a private registry of any kind ( gcr  or other) the application environment must include a  $PORT  config variable that matches the  EXPOSE 'd port, example:  deis config:set PORT=5000 . See  Configuring Registry  for more info.",
            "title": "Dockerfile Requirements"
        },
        {
            "location": "/applications/using-dockerfiles/#create-an-application",
            "text": "Use  deis create  to create an application on the  Controller .  $ deis create\nCreating application... done, created folksy-offshoot\nGit remote deis added",
            "title": "Create an Application"
        },
        {
            "location": "/applications/using-dockerfiles/#push-to-deploy",
            "text": "Use  git push deis master  to deploy your application.  $ git push deis master\nCounting objects: 13, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (13/13), done.\nWriting objects: 100% (13/13), 1.99 KiB | 0 bytes/s, done.\nTotal 13 (delta 2), reused 0 (delta 0)\n-----> Building Docker image\nUploading context 4.096 kB\nUploading context\nStep 0 : FROM deis/base:latest\n ---> 60024338bc63\nStep 1 : RUN wget -O /tmp/go1.2.1.linux-amd64.tar.gz -q https://go.googlecode.com/files/go1.2.1.linux-amd64.tar.gz\n ---> Using cache\n ---> cf9ef8c5caa7\nStep 2 : RUN tar -C /usr/local -xzf /tmp/go1.2.1.linux-amd64.tar.gz\n ---> Using cache\n ---> 515b1faf3bd8\nStep 3 : RUN mkdir -p /go\n ---> Using cache\n ---> ebf4927a00e9\nStep 4 : ENV GOPATH /go\n ---> Using cache\n ---> c6a276eded37\nStep 5 : ENV PATH /usr/local/go/bin:/go/bin:$PATH\n ---> Using cache\n ---> 2ba6f6c9f108\nStep 6 : ADD . /go/src/github.com/deis/helloworld\n ---> 94ab7f4b977b\nRemoving intermediate container 171b7d9fdb34\nStep 7 : RUN cd /go/src/github.com/deis/helloworld && go install -v .\n ---> Running in 0c8fbb2d2812\ngithub.com/deis/helloworld\n ---> 13b5af931393\nRemoving intermediate container 0c8fbb2d2812\nStep 8 : ENV PORT 80\n ---> Running in 9b07da36a272\n ---> 2dce83167874\nRemoving intermediate container 9b07da36a272\nStep 9 : CMD [\"/go/bin/helloworld\"]\n ---> Running in f7b215199940\n ---> b1e55ce5195a\nRemoving intermediate container f7b215199940\nStep 10 : EXPOSE 80\n ---> Running in 7eb8ec45dcb0\n ---> ea1a8cc93ca3\nRemoving intermediate container 7eb8ec45dcb0\nSuccessfully built ea1a8cc93ca3\n-----> Pushing image to private registry\n\n       Launching... done, v2\n\n-----> folksy-offshoot deployed to Deis\n       http://folksy-offshoot.local3.deisapp.com\n\n       To learn more, use `deis help` or visit http://deis.io\n\nTo ssh://git@local3.deisapp.com:2222/folksy-offshoot.git\n * [new branch]      master -> master\n\n$ curl -s http://folksy-offshoot.local3.deisapp.com\nWelcome to Deis!\nSee the documentation at http://docs.deis.io/ for more information.  Because a Dockerfile application is detected, the  cmd  process type is automatically scaled to 1 on first deploy.  Use  deis scale cmd=3  to increase  cmd  processes to 3, for example. Scaling a\nprocess type directly changes the number of  containers \nrunning that process.",
            "title": "Push to Deploy"
        },
        {
            "location": "/applications/using-dockerfiles/#docker-build-arguments",
            "text": "As of Workflow v2.13.0, users can inject their application config into the Docker image using Docker build arguments . To opt into this, users must add a new environment variable\nto their application:  $ deis config:set DEIS_DOCKER_BUILD_ARGS_ENABLED=1  Every environment variable set with  deis config:set  will then be available for use inside the\nuser's Dockerfile. For example, if a user runs  deis config:set POWERED_BY=Workflow ,\nthe user can utilize that build argument in their Dockerfile:  ARG POWERED_BY\nRUN echo \"Powered by $POWERED_BY\" > /etc/motd",
            "title": "Docker Build Arguments"
        },
        {
            "location": "/applications/using-docker-images/",
            "text": "Using Docker Images\n\u00b6\n\n\nDeis supports deploying applications via an existing \nDocker Image\n.\nThis is useful for integrating Deis into Docker-based CI/CD pipelines.\n\n\nPrepare an Application\n\u00b6\n\n\nStart by cloning an example application:\n\n\n$ git clone https://github.com/deisthree/example-dockerfile-http.git\n$ cd example-dockerfile-http\n\n\n\n\nNext use your local \ndocker\n client to build the image and push\nit to \nDockerHub\n.\n\n\n$ docker build -t <username>/example-dockerfile-http .\n$ docker push <username>/example-dockerfile-http\n\n\n\n\nDocker Image Requirements\n\u00b6\n\n\nIn order to deploy Docker images, they must conform to the following requirements:\n\n\n\n\nThe Dockerfile must use the \nEXPOSE\n directive to expose exactly one port.\n\n\nThat port must be listening for an HTTP connection.\n\n\nThe Dockerfile must use the \nCMD\n directive to define the default process that will run within the container.\n\n\nThe Docker image must contain \nbash\n to run processes.\n\n\n\n\n\n\nNote\n\n\nNote that if you are using a private registry of any kind (\ngcr\n or other) the application environment must include a \n$PORT\n config variable that matches the \nEXPOSE\n'd port, example: \ndeis config:set PORT=5000\n. See \nConfiguring Registry\n for more info.\n\n\n\n\nCreate an Application\n\u00b6\n\n\nUse \ndeis create\n to create an application on the \ncontroller\n.\n\n\n$ mkdir -p /tmp/example-dockerfile-http && cd /tmp/example-dockerfile-http\n$ deis create example-dockerfile-http --no-remote\nCreating application... done, created example-dockerfile-http\n\n\n\n\n\n\nNote\n\n\nFor all commands except for \ndeis create\n, the \ndeis\n client uses the name of the current directory\nas the app name if you don't specify it explicitly with \n--app\n.\n\n\n\n\nDeploy the Application\n\u00b6\n\n\nUse \ndeis pull\n to deploy your application from \nDockerHub\n or\na public registry.\n\n\n$ deis pull <username>/example-dockerfile-http:latest\nCreating build...  done, v2\n\n$ curl -s http://example-dockerfile-http.local3.deisapp.com\nPowered by Deis\n\n\n\n\nBecause you are deploying a Docker image, the \ncmd\n process type is automatically scaled to 1 on first deploy.\n\n\nUse \ndeis scale cmd=3\n to increase \ncmd\n processes to 3, for example. Scaling a\nprocess type directly changes the number of \nContainers\n\nrunning that process.\n\n\nPrivate Registry\n\u00b6\n\n\nTo deploy Docker images from a private registry or from a private repository, use \ndeis registry\n\nto attach credentials to your application. These credentials are the same as you'd use when running\n\ndocker login\n at your private registry.\n\n\nTo deploy private Docker images, take the following steps:\n\n\n\n\nGather the username and password for the registry, such as a \nQuay.io Robot Account\n or a \nGCR.io Long Lived Token\n\n\nRun \ndeis registry:set username=<the-user> password=<secret> -a <application-name>\n\n\nNow perform \ndeis pull\n as normal, against an image in the private registry\n\n\n\n\nWhen using a \nGCR.io Long Lived Token\n, the JSON blob will have to be compacted first using a\ntool like \njq\n and then used in the password field in \ndeis registry:set\n. For the username, use\n\n_json_key\n. For example:\n\n\ndeis registry:set username=_json_key password=\"$(cat google_cloud_cred.json | jq -c .)\"\n\n\n\n\nWhen using a private registry the docker images are no longer pulled into the Deis Internal Registry via\nthe Deis Workflow Controller but rather is managed by Kubernetes. This will increase security and overall speed,\nhowever the application \nport\n information can no longer be discovered. Instead the application \nport\n information can be set via\n\ndeis config:set PORT=80\n prior to setting the registry information.\n\n\n\n\nNote\n\n\nCurrently \nGCR.io\n and \nECR\n in short lived auth token mode are not supported.",
            "title": "Docker Images"
        },
        {
            "location": "/applications/using-docker-images/#using-docker-images",
            "text": "Deis supports deploying applications via an existing  Docker Image .\nThis is useful for integrating Deis into Docker-based CI/CD pipelines.",
            "title": "Using Docker Images"
        },
        {
            "location": "/applications/using-docker-images/#prepare-an-application",
            "text": "Start by cloning an example application:  $ git clone https://github.com/deisthree/example-dockerfile-http.git\n$ cd example-dockerfile-http  Next use your local  docker  client to build the image and push\nit to  DockerHub .  $ docker build -t <username>/example-dockerfile-http .\n$ docker push <username>/example-dockerfile-http",
            "title": "Prepare an Application"
        },
        {
            "location": "/applications/using-docker-images/#docker-image-requirements",
            "text": "In order to deploy Docker images, they must conform to the following requirements:   The Dockerfile must use the  EXPOSE  directive to expose exactly one port.  That port must be listening for an HTTP connection.  The Dockerfile must use the  CMD  directive to define the default process that will run within the container.  The Docker image must contain  bash  to run processes.    Note  Note that if you are using a private registry of any kind ( gcr  or other) the application environment must include a  $PORT  config variable that matches the  EXPOSE 'd port, example:  deis config:set PORT=5000 . See  Configuring Registry  for more info.",
            "title": "Docker Image Requirements"
        },
        {
            "location": "/applications/using-docker-images/#create-an-application",
            "text": "Use  deis create  to create an application on the  controller .  $ mkdir -p /tmp/example-dockerfile-http && cd /tmp/example-dockerfile-http\n$ deis create example-dockerfile-http --no-remote\nCreating application... done, created example-dockerfile-http   Note  For all commands except for  deis create , the  deis  client uses the name of the current directory\nas the app name if you don't specify it explicitly with  --app .",
            "title": "Create an Application"
        },
        {
            "location": "/applications/using-docker-images/#deploy-the-application",
            "text": "Use  deis pull  to deploy your application from  DockerHub  or\na public registry.  $ deis pull <username>/example-dockerfile-http:latest\nCreating build...  done, v2\n\n$ curl -s http://example-dockerfile-http.local3.deisapp.com\nPowered by Deis  Because you are deploying a Docker image, the  cmd  process type is automatically scaled to 1 on first deploy.  Use  deis scale cmd=3  to increase  cmd  processes to 3, for example. Scaling a\nprocess type directly changes the number of  Containers \nrunning that process.",
            "title": "Deploy the Application"
        },
        {
            "location": "/applications/using-docker-images/#private-registry",
            "text": "To deploy Docker images from a private registry or from a private repository, use  deis registry \nto attach credentials to your application. These credentials are the same as you'd use when running docker login  at your private registry.  To deploy private Docker images, take the following steps:   Gather the username and password for the registry, such as a  Quay.io Robot Account  or a  GCR.io Long Lived Token  Run  deis registry:set username=<the-user> password=<secret> -a <application-name>  Now perform  deis pull  as normal, against an image in the private registry   When using a  GCR.io Long Lived Token , the JSON blob will have to be compacted first using a\ntool like  jq  and then used in the password field in  deis registry:set . For the username, use _json_key . For example:  deis registry:set username=_json_key password=\"$(cat google_cloud_cred.json | jq -c .)\"  When using a private registry the docker images are no longer pulled into the Deis Internal Registry via\nthe Deis Workflow Controller but rather is managed by Kubernetes. This will increase security and overall speed,\nhowever the application  port  information can no longer be discovered. Instead the application  port  information can be set via deis config:set PORT=80  prior to setting the registry information.   Note  Currently  GCR.io  and  ECR  in short lived auth token mode are not supported.",
            "title": "Private Registry"
        },
        {
            "location": "/applications/managing-app-processes/",
            "text": "Managing Application Processes\n\u00b6\n\n\nDeis Workflow manages your application as a set of processes that can be named, scaled and configured according to their\nrole. This gives you the flexibility to easily manage the different facets of your application. For example, you may have\nweb-facing processes that handle HTTP traffic, background worker processes that do async work, and a helper process that\nstreams from the Twitter API.\n\n\nBy using a Procfile, either checked in to your application or provided via the CLI you can specify the name of the type\nand the application command that should run. To spawn other process types, use \ndeis scale <type>=<n>\n to scale those\ntypes accordingly.\n\n\nDefault Process Types\n\u00b6\n\n\nIn the absence of a Procfile, a single, default process type is assumed for each application.\n\n\nApplications built using \nBuildpacks\n via \ngit push\n implicitly receive a \nweb\n process type, which starts\nthe application server. Rails 4, for example, has the following process type:\n\n\nweb: bundle exec rails server -p $PORT\n\n\n\n\nAll applications utilizing \nDockerfiles\n have an implied \ncmd\n process type, which runs the\nDockerfile's \nCMD\n directive unmodified:\n\n\n$ cat Dockerfile\nFROM centos:latest\nCOPY . /app\nWORKDIR /app\nCMD python -m SimpleHTTPServer 5000\nEXPOSE 5000\n\n\n\n\nFor the above Dockerfile-based application, the \ncmd\n process type would run the Docker \nCMD\n of \npython -m SimpleHTTPServer 5000\n.\n\n\nApplications utilizing \nremote Docker images\n, a \ncmd\n process type is also implied, and runs the \nCMD\n\nspecified in the Docker image.\n\n\n\n\nNote\n\n\nThe \nweb\n and \ncmd\n process types are special as they\u2019re the only process types that will\nreceive HTTP traffic from Workflow\u2019s routers. Other process types can be named arbitrarily.\n\n\n\n\nDeclaring Process Types\n\u00b6\n\n\nIf you use \nBuildpack\n or \nDockerfile\n builds and want to override or specify additional process\ntypes, simply include a file named \nProcfile\n in the root of your application's source tree.\n\n\nThe format of a \nProcfile\n is one process type per line, with each line containing the command to invoke:\n\n\n<process type>: <command>\n\n\n\n\nThe syntax is defined as:\n\n\n\n\n<process type>\n \u2013 a lowercase alphanumeric string, is a name for your command, such as web, worker, urgentworker, clock, etc.\n\n\n<command>\n \u2013 a command line to launch the process, such as \nrake jobs:work\n.\n\n\n\n\nThis example Procfile specifies two types, \nweb\n and \nsleeper\n. The \nweb\n process launches a web server on port 5000 and\na simple process which sleeps for 900 seconds and exits.\n\n\n$ cat Procfile\nweb: bundle exec ruby web.rb -p ${PORT:-5000}\nsleeper: sleep 900\n\n\n\n\nIf you are using \nremote Docker images\n, you may define process types by either running \ndeis pull\n with a\n\nProcfile\n in your working directory, or by passing a stringified Procfile to the \n--procfile\n CLI option.\n\n\nFor example, passing process types inline:\n\n\n$ deis pull deis/example-go:latest --procfile=\"cmd: /app/bin/boot\"\n\n\n\n\nRead a \nProcfile\n in another directory:\n\n\n$ deis pull deis/example-go:latest --procfile=\"$(cat deploy/Procfile)\"\n\n\n\n\nOr via a Procfile located in your current, working directory:\n\n\n$ cat Procfile\ncmd: /bin/boot\nsleeper: echo \"sleeping\"; sleep 900\n\n\n$ deis pull -a steely-mainsail deis/example-go\nCreating build... done\n\n$ deis scale sleeper=1 -a steely-mainsail\nScaling processes... but first, coffee!\ndone in 0s\n=== steely-mainsail Processes\n--- cmd:\nsteely-mainsail-cmd-3291896318-nyrim up (v3)\n--- sleeper:\nsteely-mainsail-sleeper-3291896318-oq1jr up (v3)\n\n\n\n\n\n\nNote\n\n\nOnly process types of \nweb\n and \ncmd\n will be scaled to 1 automatically. If you have additional process types\nremember to scale the process counts after creation.\n\n\n\n\nTo remove a process type simply scale it to 0:\n\n\n$ deis scale sleeper=0 -a steely-mainsail\nScaling processes... but first, coffee!\ndone in 3s\n=== steely-mainsail Processes\n--- cmd:\nsteely-mainsail-cmd-3291896318-nyrim up (v3)\n\n\n\n\nScaling Processes\n\u00b6\n\n\nApplications deployed on Deis Workflow scale out via the \nprocess model\n. Use \ndeis scale\n to control the number of\n\ncontainers\n that power your app.\n\n\n$ deis scale cmd=5 -a iciest-waggoner\nScaling processes... but first, coffee!\ndone in 3s\n=== iciest-waggoner Processes\n--- cmd:\niciest-waggoner-web-3291896318-09j0o up (v2)\niciest-waggoner-web-3291896318-3r7kp up (v2)\niciest-waggoner-web-3291896318-gc4xv up (v2)\niciest-waggoner-web-3291896318-lviwo up (v2)\niciest-waggoner-web-3291896318-kt7vu up (v2)\n\n\n\n\nIf you have multiple process types for your application you may scale the process count for each type separately. For\nexample, this allows you to manage web process independently from background workers. For more information on process\ntypes see our documentation for \nManaging App Processes\n.\n\n\nIn this example, we are scaling the process type \nweb\n to 5 but leaving the process type \nbackground\n with one worker.\n\n\n$ deis scale web=5\nScaling processes... but first, coffee!\ndone in 4s\n=== scenic-icehouse Processes\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-jn957 up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vwhnh up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)\n--- background:\nscenic-icehouse-web-3291896318-background-yf8kh up (v2)\n\n\n\n\n\n\nNote\n\n\nThe default process type for Dockerfile and Docker Image applications is 'cmd' rather than 'web'.\n\n\n\n\nScaling a process down, by reducing the process count, sends a \nTERM\n signal to the processes, followed by a \nSIGKILL\n\nif they have not exited within 30 seconds. Depending on your application, scaling down may interrupt long-running HTTP\nclient connections.\n\n\nFor example, scaling from 5 processes to 3:\n\n\n$ deis scale web=3\nScaling processes... but first, coffee!\ndone in 1s\n=== scenic-icehouse Processes\n--- background:\nscenic-icehouse-web-3291896318-background-yf8kh up (v2)\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)\n\n\n\n\nAutoscale\n\u00b6\n\n\nAutoscale allows adding a minimum and maximum number of pods on a per process type basis. This is accomplished by specifying a target CPU usage across all available pods.\n\n\nThis feature is built on top of \nHorizontal Pod Autoscaling\n in Kubernetes or \nHPA\n for short.\n\n\n\n\nNote\n\n\nThis is an alpha feature. It is recommended to be on the latest Kubernetes when using this feature.\n\n\n\n\n$ deis autoscale:set web --min=3 --max=8 --cpu-percent=75\nApplying autoscale settings for process type web on scenic-icehouse... done\n\n\n\n\nAnd then review the scaling rule that was created for \nweb\n\n\n$ deis autoscale:list\n=== scenic-icehouse Autoscale\n\n--- web:\nMin Replicas: 3\nMax Replicas: 8\nCPU: 75%\n\n\n\n\nRemove scaling rule\n\n\n$ deis autoscale:unset web\nRemoving autoscale for process type web on scenic-icehouse... done\n\n\n\n\nFor autoscaling to work CPU requests have to be specified on each application Pod (can be done via \ndeis limits --cpu\n). This allows the autoscale policies to do the \nappropriate calculations\n and make decisions on when to scale up and down.\n\n\nScale up can only happen if there was no rescaling within the last 3 minutes. Scale down will wait for 5 minutes from the last rescaling. That information and more can be found at \nHPA algorithm page\n.\n\n\nWeb vs Cmd Process Types\n\u00b6\n\n\nWhen deploying to Deis Workflow using a Heroku Buildpack, Workflow boots the \nweb\n process type to\nboot the application server. When you deploy an application that has a Dockerfile or uses \nDocker\nimages\n, Workflow boots the \ncmd\n process type. Both act similarly in that\nthey are exposed to the router as web applications. However, the \ncmd\n process type is special\nbecause, if left undefined, it is equivalent to running the \ncontainer\n without any additional\narguments.  (i.e. The process specified by the Dockerfile or Docker image's \nCMD\n directive will\nbe used.)\n\n\nIf migrating an application from Heroku Buildpacks to a Docker-based deployment, Workflow will not\nautomatically convert the \nweb\n process type to \ncmd\n. To do this, you'll have to manually scale\ndown the old process type and scale the new process type up.\n\n\nRestarting an Application Processes\n\u00b6\n\n\nIf you need to restart an application process, you may use \ndeis ps:restart\n. Behind the scenes, Deis Workflow instructs\nKubernetes to terminate the old process and launch a new one in its place.\n\n\n$ deis ps\n=== scenic-icehouse Processes\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)\n--- background:\nscenic-icehouse-background-3291896318-yf8kh up (v2)\n$ deis ps:restart scenic-icehouse-background-3291896318-yf8kh\nRestarting processes... but first, coffee!\ndone in 6s\n=== scenic-icehouse Processes\n--- background:\nscenic-icehouse-background-3291896318-yd87g up (v2)\n\n\n\n\nNotice that the process name has changed from \nscenic-icehouse-background-3291896318-yf8kh\n to\n\nscenic-icehouse-background-3291896318-yd87g\n. In a multi-node Kubernetes cluster, this may also have the effect of scheduling\nthe Pod to a new node.",
            "title": "Managing App Processes"
        },
        {
            "location": "/applications/managing-app-processes/#managing-application-processes",
            "text": "Deis Workflow manages your application as a set of processes that can be named, scaled and configured according to their\nrole. This gives you the flexibility to easily manage the different facets of your application. For example, you may have\nweb-facing processes that handle HTTP traffic, background worker processes that do async work, and a helper process that\nstreams from the Twitter API.  By using a Procfile, either checked in to your application or provided via the CLI you can specify the name of the type\nand the application command that should run. To spawn other process types, use  deis scale <type>=<n>  to scale those\ntypes accordingly.",
            "title": "Managing Application Processes"
        },
        {
            "location": "/applications/managing-app-processes/#default-process-types",
            "text": "In the absence of a Procfile, a single, default process type is assumed for each application.  Applications built using  Buildpacks  via  git push  implicitly receive a  web  process type, which starts\nthe application server. Rails 4, for example, has the following process type:  web: bundle exec rails server -p $PORT  All applications utilizing  Dockerfiles  have an implied  cmd  process type, which runs the\nDockerfile's  CMD  directive unmodified:  $ cat Dockerfile\nFROM centos:latest\nCOPY . /app\nWORKDIR /app\nCMD python -m SimpleHTTPServer 5000\nEXPOSE 5000  For the above Dockerfile-based application, the  cmd  process type would run the Docker  CMD  of  python -m SimpleHTTPServer 5000 .  Applications utilizing  remote Docker images , a  cmd  process type is also implied, and runs the  CMD \nspecified in the Docker image.   Note  The  web  and  cmd  process types are special as they\u2019re the only process types that will\nreceive HTTP traffic from Workflow\u2019s routers. Other process types can be named arbitrarily.",
            "title": "Default Process Types"
        },
        {
            "location": "/applications/managing-app-processes/#declaring-process-types",
            "text": "If you use  Buildpack  or  Dockerfile  builds and want to override or specify additional process\ntypes, simply include a file named  Procfile  in the root of your application's source tree.  The format of a  Procfile  is one process type per line, with each line containing the command to invoke:  <process type>: <command>  The syntax is defined as:   <process type>  \u2013 a lowercase alphanumeric string, is a name for your command, such as web, worker, urgentworker, clock, etc.  <command>  \u2013 a command line to launch the process, such as  rake jobs:work .   This example Procfile specifies two types,  web  and  sleeper . The  web  process launches a web server on port 5000 and\na simple process which sleeps for 900 seconds and exits.  $ cat Procfile\nweb: bundle exec ruby web.rb -p ${PORT:-5000}\nsleeper: sleep 900  If you are using  remote Docker images , you may define process types by either running  deis pull  with a Procfile  in your working directory, or by passing a stringified Procfile to the  --procfile  CLI option.  For example, passing process types inline:  $ deis pull deis/example-go:latest --procfile=\"cmd: /app/bin/boot\"  Read a  Procfile  in another directory:  $ deis pull deis/example-go:latest --procfile=\"$(cat deploy/Procfile)\"  Or via a Procfile located in your current, working directory:  $ cat Procfile\ncmd: /bin/boot\nsleeper: echo \"sleeping\"; sleep 900\n\n\n$ deis pull -a steely-mainsail deis/example-go\nCreating build... done\n\n$ deis scale sleeper=1 -a steely-mainsail\nScaling processes... but first, coffee!\ndone in 0s\n=== steely-mainsail Processes\n--- cmd:\nsteely-mainsail-cmd-3291896318-nyrim up (v3)\n--- sleeper:\nsteely-mainsail-sleeper-3291896318-oq1jr up (v3)   Note  Only process types of  web  and  cmd  will be scaled to 1 automatically. If you have additional process types\nremember to scale the process counts after creation.   To remove a process type simply scale it to 0:  $ deis scale sleeper=0 -a steely-mainsail\nScaling processes... but first, coffee!\ndone in 3s\n=== steely-mainsail Processes\n--- cmd:\nsteely-mainsail-cmd-3291896318-nyrim up (v3)",
            "title": "Declaring Process Types"
        },
        {
            "location": "/applications/managing-app-processes/#scaling-processes",
            "text": "Applications deployed on Deis Workflow scale out via the  process model . Use  deis scale  to control the number of containers  that power your app.  $ deis scale cmd=5 -a iciest-waggoner\nScaling processes... but first, coffee!\ndone in 3s\n=== iciest-waggoner Processes\n--- cmd:\niciest-waggoner-web-3291896318-09j0o up (v2)\niciest-waggoner-web-3291896318-3r7kp up (v2)\niciest-waggoner-web-3291896318-gc4xv up (v2)\niciest-waggoner-web-3291896318-lviwo up (v2)\niciest-waggoner-web-3291896318-kt7vu up (v2)  If you have multiple process types for your application you may scale the process count for each type separately. For\nexample, this allows you to manage web process independently from background workers. For more information on process\ntypes see our documentation for  Managing App Processes .  In this example, we are scaling the process type  web  to 5 but leaving the process type  background  with one worker.  $ deis scale web=5\nScaling processes... but first, coffee!\ndone in 4s\n=== scenic-icehouse Processes\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-jn957 up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vwhnh up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)\n--- background:\nscenic-icehouse-web-3291896318-background-yf8kh up (v2)   Note  The default process type for Dockerfile and Docker Image applications is 'cmd' rather than 'web'.   Scaling a process down, by reducing the process count, sends a  TERM  signal to the processes, followed by a  SIGKILL \nif they have not exited within 30 seconds. Depending on your application, scaling down may interrupt long-running HTTP\nclient connections.  For example, scaling from 5 processes to 3:  $ deis scale web=3\nScaling processes... but first, coffee!\ndone in 1s\n=== scenic-icehouse Processes\n--- background:\nscenic-icehouse-web-3291896318-background-yf8kh up (v2)\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)",
            "title": "Scaling Processes"
        },
        {
            "location": "/applications/managing-app-processes/#autoscale",
            "text": "Autoscale allows adding a minimum and maximum number of pods on a per process type basis. This is accomplished by specifying a target CPU usage across all available pods.  This feature is built on top of  Horizontal Pod Autoscaling  in Kubernetes or  HPA  for short.   Note  This is an alpha feature. It is recommended to be on the latest Kubernetes when using this feature.   $ deis autoscale:set web --min=3 --max=8 --cpu-percent=75\nApplying autoscale settings for process type web on scenic-icehouse... done  And then review the scaling rule that was created for  web  $ deis autoscale:list\n=== scenic-icehouse Autoscale\n\n--- web:\nMin Replicas: 3\nMax Replicas: 8\nCPU: 75%  Remove scaling rule  $ deis autoscale:unset web\nRemoving autoscale for process type web on scenic-icehouse... done  For autoscaling to work CPU requests have to be specified on each application Pod (can be done via  deis limits --cpu ). This allows the autoscale policies to do the  appropriate calculations  and make decisions on when to scale up and down.  Scale up can only happen if there was no rescaling within the last 3 minutes. Scale down will wait for 5 minutes from the last rescaling. That information and more can be found at  HPA algorithm page .",
            "title": "Autoscale"
        },
        {
            "location": "/applications/managing-app-processes/#web-vs-cmd-process-types",
            "text": "When deploying to Deis Workflow using a Heroku Buildpack, Workflow boots the  web  process type to\nboot the application server. When you deploy an application that has a Dockerfile or uses  Docker\nimages , Workflow boots the  cmd  process type. Both act similarly in that\nthey are exposed to the router as web applications. However, the  cmd  process type is special\nbecause, if left undefined, it is equivalent to running the  container  without any additional\narguments.  (i.e. The process specified by the Dockerfile or Docker image's  CMD  directive will\nbe used.)  If migrating an application from Heroku Buildpacks to a Docker-based deployment, Workflow will not\nautomatically convert the  web  process type to  cmd . To do this, you'll have to manually scale\ndown the old process type and scale the new process type up.",
            "title": "Web vs Cmd Process Types"
        },
        {
            "location": "/applications/managing-app-processes/#restarting-an-application-processes",
            "text": "If you need to restart an application process, you may use  deis ps:restart . Behind the scenes, Deis Workflow instructs\nKubernetes to terminate the old process and launch a new one in its place.  $ deis ps\n=== scenic-icehouse Processes\n--- web:\nscenic-icehouse-web-3291896318-7lord up (v2)\nscenic-icehouse-web-3291896318-rsekj up (v2)\nscenic-icehouse-web-3291896318-vokg7 up (v2)\n--- background:\nscenic-icehouse-background-3291896318-yf8kh up (v2)\n$ deis ps:restart scenic-icehouse-background-3291896318-yf8kh\nRestarting processes... but first, coffee!\ndone in 6s\n=== scenic-icehouse Processes\n--- background:\nscenic-icehouse-background-3291896318-yd87g up (v2)  Notice that the process name has changed from  scenic-icehouse-background-3291896318-yf8kh  to scenic-icehouse-background-3291896318-yd87g . In a multi-node Kubernetes cluster, this may also have the effect of scheduling\nthe Pod to a new node.",
            "title": "Restarting an Application Processes"
        },
        {
            "location": "/applications/managing-app-configuration/",
            "text": "Configuring an Application\n\u00b6\n\n\nA Deis application \nstores config in environment variables\n.\n\n\nSetting Environment Variables\n\u00b6\n\n\nUse \ndeis config\n to modify environment variables for a deployed application.\n\n\n$ deis help config\nValid commands for config:\n\nconfig:list        list environment variables for an app\nconfig:set         set environment variables for an app\nconfig:unset       unset environment variables for an app\nconfig:pull        extract environment variables to .env\nconfig:push        set environment variables from .env\n\nUse `deis help [command]` to learn more.\n\n\n\n\nWhen config is changed, a new release is created and deployed automatically.\n\n\nYou can set multiple environment variables with one \ndeis config:set\n command,\nor with \ndeis config:push\n and a local .env file.\n\n\n$ deis config:set FOO=1 BAR=baz && deis config:pull\n$ cat .env\nFOO=1\nBAR=baz\n$ echo \"TIDE=high\" >> .env\n$ deis config:push\nCreating config... done, v4\n\n=== yuppie-earthman\nDEIS_APP: yuppie-earthman\nFOO: 1\nBAR: baz\nTIDE: high\n\n\n\n\nAttach to Backing Services\n\u00b6\n\n\nDeis treats backing services like databases, caches and queues as \nattached resources\n.\nAttachments are performed using environment variables.\n\n\nFor example, use \ndeis config\n to set a \nDATABASE_URL\n that attaches\nthe application to an external PostgreSQL database.\n\n\n$ deis config:set DATABASE_URL=postgres://user:pass@example.com:5432/db\n=== peachy-waxworks\nDATABASE_URL: postgres://user:pass@example.com:5432/db\n\n\n\n\nDetachments can be performed with \ndeis config:unset\n.\n\n\nSlugbuilder Cache\n\u00b6\n\n\nBy default, apps using the \nSlugbuilder\n will have caching turned on. This means that Deis will\npersist all data being written to \nCACHE_DIR\n inside the buildpack will be persisted between\ndeploys. When deploying applications that depend on third-party libraries that have to be fetched,\nthis could speed up deployments a lot. In order to make use of this, the buildpack must implement\nthe cache by writing to the cache directory. Most buildpacks already implement this, but when using\ncustom buildpacks, it might need to be changed to make full use of the cache.\n\n\nDisabling and re-enabling the cache\n\u00b6\n\n\nIn some cases, cache might not speed up your application. To disable caching, you can set the\n\nDEIS_DISABLE_CACHE\n variable with \ndeis config:set DEIS_DISABLE_CACHE=1\n. When you disable the\ncache, Deis will clear up files it created to store the cache. After having it turned off, run\n\ndeis config:unset DEIS_DISABLE_CACHE\n to re-enable the cache.\n\n\nClearing the cache\n\u00b6\n\n\nUse the following procedure to clear the cache:\n\n\n$ deis config:set DEIS_DISABLE_CACHE=1\n$ git commit --allow-empty -m \"Clearing Deis cache\"\n$ git push deis # (if you use a different remote, you should use your remote name)\n$ deis config:unset DEIS_DISABLE_CACHE\n\n\n\n\nCustom Health Checks\n\u00b6\n\n\nBy default, Workflow only checks that the application starts in their Container. If it is preferred\nto have Kubernetes respond to application health, a health check may be added by configuring a\nhealth check probe for the application.\n\n\nThe health checks are implemented as \nKubernetes container probes\n. A \nliveness\n\nand a \nreadiness\n probe can be configured, and each probe can be of type \nhttpGet\n, \nexec\n, or\n\ntcpSocket\n depending on the type of probe the container requires.\n\n\nA liveness probe is useful for applications running for long periods of time, eventually\ntransitioning to broken states and cannot recover except by restarting them.\n\n\nOther times, a readiness probe is useful when the container is only temporarily unable to serve,\nand will recover on its own. In this case, if a container fails its readiness probe, the container\nwill not be shut down, but rather the container will stop receiving incoming requests.\n\n\nhttpGet\n probes are just as it sounds: it performs a HTTP GET operation on the Container. A\nresponse code inside the 200-399 range is considered a pass.\n\n\nexec\n probes run a command inside the Container to determine its health, such as\n\ncat /var/run/myapp.pid\n or a script that determines when the application is ready. An exit code of\nzero is considered a pass, while a non-zero status code is considered a fail.\n\n\ntcpSocket\n probes attempt to open a socket in the Container. The Container is only considered\nhealthy if the check can establish a connection. \ntcpSocket\n probes accept a port number to perform\nthe socket connection on the Container.\n\n\nHealth checks can be configured on a per-proctype basis for each application using \ndeis healthchecks:set\n. If no type is mentioned then the health checks are applied to default proc types, web or cmd, whichever is present. To\nconfigure a \nhttpGet\n liveness probe:\n\n\n$ deis healthchecks:set liveness httpGet 80 --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/\" Port=80 HTTPHeaders=[]\nTCP Socket Probe: N/A\n\nReadiness\n---------\nNo readiness probe configured.\n\n\n\n\nIf the application relies on certain headers being set (such as the \nHost\n header) or a specific\nURL path relative to the root, you can also send specific HTTP headers:\n\n\n$ deis healthchecks:set liveness httpGet 80 \\\n    --path /welcome/index.html \\\n    --headers \"X-Client-Version:v1.0,X-Foo:bar\"\n=== peachy-waxworks Healthchecks\n\nweb/cmd:\nLiveness\n--------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/welcome/index.html\" Port=80 HTTPHeaders=[X-Client-Version=v1.0]\nTCP Socket Probe: N/A\n\nReadiness\n---------\nNo readiness probe configured.\n\n\n\n\nTo configure an \nexec\n readiness probe:\n\n\n$ deis healthchecks:set readiness exec -- /bin/echo -n hello --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nNo liveness probe configured.\n\nReadiness\n---------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: Command=[/bin/echo -n hello]\nHTTP GET Probe: N/A\nTCP Socket Probe: N/A\n\n\n\n\nYou can overwrite a probe by running \ndeis healthchecks:set\n again:\n\n\n$ deis healthchecks:set readiness httpGet 80 --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nNo liveness probe configured.\n\nReadiness\n---------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/\" Port=80 HTTPHeaders=[]\nTCP Socket Probe: N/A\n\n\n\n\nConfigured health checks also modify the default application deploy behavior. When starting a new\nPod, Workflow will wait for the health check to pass before moving onto the next Pod.\n\n\nIsolate the Application\n\u00b6\n\n\nWorkflow supports isolating applications onto a set of nodes using \ndeis tags\n.\n\n\n\n\nNote\n\n\nIn order to use tags, you must first launch your cluster with the proper node labels. If you do\nnot, tag commands will fail. Learn more by reading \n\"Assigning Pods to Nodes\"\n.\n\n\n\n\nOnce your nodes are configured with appropriate label selectors, use \ndeis tags:set\n to restrict\nthe application to those nodes:\n\n\n$ deis tags:set environ=prod\nApplying tags...  done, v4\n\nenviron  prod",
            "title": "Managing App Configuration"
        },
        {
            "location": "/applications/managing-app-configuration/#configuring-an-application",
            "text": "A Deis application  stores config in environment variables .",
            "title": "Configuring an Application"
        },
        {
            "location": "/applications/managing-app-configuration/#setting-environment-variables",
            "text": "Use  deis config  to modify environment variables for a deployed application.  $ deis help config\nValid commands for config:\n\nconfig:list        list environment variables for an app\nconfig:set         set environment variables for an app\nconfig:unset       unset environment variables for an app\nconfig:pull        extract environment variables to .env\nconfig:push        set environment variables from .env\n\nUse `deis help [command]` to learn more.  When config is changed, a new release is created and deployed automatically.  You can set multiple environment variables with one  deis config:set  command,\nor with  deis config:push  and a local .env file.  $ deis config:set FOO=1 BAR=baz && deis config:pull\n$ cat .env\nFOO=1\nBAR=baz\n$ echo \"TIDE=high\" >> .env\n$ deis config:push\nCreating config... done, v4\n\n=== yuppie-earthman\nDEIS_APP: yuppie-earthman\nFOO: 1\nBAR: baz\nTIDE: high",
            "title": "Setting Environment Variables"
        },
        {
            "location": "/applications/managing-app-configuration/#attach-to-backing-services",
            "text": "Deis treats backing services like databases, caches and queues as  attached resources .\nAttachments are performed using environment variables.  For example, use  deis config  to set a  DATABASE_URL  that attaches\nthe application to an external PostgreSQL database.  $ deis config:set DATABASE_URL=postgres://user:pass@example.com:5432/db\n=== peachy-waxworks\nDATABASE_URL: postgres://user:pass@example.com:5432/db  Detachments can be performed with  deis config:unset .",
            "title": "Attach to Backing Services"
        },
        {
            "location": "/applications/managing-app-configuration/#slugbuilder-cache",
            "text": "By default, apps using the  Slugbuilder  will have caching turned on. This means that Deis will\npersist all data being written to  CACHE_DIR  inside the buildpack will be persisted between\ndeploys. When deploying applications that depend on third-party libraries that have to be fetched,\nthis could speed up deployments a lot. In order to make use of this, the buildpack must implement\nthe cache by writing to the cache directory. Most buildpacks already implement this, but when using\ncustom buildpacks, it might need to be changed to make full use of the cache.",
            "title": "Slugbuilder Cache"
        },
        {
            "location": "/applications/managing-app-configuration/#disabling-and-re-enabling-the-cache",
            "text": "In some cases, cache might not speed up your application. To disable caching, you can set the DEIS_DISABLE_CACHE  variable with  deis config:set DEIS_DISABLE_CACHE=1 . When you disable the\ncache, Deis will clear up files it created to store the cache. After having it turned off, run deis config:unset DEIS_DISABLE_CACHE  to re-enable the cache.",
            "title": "Disabling and re-enabling the cache"
        },
        {
            "location": "/applications/managing-app-configuration/#clearing-the-cache",
            "text": "Use the following procedure to clear the cache:  $ deis config:set DEIS_DISABLE_CACHE=1\n$ git commit --allow-empty -m \"Clearing Deis cache\"\n$ git push deis # (if you use a different remote, you should use your remote name)\n$ deis config:unset DEIS_DISABLE_CACHE",
            "title": "Clearing the cache"
        },
        {
            "location": "/applications/managing-app-configuration/#custom-health-checks",
            "text": "By default, Workflow only checks that the application starts in their Container. If it is preferred\nto have Kubernetes respond to application health, a health check may be added by configuring a\nhealth check probe for the application.  The health checks are implemented as  Kubernetes container probes . A  liveness \nand a  readiness  probe can be configured, and each probe can be of type  httpGet ,  exec , or tcpSocket  depending on the type of probe the container requires.  A liveness probe is useful for applications running for long periods of time, eventually\ntransitioning to broken states and cannot recover except by restarting them.  Other times, a readiness probe is useful when the container is only temporarily unable to serve,\nand will recover on its own. In this case, if a container fails its readiness probe, the container\nwill not be shut down, but rather the container will stop receiving incoming requests.  httpGet  probes are just as it sounds: it performs a HTTP GET operation on the Container. A\nresponse code inside the 200-399 range is considered a pass.  exec  probes run a command inside the Container to determine its health, such as cat /var/run/myapp.pid  or a script that determines when the application is ready. An exit code of\nzero is considered a pass, while a non-zero status code is considered a fail.  tcpSocket  probes attempt to open a socket in the Container. The Container is only considered\nhealthy if the check can establish a connection.  tcpSocket  probes accept a port number to perform\nthe socket connection on the Container.  Health checks can be configured on a per-proctype basis for each application using  deis healthchecks:set . If no type is mentioned then the health checks are applied to default proc types, web or cmd, whichever is present. To\nconfigure a  httpGet  liveness probe:  $ deis healthchecks:set liveness httpGet 80 --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/\" Port=80 HTTPHeaders=[]\nTCP Socket Probe: N/A\n\nReadiness\n---------\nNo readiness probe configured.  If the application relies on certain headers being set (such as the  Host  header) or a specific\nURL path relative to the root, you can also send specific HTTP headers:  $ deis healthchecks:set liveness httpGet 80 \\\n    --path /welcome/index.html \\\n    --headers \"X-Client-Version:v1.0,X-Foo:bar\"\n=== peachy-waxworks Healthchecks\n\nweb/cmd:\nLiveness\n--------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/welcome/index.html\" Port=80 HTTPHeaders=[X-Client-Version=v1.0]\nTCP Socket Probe: N/A\n\nReadiness\n---------\nNo readiness probe configured.  To configure an  exec  readiness probe:  $ deis healthchecks:set readiness exec -- /bin/echo -n hello --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nNo liveness probe configured.\n\nReadiness\n---------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: Command=[/bin/echo -n hello]\nHTTP GET Probe: N/A\nTCP Socket Probe: N/A  You can overwrite a probe by running  deis healthchecks:set  again:  $ deis healthchecks:set readiness httpGet 80 --type cmd\n=== peachy-waxworks Healthchecks\n\ncmd:\nLiveness\n--------\nNo liveness probe configured.\n\nReadiness\n---------\nInitial Delay (seconds): 50\nTimeout (seconds): 50\nPeriod (seconds): 10\nSuccess Threshold: 1\nFailure Threshold: 3\nExec Probe: N/A\nHTTP GET Probe: Path=\"/\" Port=80 HTTPHeaders=[]\nTCP Socket Probe: N/A  Configured health checks also modify the default application deploy behavior. When starting a new\nPod, Workflow will wait for the health check to pass before moving onto the next Pod.",
            "title": "Custom Health Checks"
        },
        {
            "location": "/applications/managing-app-configuration/#isolate-the-application",
            "text": "Workflow supports isolating applications onto a set of nodes using  deis tags .   Note  In order to use tags, you must first launch your cluster with the proper node labels. If you do\nnot, tag commands will fail. Learn more by reading  \"Assigning Pods to Nodes\" .   Once your nodes are configured with appropriate label selectors, use  deis tags:set  to restrict\nthe application to those nodes:  $ deis tags:set environ=prod\nApplying tags...  done, v4\n\nenviron  prod",
            "title": "Isolate the Application"
        },
        {
            "location": "/applications/managing-app-lifecycle/",
            "text": "Managing an Application\n\u00b6\n\n\nTrack Application Changes\n\u00b6\n\n\nDeis Workflow tracks all changes to your application. Application changes are the result of either new application code\npushed to the platform (via \ngit push deis master\n), or an update to application configuration (via \ndeis config:set KEY=VAL\n).\n\n\nEach time a build or config change is made to your application a new \nrelease\n is created. These release numbers\nincrease monotonically.\n\n\nYou can see a record of changes to your application using \ndeis releases\n:\n\n\n$ deis releases\n=== peachy-waxworks Releases\nv4      3 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 17 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 2 minutes ago             gabrtv deployed deis/helloworld\n\n\n\n\nRollback a Release\n\u00b6\n\n\nDeis Workflow also supports rolling back go previous releases. If buggy code or an errant configuration change is pushed\nto your application, you may rollback to a previously known, good release.\n\n\n\n\nNote\n\n\nAll rollbacks create a new, numbered release. But will reference the build/code and configuration from the desired rollback point.\n\n\n\n\nIn this example, the application is currently running release v4. Using \ndeis rollback v2\n tells Workflow to deploy the\nbuild and configuration that was used for release v2. This creates a new release named v5 whose contents are the source\nand configuration from release v2:\n\n\n$ deis releases\n=== folksy-offshoot Releases\nv4      4 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 18 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 3 minutes ago             gabrtv deployed deis/helloworld\n\n$ deis rollback v2\nRolled back to v2\n\n$ deis releases\n=== folksy-offshoot Releases\nv5      Just now                          gabrtv rolled back to v2\nv4      4 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 18 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 3 minutes ago             gabrtv deployed deis/helloworld\n\n\n\n\nRun One-off Administration Tasks\n\u00b6\n\n\nDeis applications \nuse one-off processes for admin tasks\n like database migrations and other commands that must run against the live application.\n\n\nUse \ndeis run\n to execute commands on the deployed application.\n\n\n$ deis run 'ls -l'\nRunning `ls -l`...\n\ntotal 28\n-rw-r--r-- 1 root root  553 Dec  2 23:59 LICENSE\n-rw-r--r-- 1 root root   60 Dec  2 23:59 Procfile\n-rw-r--r-- 1 root root   33 Dec  2 23:59 README.md\n-rw-r--r-- 1 root root 1622 Dec  2 23:59 pom.xml\ndrwxr-xr-x 3 root root 4096 Dec  2 23:59 src\n-rw-r--r-- 1 root root   25 Dec  2 23:59 system.properties\ndrwxr-xr-x 6 root root 4096 Dec  3 00:00 target\n\n\n\n\nShare an Application\n\u00b6\n\n\nUse \ndeis perms:create\n to allow another Deis user to collaborate on your application.\n\n\n$ deis perms:create otheruser\nAdding otheruser to peachy-waxworks collaborators... done\n\n\n\n\nUse \ndeis perms\n to see who an application is currently shared with, and \ndeis perms:remove\n to remove a collaborator.\n\n\n\n\nNote\n\n\nCollaborators can do anything with an application that its owner can do, except delete the application.\n\n\n\n\nWhen working with an application that has been shared with you, clone the original repository and add Deis' git remote\nentry before attempting to \ngit push\n any changes to Deis.\n\n\n$ git clone https://github.com/deisthree/example-java-jetty.git\nCloning into 'example-java-jetty'... done\n$ cd example-java-jetty\n$ git remote add -f deis ssh://git@local3.deisapp.com:2222/peachy-waxworks.git\nUpdating deis\nFrom deis-controller.local:peachy-waxworks\n * [new branch]      master     -> deis/master\n\n\n\n\nApplication Maintenance\n\u00b6\n\n\nMaintenance mode for applications is useful to perform certain migrations or upgrades during which we don't want to serve client requests. Deis Workflow supports maintenance mode for an app during which the access to the app is blocked. Blocking access to the application means all the requests to the app are served with an error code of \n503\n and a static maintenance page by the router but the app will still be running and one-off commands can still be run. Currently the maintenance page is not configurable and is present as part of the router component.\n\n\nTo enable maintenance mode for app, use \ndeis maintenance\n:\n\n\n$ deis maintenance:on\nEnabling maintenance for drafty-zaniness... done\n\n\n\n\nThis will make the \nrouter\n answer all requests to the application with a 503, although the app is still running. To disable maintenance mode:\n\n\n$ deis maintenance:off\nDisabling maintenance for drafty-zaniness... done\n\n\n\n\nApplication Troubleshooting\n\u00b6\n\n\nApplications deployed on Deis Workflow \ntreat logs as event streams\n. Deis Workflow aggregates \nstdout\n and \nstderr\n\nfrom every \nContainer\n making it easy to troubleshoot problems with your application.\n\n\nUse \ndeis logs\n to view the log output from your deployed application.\n\n\n$ deis logs | tail\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.5]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejs.Server:jetty-7.6.0.v20120127\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.5]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10005\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.6]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.7]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.6]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10006\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.7]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10007\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10008",
            "title": "Managing App Lifecycle"
        },
        {
            "location": "/applications/managing-app-lifecycle/#managing-an-application",
            "text": "",
            "title": "Managing an Application"
        },
        {
            "location": "/applications/managing-app-lifecycle/#track-application-changes",
            "text": "Deis Workflow tracks all changes to your application. Application changes are the result of either new application code\npushed to the platform (via  git push deis master ), or an update to application configuration (via  deis config:set KEY=VAL ).  Each time a build or config change is made to your application a new  release  is created. These release numbers\nincrease monotonically.  You can see a record of changes to your application using  deis releases :  $ deis releases\n=== peachy-waxworks Releases\nv4      3 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 17 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 2 minutes ago             gabrtv deployed deis/helloworld",
            "title": "Track Application Changes"
        },
        {
            "location": "/applications/managing-app-lifecycle/#rollback-a-release",
            "text": "Deis Workflow also supports rolling back go previous releases. If buggy code or an errant configuration change is pushed\nto your application, you may rollback to a previously known, good release.   Note  All rollbacks create a new, numbered release. But will reference the build/code and configuration from the desired rollback point.   In this example, the application is currently running release v4. Using  deis rollback v2  tells Workflow to deploy the\nbuild and configuration that was used for release v2. This creates a new release named v5 whose contents are the source\nand configuration from release v2:  $ deis releases\n=== folksy-offshoot Releases\nv4      4 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 18 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 3 minutes ago             gabrtv deployed deis/helloworld\n\n$ deis rollback v2\nRolled back to v2\n\n$ deis releases\n=== folksy-offshoot Releases\nv5      Just now                          gabrtv rolled back to v2\nv4      4 minutes ago                     gabrtv deployed d3ccc05\nv3      1 hour 18 minutes ago             gabrtv added DATABASE_URL\nv2      6 hours 2 minutes ago             gabrtv deployed 7cb3321\nv1      6 hours 3 minutes ago             gabrtv deployed deis/helloworld",
            "title": "Rollback a Release"
        },
        {
            "location": "/applications/managing-app-lifecycle/#run-one-off-administration-tasks",
            "text": "Deis applications  use one-off processes for admin tasks  like database migrations and other commands that must run against the live application.  Use  deis run  to execute commands on the deployed application.  $ deis run 'ls -l'\nRunning `ls -l`...\n\ntotal 28\n-rw-r--r-- 1 root root  553 Dec  2 23:59 LICENSE\n-rw-r--r-- 1 root root   60 Dec  2 23:59 Procfile\n-rw-r--r-- 1 root root   33 Dec  2 23:59 README.md\n-rw-r--r-- 1 root root 1622 Dec  2 23:59 pom.xml\ndrwxr-xr-x 3 root root 4096 Dec  2 23:59 src\n-rw-r--r-- 1 root root   25 Dec  2 23:59 system.properties\ndrwxr-xr-x 6 root root 4096 Dec  3 00:00 target",
            "title": "Run One-off Administration Tasks"
        },
        {
            "location": "/applications/managing-app-lifecycle/#share-an-application",
            "text": "Use  deis perms:create  to allow another Deis user to collaborate on your application.  $ deis perms:create otheruser\nAdding otheruser to peachy-waxworks collaborators... done  Use  deis perms  to see who an application is currently shared with, and  deis perms:remove  to remove a collaborator.   Note  Collaborators can do anything with an application that its owner can do, except delete the application.   When working with an application that has been shared with you, clone the original repository and add Deis' git remote\nentry before attempting to  git push  any changes to Deis.  $ git clone https://github.com/deisthree/example-java-jetty.git\nCloning into 'example-java-jetty'... done\n$ cd example-java-jetty\n$ git remote add -f deis ssh://git@local3.deisapp.com:2222/peachy-waxworks.git\nUpdating deis\nFrom deis-controller.local:peachy-waxworks\n * [new branch]      master     -> deis/master",
            "title": "Share an Application"
        },
        {
            "location": "/applications/managing-app-lifecycle/#application-maintenance",
            "text": "Maintenance mode for applications is useful to perform certain migrations or upgrades during which we don't want to serve client requests. Deis Workflow supports maintenance mode for an app during which the access to the app is blocked. Blocking access to the application means all the requests to the app are served with an error code of  503  and a static maintenance page by the router but the app will still be running and one-off commands can still be run. Currently the maintenance page is not configurable and is present as part of the router component.  To enable maintenance mode for app, use  deis maintenance :  $ deis maintenance:on\nEnabling maintenance for drafty-zaniness... done  This will make the  router  answer all requests to the application with a 503, although the app is still running. To disable maintenance mode:  $ deis maintenance:off\nDisabling maintenance for drafty-zaniness... done",
            "title": "Application Maintenance"
        },
        {
            "location": "/applications/managing-app-lifecycle/#application-troubleshooting",
            "text": "Applications deployed on Deis Workflow  treat logs as event streams . Deis Workflow aggregates  stdout  and  stderr \nfrom every  Container  making it easy to troubleshoot problems with your application.  Use  deis logs  to view the log output from your deployed application.  $ deis logs | tail\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.5]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejs.Server:jetty-7.6.0.v20120127\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.5]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10005\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.6]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.7]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.6]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10006\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,null}\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.7]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10007\nDec  3 00:30:31 ip-10-250-15-201 peachy-waxworks[web.8]: INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:10008",
            "title": "Application Troubleshooting"
        },
        {
            "location": "/applications/inter-app-communication/",
            "text": "Inter-app Communication\n\u00b6\n\n\nA common architecture pattern of multi-process applications is to have one process serve public requests while having multiple other processes supporting the public one to, for example, perform actions on a schedule or process work items from a queue. To implement this system of apps in Deis Workflow, set up the apps to communicate using DNS resolution, as shown above, and hide the supporting processes from public view by removing them from the Deis Workflow router. See \nDeis Blog: Private Applications on Workflow\n for more details, which walks through an example of removing an app from the router.\n\n\nDNS Service Discovery\n\u00b6\n\n\nDeis Workflow supports deploying a single app composed of a system of processes. Each Deis Workflow app communicates on a single port, so communicating with another Workflow app means finding that app's address and port. All Workflow apps are mapped to port 80 externally, so finding its IP address is the only challenge. Workflow creates a \nKubernetes Service\n for each app, which effectively assigns a name and one cluster-internal IP address to an app. The DNS service running in the cluster adds and removes DNS records which point from the app name to its IP address as services are added and removed. Deis Workflow apps, then, can simply send requests to the domain name given to the service, which is \"app-name.app-namespace\".",
            "title": "Inter-app Communication"
        },
        {
            "location": "/applications/inter-app-communication/#inter-app-communication",
            "text": "A common architecture pattern of multi-process applications is to have one process serve public requests while having multiple other processes supporting the public one to, for example, perform actions on a schedule or process work items from a queue. To implement this system of apps in Deis Workflow, set up the apps to communicate using DNS resolution, as shown above, and hide the supporting processes from public view by removing them from the Deis Workflow router. See  Deis Blog: Private Applications on Workflow  for more details, which walks through an example of removing an app from the router.",
            "title": "Inter-app Communication"
        },
        {
            "location": "/applications/inter-app-communication/#dns-service-discovery",
            "text": "Deis Workflow supports deploying a single app composed of a system of processes. Each Deis Workflow app communicates on a single port, so communicating with another Workflow app means finding that app's address and port. All Workflow apps are mapped to port 80 externally, so finding its IP address is the only challenge. Workflow creates a  Kubernetes Service  for each app, which effectively assigns a name and one cluster-internal IP address to an app. The DNS service running in the cluster adds and removes DNS records which point from the app name to its IP address as services are added and removed. Deis Workflow apps, then, can simply send requests to the domain name given to the service, which is \"app-name.app-namespace\".",
            "title": "DNS Service Discovery"
        },
        {
            "location": "/applications/managing-resource-limits/",
            "text": "Managing Application Resource Limits\n\u00b6\n\n\nDeis Workflow supports restricting memory and CPU shares of each process. Requests/Limits set on a per-process type are given to\nKubernetes as a requests and limits. Which means you guarantee <requests> amount of resource for a process as well as limit\nthe process from using more than <limits>.\nBy default, Kubernetes will set <requests> equal to <limit> if we don't explicitly set <requests> value. Please keep in mind that \n0 <= requests <= limits\n.\n\n\nLimiting Memory\n\u00b6\n\n\nIf you set a requests/limits that is out of range for your cluster, Kubernetes will be unable to schedule your application\nprocesses into the cluster!\n\n\nAvailable units for memory are:\n\n\n\n\n\n\n\n\nUnit\n\n\nAmount\n\n\n\n\n\n\n\n\n\n\nB\n\n\nBytes\n\n\n\n\n\n\nK\n\n\nKiB (Power of 2)\n\n\n\n\n\n\nM\n\n\nMiB (Power of 2)\n\n\n\n\n\n\nG\n\n\nGiB (Power of 2)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nThe minimum memory limit allowed is 4MiB.\n\n\n\n\nUse \ndeis limits:set <type>=<value>\n to restrict memory by process type, where value can be <limit> or <request>/<limit> format :\n\n\n$ deis limits:set web=64M\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nUnlimited\n\n$ deis limits:set cmd=32M/64M\nApplying limits... done\n\n=== outdoor-whitecap Limits\n\n--- Memory\ncmd     32M/64M\n\n--- CPU\nUnlimited\n\n\n\n\nIf you would like to remove any configured memory limits use \ndeis limits:unset web\n:\n\n\n$ deis limits:unset web\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nUnlimited\n\n--- CPU\nUnlimited\n\n\n\n\nLimiting CPU\n\u00b6\n\n\nYou can also use \ndeis limits:set <type>=<value> --cpu\n to restrict CPU shares,  where value can be <limit> or\n<request>/<limit> format. CPU shares are tracked in milli-cores. One CPU core is equivalent to 1000 milli-cores.\nTo dedicate half a core to your process, you would need 500 milli-cores or 500m.\n\n\n\n\n\n\n\n\nUnit\n\n\nAmount\n\n\n\n\n\n\n\n\n\n\n1000m\n\n\n1000 milli-cores == 100% CPU core\n\n\n\n\n\n\n500m\n\n\n500 milli-cores == 50% CPU core\n\n\n\n\n\n\n250m\n\n\n250 milli-cores == 25% CPU core\n\n\n\n\n\n\n100m\n\n\n100 milli-cores == 10% CPU core\n\n\n\n\n\n\n\n\n$ deis limits:set web=250m --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nweb     250m\n\n$ deis limits:set web=1500m/2000m --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nweb     1500m/2000m\n\n\n\n\nYou can verify the CPU and memory limits by inspecting the application process Pod with \nkubectl\n:\n\n\n$ deis ps\n=== indoor-whitecap Processes\n--- web:\nindoor-whitecap-v14-web-8slcj up (v14)\n$ kubectl --namespace=indoor-whitecap describe po indoor-whitecap-v14-web-8slcj\nName:       indoor-whitecap-v14-web-8slcj\nContainers:\n    QoS Tier:\n      cpu:     Guaranteed\n      memory:  Guaranteed\n    Limits:\n      cpu:     2000m\n      memory:  64Mi\n    Requests:\n      memory:  64Mi\n      cpu:     1500m\n\n\n\n\n\n\nImportant\n\n\nIf you restrict resources to the point where containers do not start,\nthe \nlimits:set\n command will hang.  If this happens, use CTRL-C\nto break out of \nlimits:set\n and use \nlimits:unset\n to revert.\n\n\n\n\nTo unset a CPU limit use \ndeis limits:unset web --cpu\n:\n\n\n$ deis limits:unset web --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nUnlimited\n\n--- CPU\nUnlimited",
            "title": "Resource Limits"
        },
        {
            "location": "/applications/managing-resource-limits/#managing-application-resource-limits",
            "text": "Deis Workflow supports restricting memory and CPU shares of each process. Requests/Limits set on a per-process type are given to\nKubernetes as a requests and limits. Which means you guarantee <requests> amount of resource for a process as well as limit\nthe process from using more than <limits>.\nBy default, Kubernetes will set <requests> equal to <limit> if we don't explicitly set <requests> value. Please keep in mind that  0 <= requests <= limits .",
            "title": "Managing Application Resource Limits"
        },
        {
            "location": "/applications/managing-resource-limits/#limiting-memory",
            "text": "If you set a requests/limits that is out of range for your cluster, Kubernetes will be unable to schedule your application\nprocesses into the cluster!  Available units for memory are:     Unit  Amount      B  Bytes    K  KiB (Power of 2)    M  MiB (Power of 2)    G  GiB (Power of 2)      Important  The minimum memory limit allowed is 4MiB.   Use  deis limits:set <type>=<value>  to restrict memory by process type, where value can be <limit> or <request>/<limit> format :  $ deis limits:set web=64M\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nUnlimited\n\n$ deis limits:set cmd=32M/64M\nApplying limits... done\n\n=== outdoor-whitecap Limits\n\n--- Memory\ncmd     32M/64M\n\n--- CPU\nUnlimited  If you would like to remove any configured memory limits use  deis limits:unset web :  $ deis limits:unset web\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nUnlimited\n\n--- CPU\nUnlimited",
            "title": "Limiting Memory"
        },
        {
            "location": "/applications/managing-resource-limits/#limiting-cpu",
            "text": "You can also use  deis limits:set <type>=<value> --cpu  to restrict CPU shares,  where value can be <limit> or\n<request>/<limit> format. CPU shares are tracked in milli-cores. One CPU core is equivalent to 1000 milli-cores.\nTo dedicate half a core to your process, you would need 500 milli-cores or 500m.     Unit  Amount      1000m  1000 milli-cores == 100% CPU core    500m  500 milli-cores == 50% CPU core    250m  250 milli-cores == 25% CPU core    100m  100 milli-cores == 10% CPU core     $ deis limits:set web=250m --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nweb     250m\n\n$ deis limits:set web=1500m/2000m --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nweb     64M\n\n--- CPU\nweb     1500m/2000m  You can verify the CPU and memory limits by inspecting the application process Pod with  kubectl :  $ deis ps\n=== indoor-whitecap Processes\n--- web:\nindoor-whitecap-v14-web-8slcj up (v14)\n$ kubectl --namespace=indoor-whitecap describe po indoor-whitecap-v14-web-8slcj\nName:       indoor-whitecap-v14-web-8slcj\nContainers:\n    QoS Tier:\n      cpu:     Guaranteed\n      memory:  Guaranteed\n    Limits:\n      cpu:     2000m\n      memory:  64Mi\n    Requests:\n      memory:  64Mi\n      cpu:     1500m   Important  If you restrict resources to the point where containers do not start,\nthe  limits:set  command will hang.  If this happens, use CTRL-C\nto break out of  limits:set  and use  limits:unset  to revert.   To unset a CPU limit use  deis limits:unset web --cpu :  $ deis limits:unset web --cpu\nApplying limits... done\n\n=== indoor-whitecap Limits\n\n--- Memory\nUnlimited\n\n--- CPU\nUnlimited",
            "title": "Limiting CPU"
        },
        {
            "location": "/applications/domains-and-routing/",
            "text": "Domains and Routing\n\u00b6\n\n\nYou can use \ndeis domains\n to add or remove custom domains to the application:\n\n\n$ deis domains:add hello.bacongobbler.com\nAdding hello.bacongobbler.com to finest-woodshed... done\n\n\n\n\nOnce that's done, you can go into a DNS registrar and set up a CNAME from the new\nappname to the old one:\n\n\n$ dig hello.deisapp.com\n[...]\n;; ANSWER SECTION:\nhello.bacongobbler.com.         1759    IN    CNAME    finest-woodshed.deisapp.com.\nfinest-woodshed.deisapp.com.    270     IN    A        172.17.8.100\n\n\n\n\n\n\nNote\n\n\nSetting a CNAME for a root domain can cause issues. Setting an @ record\nto be a CNAME causes all traffic to go to the other domain, including mail and the SOA\n(\"start-of-authority\") records. It is highly recommended that you bind a subdomain to\nan application, however you can work around this by pointing the @ record to the\naddress of the load balancer (if any).\n\n\n\n\nTo add or remove the application from the routing mesh, use \ndeis routing\n:\n\n\n$ deis routing:disable\nDisabling routing for finest-woodshed... done\n\n\n\n\nThis will make the application unreachable through the \nRouter\n, but the application is still\nreachable internally through its \nKubernetes Service\n. To re-enable routing:\n\n\n$ deis routing:enable\nEnabling routing for finest-woodshed... done",
            "title": "Domains and Routing"
        },
        {
            "location": "/applications/domains-and-routing/#domains-and-routing",
            "text": "You can use  deis domains  to add or remove custom domains to the application:  $ deis domains:add hello.bacongobbler.com\nAdding hello.bacongobbler.com to finest-woodshed... done  Once that's done, you can go into a DNS registrar and set up a CNAME from the new\nappname to the old one:  $ dig hello.deisapp.com\n[...]\n;; ANSWER SECTION:\nhello.bacongobbler.com.         1759    IN    CNAME    finest-woodshed.deisapp.com.\nfinest-woodshed.deisapp.com.    270     IN    A        172.17.8.100   Note  Setting a CNAME for a root domain can cause issues. Setting an @ record\nto be a CNAME causes all traffic to go to the other domain, including mail and the SOA\n(\"start-of-authority\") records. It is highly recommended that you bind a subdomain to\nan application, however you can work around this by pointing the @ record to the\naddress of the load balancer (if any).   To add or remove the application from the routing mesh, use  deis routing :  $ deis routing:disable\nDisabling routing for finest-woodshed... done  This will make the application unreachable through the  Router , but the application is still\nreachable internally through its  Kubernetes Service . To re-enable routing:  $ deis routing:enable\nEnabling routing for finest-woodshed... done",
            "title": "Domains and Routing"
        },
        {
            "location": "/applications/ssl-certificates/",
            "text": "Application SSL Certificates\n\u00b6\n\n\nSSL is a cryptographic protocol that provides end-to-end encryption and integrity for all web\nrequests. Apps that transmit sensitive data should enable SSL to ensure all information is\ntransmitted securely.\n\n\nTo enable SSL on a custom domain, e.g., \nwww.example.com\n, use the SSL endpoint.\n\n\n\n\nNote\n\n\ndeis certs\n is only useful for custom domains. Default application domains are\nSSL-enabled already and can be accessed simply by using https,\ne.g. \nhttps://foo.deisapp.com\n (provided that you have \ninstalled your wildcard\ncertificate\n on the routers or on the load balancer).\n\n\n\n\nOverview\n\u00b6\n\n\nBecause of the unique nature of SSL validation, provisioning SSL for your domain is a multi-step\nprocess that involves several third-parties. You will need to:\n\n\n\n\nPurchase an SSL certificate from your SSL provider\n\n\nUpload the cert to Deis\n\n\n\n\nAcquire SSL Certificate\n\u00b6\n\n\nPurchasing an SSL cert varies in cost and process depending on the vendor. \nRapidSSL\n offers a\nsimple way to purchase a certificate and is a recommended solution. If you\u2019re able to use this\nprovider, see \nbuy an SSL certificate with RapidSSL\n for instructions.\n\n\nDNS and Domain Configuration\n\u00b6\n\n\nOnce the SSL certificate is provisioned and your cert is confirmed, you must route requests for\nyour domain through Deis. Unless you've already done so, add the domain specified when generating\nthe CSR to your app with:\n\n\n$ deis domains:add www.example.com -a foo\nAdding www.example.com to foo... done\n\n\n\n\nAdd a Certificate\n\u00b6\n\n\nAdd your certificate, any intermediate certificates, and private key to the endpoint with the\n\ncerts:add\n command.\n\n\n$ deis certs:add example-com server.crt server.key\nAdding SSL endpoint... done\nwww.example.com\n\n\n\n\n\n\nNote\n\n\nThe name given to the certificate can only contain a-z (lowercase), 0-9 and hyphens\n\n\n\n\nThe Deis platform will investigate the certificate and extract any relevant information from it\nsuch as the Common Name, Subject Alt Names (SAN), fingerprint and more.\n\n\nThis allows for wildcard certificates and multiple domains in the SAN without uploading duplicates.\n\n\nAdd a Certificate Chain\n\u00b6\n\n\nSometimes, your certificates (such as a self-signed or a cheap certificate) need additional\ncertificates to establish the chain of trust. What you need to do is bundle all the certificates\ninto one file and give that to Deis. Importantly, your site\u2019s certificate must be the first one:\n\n\n$ cat server.crt server.ca > server.bundle\n\n\n\n\nAfter that, you can add them to Deis with the \ncerts:add\n command:\n\n\n$ deis certs:add example-com server.bundle server.key\nAdding SSL endpoint... done\nwww.example.com\n\n\n\n\nAttach SSL certificate to a domain\n\u00b6\n\n\nCertificates are not automagically connected up to domains, instead you will have to attach a\ncertificate to a domain\n\n\n$ deis certs:attach example-com example.com\n\n\n\n\nEach certificate can be connected to many domains. There is no need to upload duplicates.\n\n\nTo remove an association\n\n\n$ deis certs:detach example-com example.com\n\n\n\n\nEndpoint overview\n\u00b6\n\n\nYou can verify the details of your domain's SSL configuration with \ndeis certs\n.\n\n\n$ deis certs\n\n     Name     |    Common Name    | SubjectAltName    |         Expires         |   Fingerprint   |   Domains    |   Updated   |   Created\n+-------------+-------------------+-------------------+-------------------------+-----------------+--------------+-------------+-------------+\n  example-com |     example.com   | blog.example.com  | 31 Dec 2017 (in 1 year) | 8F:8E[...]CD:EB |  example.com | 30 Jan 2016 | 29 Jan 2016\n\n\n\n\nor by looking at at each certificates detailed information\n\n\n$ deis certs:info example-com\n\n=== bar-com Certificate\nCommon Name(s):     example.com\nExpires At:         2017-01-14 23:57:57 +0000 UTC\nStarts At:          2016-01-15 23:57:57 +0000 UTC\nFingerprint:        7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\nSubject Alt Name:   blog.example.com\nIssuer:             /C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=example.com/emailAddress=engineering@deis.com\nSubject:            /C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=example.com/emailAddress=engineering@deis.com\n\nConnected Domains:  example.com\nOwner:              admin-user\nCreated:            2016-01-28 19:07:41 +0000 UTC\nUpdated:            2016-01-30 00:10:02 +0000 UTC\n\n\n\n\nTesting SSL\n\u00b6\n\n\nUse a command line utility like \ncurl\n to test that everything is configured correctly for your\nsecure domain.\n\n\n\n\nNote\n\n\nThe -k option flag tells curl to ignore untrusted certificates.\n\n\n\n\nPay attention to the output. It should print \nSSL certificate verify ok\n. If it prints something\nlike \ncommon name: www.example.com (does not match 'www.somedomain.com')\n then something is not\nconfigured correctly.\n\n\nEnforcing SSL at the Router\n\u00b6\n\n\nTo enforce all HTTP requests be redirected to HTTPS, TLS can be enforced at the router level by\nrunning\n\n\n$ deis tls:enable -a foo\nEnabling https-only requests for foo... done\n\n\n\n\nUsers hitting the HTTP endpoint for the application will now receive a 301 redirect to the HTTPS\nendpoint.\n\n\nTo disable enforced TLS, run\n\n\n$ deis tls:disable -a foo\nDisabling https-only requests for foo... done\n\n\n\n\nRemove Certificate\n\u00b6\n\n\nYou can remove a certificate using the \ncerts:remove\n command:\n\n\n$ deis certs:remove my-cert\nRemoving www.example.com... Done.\n\n\n\n\nSwapping out certificates\n\u00b6\n\n\nOver the lifetime of an application an operator will have to acquire certificates with new expire\ndates and apply it to all relevant applications, below is the recommended way to swap out certificates.\n\n\nBe intentional with certificate names, name them \nexample-com-2017\n when possible, where the year\nsignifies the expiry year. This allows for \nexample-com-2018\n when a new certificate is purchased.\n\n\nAssuming all applications are already using \nexample-com-2017\n the following commands can be ran,\nchained together or otherwise:\n\n\n$ deis certs:detach example-com-2017 example.com\n$ deis certs:attach example-com-2018 example.com\n\n\n\n\nThis will take care of a singular domain which allows the operator to verify everything went\nas planned and slowly roll it out to any other application using the same method.\n\n\nTroubleshooting\n\u00b6\n\n\nHere are some steps you can follow if your SSL endpoint is not working as you'd expect.\n\n\nUntrusted Certificate\n\u00b6\n\n\nIn some cases when accessing the SSL endpoint, it may list your certificate as untrusted.\n\n\nIf this occurs, it may be because it is not trusted by Mozilla\u2019s list of \nroot CAs\n. If this is\nthe case, your certificate may be considered untrusted for many browsers.\n\n\nIf you have uploaded a certificate that was signed by a root authority but you get the message that\nit is not trusted, then something is wrong with the certificate. For example, it may be missing\n\nintermediary certificates\n. If so, download the intermediary certificates from your SSL provider,\nremove the certificate from Deis and re-run the \ncerts:add\n command.",
            "title": "SSL Certificates"
        },
        {
            "location": "/applications/ssl-certificates/#application-ssl-certificates",
            "text": "SSL is a cryptographic protocol that provides end-to-end encryption and integrity for all web\nrequests. Apps that transmit sensitive data should enable SSL to ensure all information is\ntransmitted securely.  To enable SSL on a custom domain, e.g.,  www.example.com , use the SSL endpoint.   Note  deis certs  is only useful for custom domains. Default application domains are\nSSL-enabled already and can be accessed simply by using https,\ne.g.  https://foo.deisapp.com  (provided that you have  installed your wildcard\ncertificate  on the routers or on the load balancer).",
            "title": "Application SSL Certificates"
        },
        {
            "location": "/applications/ssl-certificates/#overview",
            "text": "Because of the unique nature of SSL validation, provisioning SSL for your domain is a multi-step\nprocess that involves several third-parties. You will need to:   Purchase an SSL certificate from your SSL provider  Upload the cert to Deis",
            "title": "Overview"
        },
        {
            "location": "/applications/ssl-certificates/#acquire-ssl-certificate",
            "text": "Purchasing an SSL cert varies in cost and process depending on the vendor.  RapidSSL  offers a\nsimple way to purchase a certificate and is a recommended solution. If you\u2019re able to use this\nprovider, see  buy an SSL certificate with RapidSSL  for instructions.",
            "title": "Acquire SSL Certificate"
        },
        {
            "location": "/applications/ssl-certificates/#dns-and-domain-configuration",
            "text": "Once the SSL certificate is provisioned and your cert is confirmed, you must route requests for\nyour domain through Deis. Unless you've already done so, add the domain specified when generating\nthe CSR to your app with:  $ deis domains:add www.example.com -a foo\nAdding www.example.com to foo... done",
            "title": "DNS and Domain Configuration"
        },
        {
            "location": "/applications/ssl-certificates/#add-a-certificate",
            "text": "Add your certificate, any intermediate certificates, and private key to the endpoint with the certs:add  command.  $ deis certs:add example-com server.crt server.key\nAdding SSL endpoint... done\nwww.example.com   Note  The name given to the certificate can only contain a-z (lowercase), 0-9 and hyphens   The Deis platform will investigate the certificate and extract any relevant information from it\nsuch as the Common Name, Subject Alt Names (SAN), fingerprint and more.  This allows for wildcard certificates and multiple domains in the SAN without uploading duplicates.",
            "title": "Add a Certificate"
        },
        {
            "location": "/applications/ssl-certificates/#add-a-certificate-chain",
            "text": "Sometimes, your certificates (such as a self-signed or a cheap certificate) need additional\ncertificates to establish the chain of trust. What you need to do is bundle all the certificates\ninto one file and give that to Deis. Importantly, your site\u2019s certificate must be the first one:  $ cat server.crt server.ca > server.bundle  After that, you can add them to Deis with the  certs:add  command:  $ deis certs:add example-com server.bundle server.key\nAdding SSL endpoint... done\nwww.example.com",
            "title": "Add a Certificate Chain"
        },
        {
            "location": "/applications/ssl-certificates/#attach-ssl-certificate-to-a-domain",
            "text": "Certificates are not automagically connected up to domains, instead you will have to attach a\ncertificate to a domain  $ deis certs:attach example-com example.com  Each certificate can be connected to many domains. There is no need to upload duplicates.  To remove an association  $ deis certs:detach example-com example.com",
            "title": "Attach SSL certificate to a domain"
        },
        {
            "location": "/applications/ssl-certificates/#endpoint-overview",
            "text": "You can verify the details of your domain's SSL configuration with  deis certs .  $ deis certs\n\n     Name     |    Common Name    | SubjectAltName    |         Expires         |   Fingerprint   |   Domains    |   Updated   |   Created\n+-------------+-------------------+-------------------+-------------------------+-----------------+--------------+-------------+-------------+\n  example-com |     example.com   | blog.example.com  | 31 Dec 2017 (in 1 year) | 8F:8E[...]CD:EB |  example.com | 30 Jan 2016 | 29 Jan 2016  or by looking at at each certificates detailed information  $ deis certs:info example-com\n\n=== bar-com Certificate\nCommon Name(s):     example.com\nExpires At:         2017-01-14 23:57:57 +0000 UTC\nStarts At:          2016-01-15 23:57:57 +0000 UTC\nFingerprint:        7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\nSubject Alt Name:   blog.example.com\nIssuer:             /C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=example.com/emailAddress=engineering@deis.com\nSubject:            /C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=example.com/emailAddress=engineering@deis.com\n\nConnected Domains:  example.com\nOwner:              admin-user\nCreated:            2016-01-28 19:07:41 +0000 UTC\nUpdated:            2016-01-30 00:10:02 +0000 UTC",
            "title": "Endpoint overview"
        },
        {
            "location": "/applications/ssl-certificates/#testing-ssl",
            "text": "Use a command line utility like  curl  to test that everything is configured correctly for your\nsecure domain.   Note  The -k option flag tells curl to ignore untrusted certificates.   Pay attention to the output. It should print  SSL certificate verify ok . If it prints something\nlike  common name: www.example.com (does not match 'www.somedomain.com')  then something is not\nconfigured correctly.",
            "title": "Testing SSL"
        },
        {
            "location": "/applications/ssl-certificates/#enforcing-ssl-at-the-router",
            "text": "To enforce all HTTP requests be redirected to HTTPS, TLS can be enforced at the router level by\nrunning  $ deis tls:enable -a foo\nEnabling https-only requests for foo... done  Users hitting the HTTP endpoint for the application will now receive a 301 redirect to the HTTPS\nendpoint.  To disable enforced TLS, run  $ deis tls:disable -a foo\nDisabling https-only requests for foo... done",
            "title": "Enforcing SSL at the Router"
        },
        {
            "location": "/applications/ssl-certificates/#remove-certificate",
            "text": "You can remove a certificate using the  certs:remove  command:  $ deis certs:remove my-cert\nRemoving www.example.com... Done.",
            "title": "Remove Certificate"
        },
        {
            "location": "/applications/ssl-certificates/#swapping-out-certificates",
            "text": "Over the lifetime of an application an operator will have to acquire certificates with new expire\ndates and apply it to all relevant applications, below is the recommended way to swap out certificates.  Be intentional with certificate names, name them  example-com-2017  when possible, where the year\nsignifies the expiry year. This allows for  example-com-2018  when a new certificate is purchased.  Assuming all applications are already using  example-com-2017  the following commands can be ran,\nchained together or otherwise:  $ deis certs:detach example-com-2017 example.com\n$ deis certs:attach example-com-2018 example.com  This will take care of a singular domain which allows the operator to verify everything went\nas planned and slowly roll it out to any other application using the same method.",
            "title": "Swapping out certificates"
        },
        {
            "location": "/applications/ssl-certificates/#troubleshooting",
            "text": "Here are some steps you can follow if your SSL endpoint is not working as you'd expect.",
            "title": "Troubleshooting"
        },
        {
            "location": "/applications/ssl-certificates/#untrusted-certificate",
            "text": "In some cases when accessing the SSL endpoint, it may list your certificate as untrusted.  If this occurs, it may be because it is not trusted by Mozilla\u2019s list of  root CAs . If this is\nthe case, your certificate may be considered untrusted for many browsers.  If you have uploaded a certificate that was signed by a root authority but you get the message that\nit is not trusted, then something is wrong with the certificate. For example, it may be missing intermediary certificates . If so, download the intermediary certificates from your SSL provider,\nremove the certificate from Deis and re-run the  certs:add  command.",
            "title": "Untrusted Certificate"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/",
            "text": "Tuning Component Settings\n\u00b6\n\n\nHelm Charts are a set of Kubernetes manifests that reflect best practices for deploying an\napplication or service on Kubernetes.\n\n\nAfter you add the Deis Chart Repository, you can customize the chart using\n\nhelm inspect values deis/workflow > values.yaml\n before using \nhelm install\n to complete the\ninstallation.\n\n\nThere are a few ways to customize the respective component:\n\n\n\n\n\n\nIf the value is exposed in the \nvalues.yaml\n file as derived above, one may modify the section of the component to tune these settings.  The modified value(s) will then take effect at chart installation or release upgrade time via either of the two respective commands:\n\n\n$ helm install deis/workflow --namespace deis -f values.yaml\n$ helm upgrade deis -f values.yaml\n\n\n\n\n\n\n\n\nIf the value hasn't yet been exposed in the \nvalues.yaml\n file, one may edit the component deployment with the tuned setting.  Here we edit the \ndeis-controller\n deployment:\n\n\n$ kubectl --namespace deis edit deployment deis-controller\n\n\n\n\nAdd/edit the setting via the appropriate environment variable and value under the \nenv\n section and save.  The updated deployment will recreate the component pod with the new/modified setting.\n\n\n\n\n\n\nLastly, one may also fetch and edit the chart as served by version control/the chart repository itself:\n\n\n$ helm fetch deis/workflow --untar\n$ $EDITOR workflow/charts/controller/templates/controller-deployment.yaml\n\n\n\n\nThen run \nhelm install ./workflow --namespace deis --name deis\n to apply the changes, or \nhelm upgrade deis ./workflow\n if the cluster is already running.\n\n\n\n\n\n\nSetting Resource limits\n\u00b6\n\n\nYou can set resource limits to Workflow components by modifying the values.yaml file fetched\nearlier. This file has a section for each Workflow component. To set a limit to any Workflow\ncomponent just add \nlimits_cpu\n, \nlimits_memory\n in the section and set them to the appropriate\nvalues.\n\n\nBelow is an example of how the builder section of \nvalues.yaml\n might look with CPU and memory\nlimits set:\n\n\nbuilder:\n  org: \"deisci\"\n  pullPolicy: \"Always\"\n  dockerTag: \"canary\"\n  limits_cpu: \"100m\"\n  limits_memory: \"50Mi\"\n\n\n\n\nCustomizing the Builder\n\u00b6\n\n\nThe following environment variables are tunable for the \nBuilder\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDEBUG\n\n\nEnable debug log output (default: false)\n\n\n\n\n\n\nBUILDER_POD_NODE_SELECTOR\n\n\nA node selector setting for builder job. As it may sometimes consume a lot of node resources, one may want a given builder job to run in a specific node only, so it won't affect critical nodes. for example \npool:testing,disk:magnetic\n\n\n\n\n\n\n\n\nCustomizing the Controller\n\u00b6\n\n\nThe following environment variables are tunable for the \nController\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nREGISTRATION_MODE\n\n\nset registration to \"enabled\", \"disabled\", or \"admin_only\" (default: \"admin_only\")\n\n\n\n\n\n\nGUNICORN_WORKERS\n\n\nnumber of \ngunicorn\n workers spawned to process requests (default: CPU cores * 4 + 1)\n\n\n\n\n\n\nRESERVED_NAMES\n\n\na comma-separated list of names which applications cannot reserve for routing (default: \"deis, deis-builder, deis-workflow-manager\")\n\n\n\n\n\n\nSLUGRUNNER_IMAGE_NAME\n\n\nthe image used to run buildpack application slugs (default: \"quay.io/deisci/slugrunner:canary\")\n\n\n\n\n\n\nDEIS_DEPLOY_HOOK_URLS\n\n\na comma-separated list of URLs to send \ndeploy hooks\n to.\n\n\n\n\n\n\nDEIS_DEPLOY_HOOK_SECRET_KEY\n\n\na private key used to compute the HMAC signature for deploy hooks.\n\n\n\n\n\n\nDEIS_DEPLOY_REJECT_IF_PROCFILE_MISSING\n\n\nrejects a deploy if the previous build had a Procfile but the current deploy is missing it. A 409 is thrown in the API. Prevents accidental process types removal. (default: \"false\", allowed values: \"true\", \"false\")\n\n\n\n\n\n\nDEIS_DEPLOY_PROCFILE_MISSING_REMOVE\n\n\nwhen turned on (default) any missing process type in a Procfile compared to the previous deploy is removed. When set to false will allow an empty Procfile to go through without removing missing process types, note that new images, configs and so on will get updated on all proc types.  (default: \"true\", allowed values: \"true\", \"false\")\n\n\n\n\n\n\nDEIS_DEFAULT_CONFIG_TAGS\n\n\nset tags for all applications by default, for example: '{\"role\": \"worker\"}'. (default: '')\n\n\n\n\n\n\nKUBERNETES_NAMESPACE_DEFAULT_QUOTA_SPEC\n\n\nset resource quota to application namespace by setting \nResourceQuota\n spec, for example: \n{\"spec\":{\"hard\":{\"pods\":\"10\"}}}\n, restrict app owner to spawn more then 10 pods (default: \"\", no quota will be applied to namespace)\n\n\n\n\n\n\n\n\nLDAP authentication settings\n\u00b6\n\n\nConfiguration options for LDAP authentication are detailed \nhere\n.\n\n\nThe following environment variables are available for enabling LDAP\nauthentication of user accounts in the \nController\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nLDAP_ENDPOINT\n\n\nThe URI of the LDAP server. If not specified, LDAP authentication is not enabled (default: \"\", example: \nldap://hostname\n).\n\n\n\n\n\n\nLDAP_BIND_DN\n\n\nThe distinguished name to use when binding to the LDAP server (default: \"\")\n\n\n\n\n\n\nLDAP_BIND_PASSWORD\n\n\nThe password to use with LDAP_BIND_DN (default: \"\")\n\n\n\n\n\n\nLDAP_USER_BASEDN\n\n\nThe distinguished name of the search base for user names (default: \"\")\n\n\n\n\n\n\nLDAP_USER_FILTER\n\n\nThe name of the login field in the users search base (default: \"username\")\n\n\n\n\n\n\nLDAP_GROUP_BASEDN\n\n\nThe distinguished name of the search base for user's groups names (default: \"\")\n\n\n\n\n\n\nLDAP_GROUP_FILTER\n\n\nThe filter for user's groups (default: \"\", example: \nobjectClass=person\n)\n\n\n\n\n\n\n\n\nGlobal and per application settings\n\u00b6\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDEIS_DEPLOY_BATCHES\n\n\nthe number of pods to bring up and take down sequentially during a scale (default: number of available nodes)\n\n\n\n\n\n\nDEIS_DEPLOY_TIMEOUT\n\n\ndeploy timeout in seconds per deploy batch (default: 120)\n\n\n\n\n\n\nIMAGE_PULL_POLICY\n\n\nthe kubernetes \nimage pull policy\n for application images (default: \"IfNotPresent\") (allowed values: \"Always\", \"IfNotPresent\")\n\n\n\n\n\n\nKUBERNETES_DEPLOYMENTS_REVISION_HISTORY_LIMIT\n\n\nhow many \nrevisions\n Kubernetes keeps around of a given Deployment (default: all revisions)\n\n\n\n\n\n\nKUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS\n\n\nhow many seconds kubernetes waits for a pod to finish work after a SIGTERM before sending SIGKILL (default: 30)\n\n\n\n\n\n\n\n\nSee the \nDeploying Apps\n guide for more detailed information on those.\n\n\nCustomizing the Database\n\u00b6\n\n\nThe following environment variables are tunable for the \nDatabase\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBACKUP_FREQUENCY\n\n\nhow often the database should perform a base backup (default: \"12h\")\n\n\n\n\n\n\nBACKUPS_TO_RETAIN\n\n\nnumber of base backups the backing store should retain (default: 5)\n\n\n\n\n\n\n\n\nCustomizing Fluentd\n\u00b6\n\n\nThe following values can be changed in the \nvalues.yaml\n file or by using the \n--set\n flag with the Helm CLI. \n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsyslog.host\n\n\n\"\"\n\n\nHost value of a syslog endpoint\n\n\n\n\n\n\nsyslog.port\n\n\n\"\"\n\n\nPort value of a syslog endpoint\n\n\n\n\n\n\nsources.start_script\n\n\nfalse\n\n\nCapture kubernetes start script logs\n\n\n\n\n\n\nsources.docker\n\n\nfalse\n\n\nCapture docker daemon logs\n\n\n\n\n\n\nsources.etcd\n\n\nfalse\n\n\nCapture etcd logs\n\n\n\n\n\n\nsources.kubelet\n\n\nfalse\n\n\nCapture kubelet logs\n\n\n\n\n\n\nsources.kube_api\n\n\nfalse\n\n\nCapture Kubernetes API logs\n\n\n\n\n\n\nsources.controller\n\n\nfalse\n\n\nCapture Kubernetes Controller logs\n\n\n\n\n\n\nsources.scheduler\n\n\nfalse\n\n\nCapture Kubernetes Scheduler logs\n\n\n\n\n\n\noutput.disable_deis\n\n\nfalse\n\n\nDisable the Deis output plugin\n\n\n\n\n\n\nboot.install_build_tools\n\n\nfalse\n\n\nInstall the build tools package. This is useful when using custom plugins\n\n\n\n\n\n\ndaemon_environment\n\n\n\n\nTakes key-value pairs and turns them into environment variables.\n\n\n\n\n\n\n\n\nFor more information about the various environment variables that can be set please see the \nREADME\n\n\nCustomizing the Logger\n\u00b6\n\n\nThe following environment variables are tunable for the \nLogger\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nSTORAGE_ADAPTER\n\n\nHow to store logs that are sent to the logger. Legal values are \"file\", \"memory\", and \"redis\". (default: \"redis\")\n\n\n\n\n\n\nNUMBER_OF_LINES\n\n\nHow many lines to store in the ring buffer (default: 1000)\n\n\n\n\n\n\n\n\nCustomizing the Monitor\n\u00b6\n\n\nGrafana\n\u00b6\n\n\nWe have exposed some of the more useful configuration values directly in the chart. This allows them to be set using either the \nvalues.yaml\n file or by using the \n--set\n flag with the Helm CLI. You can see these options below:\n\n\nSetting           | Default Value  | Description\n----------------- | -------------- |------------ |\nuser   | \"admin\" | The first user created in the database (this user has admin privileges)\npassword | \"admin\" | Password for the first user.\nallow_sign_up | \"true\" | Allows users to sign up for an account.\n\n\nFor a list of other options you can set by using environment variables please see the \nconfiguration file\n in Github.\n\n\nTelegraf\n\u00b6\n\n\nFor a list of configuration values that can be set by using environment variables please see the following \nconfiguration file\n.\n\n\nInfluxDB\n\u00b6\n\n\nYou can find a list of values that can be set using environment variables \nhere\n.\n\n\nCustomizing the Registry\n\u00b6\n\n\nThe \nRegistry\n component can be tuned by following the\n\ndeis/distribution config doc\n.\n\n\nCustomizing the Router\n\u00b6\n\n\nThe majority of router settings are tunable through annotations, which allows the router to be\nre-configured with zero downtime post-installation. You can find the list of annotations to tune\n\nhere\n.\n\n\nThe following environment variables are tunable for the \nRouter\n component:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nPOD_NAMESPACE\n\n\nThe pod namespace the router resides in. This is set by the \nKubernetes downward API\n.\n\n\n\n\n\n\n\n\nCustomizing Workflow Manager\n\u00b6\n\n\nThe following environment variables are tunable for \nWorkflow Manager\n:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nCHECK_VERSIONS\n\n\nEnables the external version check at \nhttps://versions.deis.com/\n (default: \"true\")\n\n\n\n\n\n\nPOLL_INTERVAL_SEC\n\n\nThe interval when Workflow Manager performs a version check, in seconds (default: 43200, or 12 hours)\n\n\n\n\n\n\nVERSIONS_API_URL\n\n\nThe versions API URL (default: \"\nhttps://versions-staging.deis.com\n\")\n\n\n\n\n\n\nDOCTOR_API_URL\n\n\nThe doctor API URL (default: \"\nhttps://doctor-staging.deis.com\n\")\n\n\n\n\n\n\nAPI_VERSION\n\n\nThe version number Workflow Manager sends to the versions API (default: \"v2\")",
            "title": "Tuning Component Settings"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#tuning-component-settings",
            "text": "Helm Charts are a set of Kubernetes manifests that reflect best practices for deploying an\napplication or service on Kubernetes.  After you add the Deis Chart Repository, you can customize the chart using helm inspect values deis/workflow > values.yaml  before using  helm install  to complete the\ninstallation.  There are a few ways to customize the respective component:    If the value is exposed in the  values.yaml  file as derived above, one may modify the section of the component to tune these settings.  The modified value(s) will then take effect at chart installation or release upgrade time via either of the two respective commands:  $ helm install deis/workflow --namespace deis -f values.yaml\n$ helm upgrade deis -f values.yaml    If the value hasn't yet been exposed in the  values.yaml  file, one may edit the component deployment with the tuned setting.  Here we edit the  deis-controller  deployment:  $ kubectl --namespace deis edit deployment deis-controller  Add/edit the setting via the appropriate environment variable and value under the  env  section and save.  The updated deployment will recreate the component pod with the new/modified setting.    Lastly, one may also fetch and edit the chart as served by version control/the chart repository itself:  $ helm fetch deis/workflow --untar\n$ $EDITOR workflow/charts/controller/templates/controller-deployment.yaml  Then run  helm install ./workflow --namespace deis --name deis  to apply the changes, or  helm upgrade deis ./workflow  if the cluster is already running.",
            "title": "Tuning Component Settings"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#setting-resource-limits",
            "text": "You can set resource limits to Workflow components by modifying the values.yaml file fetched\nearlier. This file has a section for each Workflow component. To set a limit to any Workflow\ncomponent just add  limits_cpu ,  limits_memory  in the section and set them to the appropriate\nvalues.  Below is an example of how the builder section of  values.yaml  might look with CPU and memory\nlimits set:  builder:\n  org: \"deisci\"\n  pullPolicy: \"Always\"\n  dockerTag: \"canary\"\n  limits_cpu: \"100m\"\n  limits_memory: \"50Mi\"",
            "title": "Setting Resource limits"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-builder",
            "text": "The following environment variables are tunable for the  Builder  component:     Setting  Description      DEBUG  Enable debug log output (default: false)    BUILDER_POD_NODE_SELECTOR  A node selector setting for builder job. As it may sometimes consume a lot of node resources, one may want a given builder job to run in a specific node only, so it won't affect critical nodes. for example  pool:testing,disk:magnetic",
            "title": "Customizing the Builder"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-controller",
            "text": "The following environment variables are tunable for the  Controller  component:     Setting  Description      REGISTRATION_MODE  set registration to \"enabled\", \"disabled\", or \"admin_only\" (default: \"admin_only\")    GUNICORN_WORKERS  number of  gunicorn  workers spawned to process requests (default: CPU cores * 4 + 1)    RESERVED_NAMES  a comma-separated list of names which applications cannot reserve for routing (default: \"deis, deis-builder, deis-workflow-manager\")    SLUGRUNNER_IMAGE_NAME  the image used to run buildpack application slugs (default: \"quay.io/deisci/slugrunner:canary\")    DEIS_DEPLOY_HOOK_URLS  a comma-separated list of URLs to send  deploy hooks  to.    DEIS_DEPLOY_HOOK_SECRET_KEY  a private key used to compute the HMAC signature for deploy hooks.    DEIS_DEPLOY_REJECT_IF_PROCFILE_MISSING  rejects a deploy if the previous build had a Procfile but the current deploy is missing it. A 409 is thrown in the API. Prevents accidental process types removal. (default: \"false\", allowed values: \"true\", \"false\")    DEIS_DEPLOY_PROCFILE_MISSING_REMOVE  when turned on (default) any missing process type in a Procfile compared to the previous deploy is removed. When set to false will allow an empty Procfile to go through without removing missing process types, note that new images, configs and so on will get updated on all proc types.  (default: \"true\", allowed values: \"true\", \"false\")    DEIS_DEFAULT_CONFIG_TAGS  set tags for all applications by default, for example: '{\"role\": \"worker\"}'. (default: '')    KUBERNETES_NAMESPACE_DEFAULT_QUOTA_SPEC  set resource quota to application namespace by setting  ResourceQuota  spec, for example:  {\"spec\":{\"hard\":{\"pods\":\"10\"}}} , restrict app owner to spawn more then 10 pods (default: \"\", no quota will be applied to namespace)",
            "title": "Customizing the Controller"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#ldap-authentication-settings",
            "text": "Configuration options for LDAP authentication are detailed  here .  The following environment variables are available for enabling LDAP\nauthentication of user accounts in the  Controller  component:     Setting  Description      LDAP_ENDPOINT  The URI of the LDAP server. If not specified, LDAP authentication is not enabled (default: \"\", example:  ldap://hostname ).    LDAP_BIND_DN  The distinguished name to use when binding to the LDAP server (default: \"\")    LDAP_BIND_PASSWORD  The password to use with LDAP_BIND_DN (default: \"\")    LDAP_USER_BASEDN  The distinguished name of the search base for user names (default: \"\")    LDAP_USER_FILTER  The name of the login field in the users search base (default: \"username\")    LDAP_GROUP_BASEDN  The distinguished name of the search base for user's groups names (default: \"\")    LDAP_GROUP_FILTER  The filter for user's groups (default: \"\", example:  objectClass=person )",
            "title": "LDAP authentication settings"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#global-and-per-application-settings",
            "text": "Setting  Description      DEIS_DEPLOY_BATCHES  the number of pods to bring up and take down sequentially during a scale (default: number of available nodes)    DEIS_DEPLOY_TIMEOUT  deploy timeout in seconds per deploy batch (default: 120)    IMAGE_PULL_POLICY  the kubernetes  image pull policy  for application images (default: \"IfNotPresent\") (allowed values: \"Always\", \"IfNotPresent\")    KUBERNETES_DEPLOYMENTS_REVISION_HISTORY_LIMIT  how many  revisions  Kubernetes keeps around of a given Deployment (default: all revisions)    KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS  how many seconds kubernetes waits for a pod to finish work after a SIGTERM before sending SIGKILL (default: 30)     See the  Deploying Apps  guide for more detailed information on those.",
            "title": "Global and per application settings"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-database",
            "text": "The following environment variables are tunable for the  Database  component:     Setting  Description      BACKUP_FREQUENCY  how often the database should perform a base backup (default: \"12h\")    BACKUPS_TO_RETAIN  number of base backups the backing store should retain (default: 5)",
            "title": "Customizing the Database"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-fluentd",
            "text": "The following values can be changed in the  values.yaml  file or by using the  --set  flag with the Helm CLI.      Key  Default  Description      syslog.host  \"\"  Host value of a syslog endpoint    syslog.port  \"\"  Port value of a syslog endpoint    sources.start_script  false  Capture kubernetes start script logs    sources.docker  false  Capture docker daemon logs    sources.etcd  false  Capture etcd logs    sources.kubelet  false  Capture kubelet logs    sources.kube_api  false  Capture Kubernetes API logs    sources.controller  false  Capture Kubernetes Controller logs    sources.scheduler  false  Capture Kubernetes Scheduler logs    output.disable_deis  false  Disable the Deis output plugin    boot.install_build_tools  false  Install the build tools package. This is useful when using custom plugins    daemon_environment   Takes key-value pairs and turns them into environment variables.     For more information about the various environment variables that can be set please see the  README",
            "title": "Customizing Fluentd"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-logger",
            "text": "The following environment variables are tunable for the  Logger  component:     Setting  Description      STORAGE_ADAPTER  How to store logs that are sent to the logger. Legal values are \"file\", \"memory\", and \"redis\". (default: \"redis\")    NUMBER_OF_LINES  How many lines to store in the ring buffer (default: 1000)",
            "title": "Customizing the Logger"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-monitor",
            "text": "",
            "title": "Customizing the Monitor"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#grafana",
            "text": "We have exposed some of the more useful configuration values directly in the chart. This allows them to be set using either the  values.yaml  file or by using the  --set  flag with the Helm CLI. You can see these options below:  Setting           | Default Value  | Description\n----------------- | -------------- |------------ |\nuser   | \"admin\" | The first user created in the database (this user has admin privileges)\npassword | \"admin\" | Password for the first user.\nallow_sign_up | \"true\" | Allows users to sign up for an account.  For a list of other options you can set by using environment variables please see the  configuration file  in Github.",
            "title": "Grafana"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#telegraf",
            "text": "For a list of configuration values that can be set by using environment variables please see the following  configuration file .",
            "title": "Telegraf"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#influxdb",
            "text": "You can find a list of values that can be set using environment variables  here .",
            "title": "InfluxDB"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-registry",
            "text": "The  Registry  component can be tuned by following the deis/distribution config doc .",
            "title": "Customizing the Registry"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-the-router",
            "text": "The majority of router settings are tunable through annotations, which allows the router to be\nre-configured with zero downtime post-installation. You can find the list of annotations to tune here .  The following environment variables are tunable for the  Router  component:     Setting  Description      POD_NAMESPACE  The pod namespace the router resides in. This is set by the  Kubernetes downward API .",
            "title": "Customizing the Router"
        },
        {
            "location": "/managing-workflow/tuning-component-settings/#customizing-workflow-manager",
            "text": "The following environment variables are tunable for  Workflow Manager :     Setting  Description      CHECK_VERSIONS  Enables the external version check at  https://versions.deis.com/  (default: \"true\")    POLL_INTERVAL_SEC  The interval when Workflow Manager performs a version check, in seconds (default: 43200, or 12 hours)    VERSIONS_API_URL  The versions API URL (default: \" https://versions-staging.deis.com \")    DOCTOR_API_URL  The doctor API URL (default: \" https://doctor-staging.deis.com \")    API_VERSION  The version number Workflow Manager sends to the versions API (default: \"v2\")",
            "title": "Customizing Workflow Manager"
        },
        {
            "location": "/managing-workflow/configuring-load-balancers/",
            "text": "Configuring Load Balancers\n\u00b6\n\n\nDepending on what distribution of Kubernetes you use and where you host it, installation of Deis Workflow may automatically provision an external (to Kubernetes) load balancer or similar mechanism for directing inbound traffic from beyond the cluster to the Deis router(s).  For example, \nkube-aws\n and \nGoogle Container Engine\n both do this.  On some other platforms-- Minikube or bare metal, for instance-- this must either be accomplished manually or does not apply at all.\n\n\nIdle connection timeouts\n\u00b6\n\n\nIf a load balancer such as the one described above does exist (whether created automatically or manually) and if you intend on handling any long-running requests, the load balancer (or similar) may require some manual configuration to increase the idle connection timeout.  Typically, this is most applicable to AWS and Elastic Load Balancers, but may apply in other cases as well.  It does not apply to Google Container Engine, as the idle connection timeout cannot be configured there, but also works as-is.\n\n\nIf, for instance, Deis Workflow were installed on kube-aws, this timeout should be increased to a recommended value of 1200 seconds.  This will ensure the load balancer does not hang up on the client during long-running operations like an application deployment.  The AWS-specific annotation below will be included by default in the router service starting in Workflow v2.13.0.\n\n\nIf you are running Kubernetes v1.4 or later but a Workflow version earlier than v2.13.0, you should configure the idle timeout using this service annotation:\n\n\n$ kubectl --namespace=deis annotate service/deis-router service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout=1200\n\n\n\n\nOn older Kubernetes versions, you have to \nconfigure the idle timeout manually\n, but it will reset back to the default of 60 seconds whenever Kubernetes needs to reconfigure the load balancer, for example because a node in your cluster was added or removed. Remember to re-apply your manual changes if that happens.\n\n\nConfiguring PROXY protocol\n\u00b6\n\n\nBy default Kubernetes will create an external TCP load balancer to route incoming requests to the Deis router, which will take care of forwarding the requests to the right application inside the cluster depending on the hostname. Because the original request is not modified by the load balancer, the router only knows about the internal IP address of the load balancer which will then be forwarded to your app in the \nX-Forwarded-For\n HTTP header.\n\n\nIf you need access to the \nactual\n client's IP address in your application, for example for IP-based sessions, access control or auditing, you need to configure the external load balancer and the Deis router to use the \nPROXY protocol\n. The PROXY protocol adds a small header with the client's IP address to each connection, which can then be used by the Deis router to pass the actual client IP in the \nX-Forwarded-For\n HTTP header.\n\n\nHere's how to enable PROXY protocol when running Kubernetes on AWS with an ELB Classic Load Balancer:\n\n\nEnable PROXY protocol for the \ndeis-router\n deployment:\n\n\n$ kubectl --namespace=deis annotate deployment/deis-router router.deis.io/nginx.useProxyProtocol=true\n\n\n\n\nEnable PROXY protocol on the ELB load balancer for the \ndeis-router\n service:\n\n\n$ kubectl --namespace=deis annotate service/deis-router service.beta.kubernetes.io/aws-load-balancer-proxy-protocol='*'\n\n\n\n\nPrepare for a short downtime until both the ELB and the router have converged to the new configuration.\n\n\n\n\nImportant\n\n\nELB PROXY protocol support was added in Kubernetes 1.3. If you are still on Kubernetes 1.2, you need to first upgrade to a newer \nsupported Kubernetes version\n.\n\n\n\n\nManually configuring a load balancer\n\u00b6\n\n\nIf using a Kubernetes distribution or underlying infrastructure that does not support the automated provisioning of a front-facing load balancer, operators will wish to manually configure a load balancer (or use other tricks) to route inbound traffic from beyond the cluster into the cluster to the Deis router(s).  There are many ways to accomplish this.  This documentation will focus on the most common method.  Readers interested in other options may refer to \nthe router component's own documentation\n for further details.\n\n\nBegin by determining the \"node ports\" for the \ndeis-router\n service:\n\n\n$ kubectl --namespace=deis describe service deis-router\n\n\n\n\nThis will yield output similar to the following:\n\n\n...\nPort:           http    80/TCP\nNodePort:       http    32477/TCP\nEndpoints:      10.2.80.11:80\nPort:           https   443/TCP\nNodePort:       https   32389/TCP\nEndpoints:      10.2.80.11:443\nPort:           builder 2222/TCP\nNodePort:       builder 30729/TCP\nEndpoints:      10.2.80.11:2222\nPort:           healthz 9090/TCP\nNodePort:       healthz 31061/TCP\nEndpoints:      10.2.80.11:9090\n...\n\n\n\n\nThe node ports shown above are high-numbered ports that are allocated on every Kubernetes worker node for use by the router service.  The kube-proxy component on every Kubernetes node will listen on these ports and proxy traffic through to the corresponding port within an endpoint-- that is, a pod running the Deis router.\n\n\nIf manually creating a load balancer, configure it to forward inbound traffic on ports 80, 443, and 2222 (port 9090 can be ignored) to the corresponding node ports on your Kubernetes worker nodes.  Ports 80 and 443 may use either HTTP/S or TCP as protocols.  Port 2222 must use TCP.",
            "title": "Configuring Load Balancers"
        },
        {
            "location": "/managing-workflow/configuring-load-balancers/#configuring-load-balancers",
            "text": "Depending on what distribution of Kubernetes you use and where you host it, installation of Deis Workflow may automatically provision an external (to Kubernetes) load balancer or similar mechanism for directing inbound traffic from beyond the cluster to the Deis router(s).  For example,  kube-aws  and  Google Container Engine  both do this.  On some other platforms-- Minikube or bare metal, for instance-- this must either be accomplished manually or does not apply at all.",
            "title": "Configuring Load Balancers"
        },
        {
            "location": "/managing-workflow/configuring-load-balancers/#idle-connection-timeouts",
            "text": "If a load balancer such as the one described above does exist (whether created automatically or manually) and if you intend on handling any long-running requests, the load balancer (or similar) may require some manual configuration to increase the idle connection timeout.  Typically, this is most applicable to AWS and Elastic Load Balancers, but may apply in other cases as well.  It does not apply to Google Container Engine, as the idle connection timeout cannot be configured there, but also works as-is.  If, for instance, Deis Workflow were installed on kube-aws, this timeout should be increased to a recommended value of 1200 seconds.  This will ensure the load balancer does not hang up on the client during long-running operations like an application deployment.  The AWS-specific annotation below will be included by default in the router service starting in Workflow v2.13.0.  If you are running Kubernetes v1.4 or later but a Workflow version earlier than v2.13.0, you should configure the idle timeout using this service annotation:  $ kubectl --namespace=deis annotate service/deis-router service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout=1200  On older Kubernetes versions, you have to  configure the idle timeout manually , but it will reset back to the default of 60 seconds whenever Kubernetes needs to reconfigure the load balancer, for example because a node in your cluster was added or removed. Remember to re-apply your manual changes if that happens.",
            "title": "Idle connection timeouts"
        },
        {
            "location": "/managing-workflow/configuring-load-balancers/#configuring-proxy-protocol",
            "text": "By default Kubernetes will create an external TCP load balancer to route incoming requests to the Deis router, which will take care of forwarding the requests to the right application inside the cluster depending on the hostname. Because the original request is not modified by the load balancer, the router only knows about the internal IP address of the load balancer which will then be forwarded to your app in the  X-Forwarded-For  HTTP header.  If you need access to the  actual  client's IP address in your application, for example for IP-based sessions, access control or auditing, you need to configure the external load balancer and the Deis router to use the  PROXY protocol . The PROXY protocol adds a small header with the client's IP address to each connection, which can then be used by the Deis router to pass the actual client IP in the  X-Forwarded-For  HTTP header.  Here's how to enable PROXY protocol when running Kubernetes on AWS with an ELB Classic Load Balancer:  Enable PROXY protocol for the  deis-router  deployment:  $ kubectl --namespace=deis annotate deployment/deis-router router.deis.io/nginx.useProxyProtocol=true  Enable PROXY protocol on the ELB load balancer for the  deis-router  service:  $ kubectl --namespace=deis annotate service/deis-router service.beta.kubernetes.io/aws-load-balancer-proxy-protocol='*'  Prepare for a short downtime until both the ELB and the router have converged to the new configuration.   Important  ELB PROXY protocol support was added in Kubernetes 1.3. If you are still on Kubernetes 1.2, you need to first upgrade to a newer  supported Kubernetes version .",
            "title": "Configuring PROXY protocol"
        },
        {
            "location": "/managing-workflow/configuring-load-balancers/#manually-configuring-a-load-balancer",
            "text": "If using a Kubernetes distribution or underlying infrastructure that does not support the automated provisioning of a front-facing load balancer, operators will wish to manually configure a load balancer (or use other tricks) to route inbound traffic from beyond the cluster into the cluster to the Deis router(s).  There are many ways to accomplish this.  This documentation will focus on the most common method.  Readers interested in other options may refer to  the router component's own documentation  for further details.  Begin by determining the \"node ports\" for the  deis-router  service:  $ kubectl --namespace=deis describe service deis-router  This will yield output similar to the following:  ...\nPort:           http    80/TCP\nNodePort:       http    32477/TCP\nEndpoints:      10.2.80.11:80\nPort:           https   443/TCP\nNodePort:       https   32389/TCP\nEndpoints:      10.2.80.11:443\nPort:           builder 2222/TCP\nNodePort:       builder 30729/TCP\nEndpoints:      10.2.80.11:2222\nPort:           healthz 9090/TCP\nNodePort:       healthz 31061/TCP\nEndpoints:      10.2.80.11:9090\n...  The node ports shown above are high-numbered ports that are allocated on every Kubernetes worker node for use by the router service.  The kube-proxy component on every Kubernetes node will listen on these ports and proxy traffic through to the corresponding port within an endpoint-- that is, a pod running the Deis router.  If manually creating a load balancer, configure it to forward inbound traffic on ports 80, 443, and 2222 (port 9090 can be ignored) to the corresponding node ports on your Kubernetes worker nodes.  Ports 80 and 443 may use either HTTP/S or TCP as protocols.  Port 2222 must use TCP.",
            "title": "Manually configuring a load balancer"
        },
        {
            "location": "/managing-workflow/configuring-dns/",
            "text": "Configure DNS\n\u00b6\n\n\nThe Deis Workflow controller and all applications deployed via Workflow are intended (by default) to be accessible as subdomains of the Workflow cluster's domain.  For example, assuming \nexample.com\n were a cluster's domain:\n\n\n\n\nThe controller should be accessible at \ndeis.example.com\n\n\nApplications should be accessible (by default) at \n<application name>.example.com\n\n\n\n\nGiven that this is the case, the primary objective in configuring DNS is that traffic for all subdomains of a cluster's domain be directed to the cluster node(s) hosting the platform's router component, which is capable of directing traffic within the cluster to the correct endpoints.\n\n\nWith a Load Balancer\n\u00b6\n\n\nGenerally, it is recommended that a \nload balancer\n be used to direct inbound traffic to one or more routers.  In such a case, configuring DNS is as simple as defining a wildcard record in DNS that points to the load balancer.\n\n\nFor example, assuming a domain of \nexample.com\n:\n\n\n\n\nAn \nA\n record enumerating each of your load balancer(s) IPs (i.e. DNS round-robining)\n\n\nA \nCNAME\n record referencing an existing fully-qualified domain name for the load balancer\n\n\nPer \nAWS' own documentation\n, this is the recommended strategy when using AWS Elastic Load Balancers, as ELB IPs may change over time.\n\n\n\n\n\n\n\n\nDNS for any applications using a \"custom domain\" (a fully-qualified domain name that is not a subdomain of the cluster's own domain) can be configured by creating a \nCNAME\n record that references the wildcard record described above.\n\n\nAlthough it is dependent upon your distribution of Kubernetes and your underlying infrastructure, in many cases, the IP(s) or existing fully-qualified domain name of a load balancer can be determined directly using the \nkubectl\n tool:\n\n\n$ kubectl --namespace=deis describe service deis-router | grep \"LoadBalancer Ingress\"\nLoadBalancer Ingress:   a493e4e58ea0511e5bb390686bc85da3-1558404688.us-west-2.elb.amazonaws.com\n\n\n\n\nThe \nLoadBalancer Ingress\n field typically describes an existing domain name or public IP(s).  Note that if Kubernetes is able to automatically provision a load balancer for you, it does so asynchronously.  If the command shown above is issued very soon after Workflow installation, the load balancer may not exist yet.\n\n\nWithout a Load Balancer\n\u00b6\n\n\nOn some platforms (Minikube, for instance), a load balancer is not an easy or practical thing to provision. In these cases, one can directly identify the public IP of a Kubernetes node that is hosting a router pod and use that information to configure the local \n/etc/hosts\n file.\n\n\nBecause wildcard entries do not work in a local \n/etc/hosts\n file, using this strategy may result in frequent editing of that file to add fully-qualified subdomains of a cluster for each application added to that cluster.  Because of this a more viable option may be to utilize the \nxip.io\n service.\n\n\nIn general, for any IP, \na.b.c.d\n, the fully-qualified domain name \nany-subdomain.a.b.c.d.xip.io\n will resolve to the IP \na.b.c.d\n.  This can be enormously useful.\n\n\nTo begin, find the node(s) hosting router instances using \nkubectl\n:\n\n\n$ kubectl --namespace=deis describe pod deis-router | grep Node\nNode:       ip-10-0-0-199.us-west-2.compute.internal/10.0.0.199\nNode:       ip-10-0-0-198.us-west-2.compute.internal/10.0.0.198\n\n\n\n\nThe command will display information for every router pod.  For each, a node name and IP are displayed in the \nNode\n field.  If the IPs appearing in these fields are public, any of these may be used to configure your local \n/etc/hosts\n file or may be used with \nxip.io\n.  If the IPs shown are not public, further investigation may be needed.\n\n\nYou can list the IP addresses of a node using \nkubectl\n:\n\n\n$ kubectl describe node ip-10-0-0-199.us-west-2.compute.internal\n# ...\nAddresses:  10.0.0.199,10.0.0.199,54.218.85.175\n# ...\n\n\n\n\nHere, the \nAddresses\n field lists all the node's IPs.  If any of them are public, again, they may be used to configure your local \n/etc/hosts\n file or may be used with \nxip.io\n.\n\n\nTutorial: Configuring DNS with \nGoogle Cloud DNS\n\u00b6\n\n\nIn this section, we'll describe how to configure Google Cloud DNS for routing your domain name to your Deis cluster.\n\n\nWe'll assume the following in this section:\n\n\n\n\nYour Deis router service has a load balancer in front of it.\n\n\nThe load balancer need not be cloud based, it just needs to provide a stable IP address or a stable domain name\n\n\nYou have the \nmystuff.com\n domain name registered with a registrar\n\n\nReplace your domain name with \nmystuff.com\n in the instructions to follow\n\n\nYour registrar lets you alter the nameservers for your domain name (most registrars do)\n\n\n\n\nHere are the steps for configuring cloud DNS to route to your deis cluster:\n\n\n\n\nGet the load balancer IP or domain name\n\n\nIf you are on Google Container Engine, you can run \nkubectl get svc deis-router\n and look for the \nLoadBalancer Ingress\n column to get the IP address\n\n\nCreate a new Cloud DNS Zone (on the console: \nNetworking\n => \nCloud DNS\n, then click on \nCreate Zone\n)\n\n\nName your zone, and set the DNS name to \nmystuff.com.\n (note the \n.\n at the end\n\n\nClick on the \nCreate\n button\n\n\nClick on the \nAdd Record Set\n button on the resulting page\n\n\nIf your load balancer provides a stable IP address, enter the following fields in the resulting form:\n\n\nDNS Name\n: \n*\n\n\nResource Record Type\n: \nA\n\n\nTTL\n: the DNS TTL of your choosing. If you're testing or you anticipate that you'll tear down and rebuild many deis clusters over time, we recommend a low TTL\n\n\nIPv4 Address\n: The IP that you got in the very first step\n\n\nClick the \nCreate\n button\n\n\nIf your load balancer provides the stable domain name \nlbdomain.com\n, enter the following fields in the resulting form:\n\n\nDNS Name\n: \n*\n\n\nResource Record Type\n: \nCNAME\n\n\nTTL\n: the DNS TTL of your choosing. If you're testing or you anticipate that you'll tear down and rebuild many deis clusters over time, we recommend a low TTL\n\n\nCanonical name\n: \nlbdomain.com.\n (note the \n.\n a the end)\n\n\nClick on the \nCreate\n button\n\n\nIn your domain registrar, set the nameservers for your \nmystuff.com\n domain to the ones under the \ndata\n column in the \nNS\n record on the same page. They'll often be something like the below (note the trailing \n.\n characters).\n\n\n\n\nns-cloud-b1.googledomains.com.\n  ns-cloud-b2.googledomains.com.\n  ns-cloud-b3.googledomains.com.\n  ns-cloud-b4.googledomains.com.\n\n\nNote: If you ever have to re-create your deis cluster, simply go back to step 6.4 or 7.4 (depending on your load balancer) and change the IP address or domain name to the new value. You may have to wait for the TTL you set to expire.\n\n\nTesting\n\u00b6\n\n\nTo test that traffic reaches its intended destination, a request can be\nsent to the Deis controller like so (do not forget the trailing slash!):\n\n\ncurl http://deis.example.com/v2/\n\n\n\n\nOr:\n\n\ncurl http://deis.54.218.85.175.xip.io/v2/\n\n\n\n\nSince such requests require authentication, a response such as the following should be considered an indicator of success:\n\n\n{\"detail\":\"Authentication credentials were not provided.\"}",
            "title": "Configuring DNS"
        },
        {
            "location": "/managing-workflow/configuring-dns/#configure-dns",
            "text": "The Deis Workflow controller and all applications deployed via Workflow are intended (by default) to be accessible as subdomains of the Workflow cluster's domain.  For example, assuming  example.com  were a cluster's domain:   The controller should be accessible at  deis.example.com  Applications should be accessible (by default) at  <application name>.example.com   Given that this is the case, the primary objective in configuring DNS is that traffic for all subdomains of a cluster's domain be directed to the cluster node(s) hosting the platform's router component, which is capable of directing traffic within the cluster to the correct endpoints.",
            "title": "Configure DNS"
        },
        {
            "location": "/managing-workflow/configuring-dns/#with-a-load-balancer",
            "text": "Generally, it is recommended that a  load balancer  be used to direct inbound traffic to one or more routers.  In such a case, configuring DNS is as simple as defining a wildcard record in DNS that points to the load balancer.  For example, assuming a domain of  example.com :   An  A  record enumerating each of your load balancer(s) IPs (i.e. DNS round-robining)  A  CNAME  record referencing an existing fully-qualified domain name for the load balancer  Per  AWS' own documentation , this is the recommended strategy when using AWS Elastic Load Balancers, as ELB IPs may change over time.     DNS for any applications using a \"custom domain\" (a fully-qualified domain name that is not a subdomain of the cluster's own domain) can be configured by creating a  CNAME  record that references the wildcard record described above.  Although it is dependent upon your distribution of Kubernetes and your underlying infrastructure, in many cases, the IP(s) or existing fully-qualified domain name of a load balancer can be determined directly using the  kubectl  tool:  $ kubectl --namespace=deis describe service deis-router | grep \"LoadBalancer Ingress\"\nLoadBalancer Ingress:   a493e4e58ea0511e5bb390686bc85da3-1558404688.us-west-2.elb.amazonaws.com  The  LoadBalancer Ingress  field typically describes an existing domain name or public IP(s).  Note that if Kubernetes is able to automatically provision a load balancer for you, it does so asynchronously.  If the command shown above is issued very soon after Workflow installation, the load balancer may not exist yet.",
            "title": "With a Load Balancer"
        },
        {
            "location": "/managing-workflow/configuring-dns/#without-a-load-balancer",
            "text": "On some platforms (Minikube, for instance), a load balancer is not an easy or practical thing to provision. In these cases, one can directly identify the public IP of a Kubernetes node that is hosting a router pod and use that information to configure the local  /etc/hosts  file.  Because wildcard entries do not work in a local  /etc/hosts  file, using this strategy may result in frequent editing of that file to add fully-qualified subdomains of a cluster for each application added to that cluster.  Because of this a more viable option may be to utilize the  xip.io  service.  In general, for any IP,  a.b.c.d , the fully-qualified domain name  any-subdomain.a.b.c.d.xip.io  will resolve to the IP  a.b.c.d .  This can be enormously useful.  To begin, find the node(s) hosting router instances using  kubectl :  $ kubectl --namespace=deis describe pod deis-router | grep Node\nNode:       ip-10-0-0-199.us-west-2.compute.internal/10.0.0.199\nNode:       ip-10-0-0-198.us-west-2.compute.internal/10.0.0.198  The command will display information for every router pod.  For each, a node name and IP are displayed in the  Node  field.  If the IPs appearing in these fields are public, any of these may be used to configure your local  /etc/hosts  file or may be used with  xip.io .  If the IPs shown are not public, further investigation may be needed.  You can list the IP addresses of a node using  kubectl :  $ kubectl describe node ip-10-0-0-199.us-west-2.compute.internal\n# ...\nAddresses:  10.0.0.199,10.0.0.199,54.218.85.175\n# ...  Here, the  Addresses  field lists all the node's IPs.  If any of them are public, again, they may be used to configure your local  /etc/hosts  file or may be used with  xip.io .",
            "title": "Without a Load Balancer"
        },
        {
            "location": "/managing-workflow/configuring-dns/#tutorial-configuring-dns-with-google-cloud-dns",
            "text": "In this section, we'll describe how to configure Google Cloud DNS for routing your domain name to your Deis cluster.  We'll assume the following in this section:   Your Deis router service has a load balancer in front of it.  The load balancer need not be cloud based, it just needs to provide a stable IP address or a stable domain name  You have the  mystuff.com  domain name registered with a registrar  Replace your domain name with  mystuff.com  in the instructions to follow  Your registrar lets you alter the nameservers for your domain name (most registrars do)   Here are the steps for configuring cloud DNS to route to your deis cluster:   Get the load balancer IP or domain name  If you are on Google Container Engine, you can run  kubectl get svc deis-router  and look for the  LoadBalancer Ingress  column to get the IP address  Create a new Cloud DNS Zone (on the console:  Networking  =>  Cloud DNS , then click on  Create Zone )  Name your zone, and set the DNS name to  mystuff.com.  (note the  .  at the end  Click on the  Create  button  Click on the  Add Record Set  button on the resulting page  If your load balancer provides a stable IP address, enter the following fields in the resulting form:  DNS Name :  *  Resource Record Type :  A  TTL : the DNS TTL of your choosing. If you're testing or you anticipate that you'll tear down and rebuild many deis clusters over time, we recommend a low TTL  IPv4 Address : The IP that you got in the very first step  Click the  Create  button  If your load balancer provides the stable domain name  lbdomain.com , enter the following fields in the resulting form:  DNS Name :  *  Resource Record Type :  CNAME  TTL : the DNS TTL of your choosing. If you're testing or you anticipate that you'll tear down and rebuild many deis clusters over time, we recommend a low TTL  Canonical name :  lbdomain.com.  (note the  .  a the end)  Click on the  Create  button  In your domain registrar, set the nameservers for your  mystuff.com  domain to the ones under the  data  column in the  NS  record on the same page. They'll often be something like the below (note the trailing  .  characters).   ns-cloud-b1.googledomains.com.\n  ns-cloud-b2.googledomains.com.\n  ns-cloud-b3.googledomains.com.\n  ns-cloud-b4.googledomains.com.  Note: If you ever have to re-create your deis cluster, simply go back to step 6.4 or 7.4 (depending on your load balancer) and change the IP address or domain name to the new value. You may have to wait for the TTL you set to expire.",
            "title": "Tutorial: Configuring DNS with Google Cloud DNS"
        },
        {
            "location": "/managing-workflow/configuring-dns/#testing",
            "text": "To test that traffic reaches its intended destination, a request can be\nsent to the Deis controller like so (do not forget the trailing slash!):  curl http://deis.example.com/v2/  Or:  curl http://deis.54.218.85.175.xip.io/v2/  Since such requests require authentication, a response such as the following should be considered an indicator of success:  {\"detail\":\"Authentication credentials were not provided.\"}",
            "title": "Testing"
        },
        {
            "location": "/managing-workflow/deploy-hooks/",
            "text": "Deploy Hooks\n\u00b6\n\n\nDeploy hooks allow an external service to receive a notification whenever a new version of your app\nis pushed to Workflow. It\u2019s useful to help keep the development team informed about deploys, while\nit can also be used to integrate different systems together.\n\n\nAfter one or more hooks are setup, hook output and errors appear in your application\u2019s logs:\n\n\n$ deis logs\n...\n2011-03-15T15:07:29-07:00 deis[api]: Deploy hook sent to http://deis.rocks\n\n\n\n\nDeploy hooks are a generic HTTP hook. An administrator can create and configure multiple deploy\nhooks by \ntuning the controller settings\n via the Helm chart.\n\n\nHTTP POST Hook\n\u00b6\n\n\nThe HTTP deploy hook performs an HTTP POST to a URL. The parameters included in the request are the\nsame as the variables available in the hook message: \napp\n, \nrelease\n, \nrelease_summary\n, \nsha\n and\n\nuser\n. See below for their descriptions:\n\n\napp=secure-woodland&release=v4&release_summary=gabrtv%20deployed%35b3726&sha=35b3726&user=gabrtv\n\n\n\n\nOptionally, if a deploy hook secret key is added to the controller through\n\ntuning the controller settings\n, a new \nAuthorization\n header will be\npresent in the POST request. The value of this header is computed as the \nHMAC\n hex digest of the\nrequest URL, using the secret as the key.\n\n\nIn order to authenticate that this request came from Workflow, use the secret key, the full URL and\nthe HMAC-SHA1 hashing algorithm to compute the signature. In Python, that would look something like\nthis:\n\n\nimport hashlib\nimport hmac\n\nhmac.new(\"my_secret_key\", \"http://deis.rocks?app=secure-woodland&release=v4&release_summary=gabrtv%20deployed%35b3726&sha=35b3726&user=gabrtv\", digestmod=hashlib.sha1).hexdigest()\n\n\n\n\nIf the value of the computed HMAC hex digest and the value in the \nAuthorization\n header are\nidentical, then the request came from Workflow.\n\n\n\n\nImportant\n\n\nWhen computing the signature, ensure that the URL parameters are in alphabetic order. This is\ncritical when computing the cryptographic signature as most web applications don't care about\nthe order of the HTTP parameters, but the cryptographic signature will not be the same.",
            "title": "Deploy Hooks"
        },
        {
            "location": "/managing-workflow/deploy-hooks/#deploy-hooks",
            "text": "Deploy hooks allow an external service to receive a notification whenever a new version of your app\nis pushed to Workflow. It\u2019s useful to help keep the development team informed about deploys, while\nit can also be used to integrate different systems together.  After one or more hooks are setup, hook output and errors appear in your application\u2019s logs:  $ deis logs\n...\n2011-03-15T15:07:29-07:00 deis[api]: Deploy hook sent to http://deis.rocks  Deploy hooks are a generic HTTP hook. An administrator can create and configure multiple deploy\nhooks by  tuning the controller settings  via the Helm chart.",
            "title": "Deploy Hooks"
        },
        {
            "location": "/managing-workflow/deploy-hooks/#http-post-hook",
            "text": "The HTTP deploy hook performs an HTTP POST to a URL. The parameters included in the request are the\nsame as the variables available in the hook message:  app ,  release ,  release_summary ,  sha  and user . See below for their descriptions:  app=secure-woodland&release=v4&release_summary=gabrtv%20deployed%35b3726&sha=35b3726&user=gabrtv  Optionally, if a deploy hook secret key is added to the controller through tuning the controller settings , a new  Authorization  header will be\npresent in the POST request. The value of this header is computed as the  HMAC  hex digest of the\nrequest URL, using the secret as the key.  In order to authenticate that this request came from Workflow, use the secret key, the full URL and\nthe HMAC-SHA1 hashing algorithm to compute the signature. In Python, that would look something like\nthis:  import hashlib\nimport hmac\n\nhmac.new(\"my_secret_key\", \"http://deis.rocks?app=secure-woodland&release=v4&release_summary=gabrtv%20deployed%35b3726&sha=35b3726&user=gabrtv\", digestmod=hashlib.sha1).hexdigest()  If the value of the computed HMAC hex digest and the value in the  Authorization  header are\nidentical, then the request came from Workflow.   Important  When computing the signature, ensure that the URL parameters are in alphabetic order. This is\ncritical when computing the cryptographic signature as most web applications don't care about\nthe order of the HTTP parameters, but the cryptographic signature will not be the same.",
            "title": "HTTP POST Hook"
        },
        {
            "location": "/managing-workflow/platform-logging/",
            "text": "Platform Logging\n\u00b6\n\n\nThe logging platform is made up of 2 components - \nFluentd\n and \nLogger\n.\n\n\nFluentd\n runs on every worker node of the cluster and is deployed as a \nDaemon Set\n. The Fluentd pods capture all of the stderr and stdout streams of every container running on the host (even those not hosted directly by kubernetes). Once the log message arrives in our \ncustom fluentd plugin\n we determine where the message originated.\n\n\nIf the message was from the \nWorkflow Controller\n or from an application deployed via workflow we send it to the logs topic on the local \nNSQD\n instance.\n\n\nIf the message is from the \nWorkflow Router\n we build an Influxdb compatible message and send it to the same NSQD instance but instead place the message on the metrics topic.\n\n\nLogger then acts as a consumer reading messages off of the NSQ logs topic storing those messages in a local Redis instance. When a user wants to retrieve log entries using the \ndeis logs\n command we make an HTTP request from Controller to Logger which then fetches the appropriate data from Redis.\n\n\nConfiguring Off Cluster Redis\n\u00b6\n\n\nEven though we provide a redis instance with the default Workflow install, it is recommended that operators use a third-party source like Elasticache or similar offering. This way your data is durable across upgrades or outages. If you have a third-party Redis installation you would like to use all you need to do is set the following values in your helm chart:\n\n\n\n\ndb = \"0\"\n\n\nhost = \"my.host.redis\"\n\n\nport = \"6379\"\n\n\npassword = \"\"\n\n\n\n\nThese can be changed by running \nhelm inspect values deis/workflow > values.yaml\n before using\n\nhelm install\n to complete the installation. To customize the redis credentials, edit \nvalues.yaml\n\nand modify the \nredis\n section of the file to tune these settings.\n\n\nDebugging Logger\n\u00b6\n\n\nIf the \ndeis logs\n command encounters an error it will return the following message:\n\n\nError: There are currently no log messages. Please check the following things:\n1) Logger and fluentd pods are running.\n2) The application is writing logs to the logger component by checking that an entry in the ring buffer was created: kubectl  --namespace=deis logs <logger pod>\n3) Making sure that the container logs were mounted properly into the fluentd pod: kubectl --namespace=deis exec <fluentd pod> ls /var/log/containers\n\n\n\n\nArchitecture Diagram\n\u00b6\n\n\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                        \n                        \u2502 Router \u2502                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                  \u2502 Logger \u2502\u25c0\u2500\u2500\u2500\u25b6\u2502Redis\u2502\n                            \u2502                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n                         Log file                       \u25b2                \n                            \u2502                           \u2502                \n                            \u25bc                           \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    logs/metrics   \u250c\u2500\u2500\u2500\u2500\u2500\u2510             \n\u2502App Logs\u2502\u2500\u2500Log File\u2500\u2500\u25b6\u2502 fluentd \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500topics\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 NSQ \u2502             \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2518             \n                                                        \u2502                \n                                                        \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                         \u2502                \n\u2502 HOST        \u2502                                         \u25bc                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2510                                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502                                 \u2502Telegraf\u2502            \n                  \u2502                                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502                                      \u2502                \n\u2502 HOST        \u2502   \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u2502                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u25b6\u2502 InfluxDB  \u2502\u25c0\u2500\u2500\u2500\u2500Wire \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Protocol                   \n                  \u2502          \u25b2                                    \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502          \u2502                                    \n\u2502 HOST        \u2502   \u2502          \u25bc                                    \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2518    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                               \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502 Grafana  \u2502                               \n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                               \n\n\n\n\nDefault Configuration\n\u00b6\n\n\nBy default the Fluentd pod can be configured to talk to numerous syslog endpoints. So for example it is possible to have Fluentd send log messages to both the Logger component and \nPapertrail\n. This allows production deployments of Deis to satisfy stringent logging requirements such as offsite backups of log data.\n\n\nConfiguring Fluentd to talk to multiple syslog endpoints means modifying the Fluentd daemonset\nmanifest. This means you will need to fetch the chart with \nhelm fetch deis/workflow --untar\n, then\nmodify \nworkflow/charts/fluentd/templates/logger-fluentd-daemon.yaml\n with the following:\n\n\nenv:\n- name: \"SYSLOG_HOST_1\"\n  value: \"my.syslog.host\"\n- name: \"SYSLOG_PORT_1\"\n  value: \"5144\"\n  ....\n- name: \"SYSLOG_HOST_N\"\n  value: \"my.syslog.host.n\"\n- name: \"SYSLOG_PORT_N\"\n  value: \"51333\"\n\n\n\n\nIf you only need to talk to 1 Syslog endpoint you can use the following configuration within your chart:\n\n\nenv:\n- name: \"SYSLOG_HOST\"\n  value: \"my.syslog.host\"\n- name: \"SYSLOG_PORT\"\n  value: \"5144\"\n\n\n\n\nThen run \nhelm install ./workflow --namespace deis\n to install the modified chart.\n\n\nCustomizing:\n\u00b6\n\n\nWe currently support logging information to Syslog, Elastic Search, and Sumo Logic. However, we will gladly accept pull requests that add support to other locations. For more information please visit the \nfluentd repository\n.\n\n\nCustom Fluentd Plugins\n\u00b6\n\n\nThat are many output plugins available for \nFluentd\n. But, we purposefully do not ship our Fluentd image with these installed. Instead, we provide a mechanism that allows users to install a plugin at startup time of the container and configure it. \n\n\nIf you would like to install a plugin you can set an environment variable such as the following: \nFLUENTD_PLUGIN_N=some-fluentd-plugin\n where N is a positive integer that is incremented for every plugin you wish to install. After you set this value you must then set the configuration text for the \nFILTER\n or \nSTORE\n plugin you are installing. You can do that by setting \nCUSTOM_STORE_N=configuration text\n where N is the corresponding index value of the plugin you just installed.\n\n\nHere is an example of setting the values directly in the manifest of the daemonset. \n\n\nenv:\n  - name: \"FLUENTD_PLUGIN_1\"\n    value: \"fluent-plugin-kafka\"\n  - name: \"CUSTOM_STORE_1\"\n    value: |\n      <store>\n        @type kafka \\\n        default_topic some_topic\n      </store>\n\n\n\n\nOr you could configure it using the \ndaemon_environment\n key in the \nvalues.yaml\n:\n\n\nfluentd:\n  daemon_environment:\n    FLUENTD_PLUGIN_1: \"fluent-plugin-kafka\"\n    CUSTOM_STORE_1: \"|\\n              <store>\\n                @type kafka\\n                        default_topic some_topic\\n                        </store>\"\n    INSTALL_BUILD_TOOLS: \"|\\n              true\"\n\n\n\n\nFor more information please see the \nCustom Plugins\n section of the README.",
            "title": "Platform Logging"
        },
        {
            "location": "/managing-workflow/platform-logging/#platform-logging",
            "text": "The logging platform is made up of 2 components -  Fluentd  and  Logger .  Fluentd  runs on every worker node of the cluster and is deployed as a  Daemon Set . The Fluentd pods capture all of the stderr and stdout streams of every container running on the host (even those not hosted directly by kubernetes). Once the log message arrives in our  custom fluentd plugin  we determine where the message originated.  If the message was from the  Workflow Controller  or from an application deployed via workflow we send it to the logs topic on the local  NSQD  instance.  If the message is from the  Workflow Router  we build an Influxdb compatible message and send it to the same NSQD instance but instead place the message on the metrics topic.  Logger then acts as a consumer reading messages off of the NSQ logs topic storing those messages in a local Redis instance. When a user wants to retrieve log entries using the  deis logs  command we make an HTTP request from Controller to Logger which then fetches the appropriate data from Redis.",
            "title": "Platform Logging"
        },
        {
            "location": "/managing-workflow/platform-logging/#configuring-off-cluster-redis",
            "text": "Even though we provide a redis instance with the default Workflow install, it is recommended that operators use a third-party source like Elasticache or similar offering. This way your data is durable across upgrades or outages. If you have a third-party Redis installation you would like to use all you need to do is set the following values in your helm chart:   db = \"0\"  host = \"my.host.redis\"  port = \"6379\"  password = \"\"   These can be changed by running  helm inspect values deis/workflow > values.yaml  before using helm install  to complete the installation. To customize the redis credentials, edit  values.yaml \nand modify the  redis  section of the file to tune these settings.",
            "title": "Configuring Off Cluster Redis"
        },
        {
            "location": "/managing-workflow/platform-logging/#debugging-logger",
            "text": "If the  deis logs  command encounters an error it will return the following message:  Error: There are currently no log messages. Please check the following things:\n1) Logger and fluentd pods are running.\n2) The application is writing logs to the logger component by checking that an entry in the ring buffer was created: kubectl  --namespace=deis logs <logger pod>\n3) Making sure that the container logs were mounted properly into the fluentd pod: kubectl --namespace=deis exec <fluentd pod> ls /var/log/containers",
            "title": "Debugging Logger"
        },
        {
            "location": "/managing-workflow/platform-logging/#architecture-diagram",
            "text": "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                        \n                        \u2502 Router \u2502                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                  \u2502 Logger \u2502\u25c0\u2500\u2500\u2500\u25b6\u2502Redis\u2502\n                            \u2502                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n                         Log file                       \u25b2                \n                            \u2502                           \u2502                \n                            \u25bc                           \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    logs/metrics   \u250c\u2500\u2500\u2500\u2500\u2500\u2510             \n\u2502App Logs\u2502\u2500\u2500Log File\u2500\u2500\u25b6\u2502 fluentd \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500topics\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 NSQ \u2502             \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2518             \n                                                        \u2502                \n                                                        \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                         \u2502                \n\u2502 HOST        \u2502                                         \u25bc                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2510                                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502                                 \u2502Telegraf\u2502            \n                  \u2502                                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502                                      \u2502                \n\u2502 HOST        \u2502   \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u2502                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u25b6\u2502 InfluxDB  \u2502\u25c0\u2500\u2500\u2500\u2500Wire \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Protocol                   \n                  \u2502          \u25b2                                    \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502          \u2502                                    \n\u2502 HOST        \u2502   \u2502          \u25bc                                    \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2518    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                               \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502 Grafana  \u2502                               \n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
            "title": "Architecture Diagram"
        },
        {
            "location": "/managing-workflow/platform-logging/#default-configuration",
            "text": "By default the Fluentd pod can be configured to talk to numerous syslog endpoints. So for example it is possible to have Fluentd send log messages to both the Logger component and  Papertrail . This allows production deployments of Deis to satisfy stringent logging requirements such as offsite backups of log data.  Configuring Fluentd to talk to multiple syslog endpoints means modifying the Fluentd daemonset\nmanifest. This means you will need to fetch the chart with  helm fetch deis/workflow --untar , then\nmodify  workflow/charts/fluentd/templates/logger-fluentd-daemon.yaml  with the following:  env:\n- name: \"SYSLOG_HOST_1\"\n  value: \"my.syslog.host\"\n- name: \"SYSLOG_PORT_1\"\n  value: \"5144\"\n  ....\n- name: \"SYSLOG_HOST_N\"\n  value: \"my.syslog.host.n\"\n- name: \"SYSLOG_PORT_N\"\n  value: \"51333\"  If you only need to talk to 1 Syslog endpoint you can use the following configuration within your chart:  env:\n- name: \"SYSLOG_HOST\"\n  value: \"my.syslog.host\"\n- name: \"SYSLOG_PORT\"\n  value: \"5144\"  Then run  helm install ./workflow --namespace deis  to install the modified chart.",
            "title": "Default Configuration"
        },
        {
            "location": "/managing-workflow/platform-logging/#customizing",
            "text": "We currently support logging information to Syslog, Elastic Search, and Sumo Logic. However, we will gladly accept pull requests that add support to other locations. For more information please visit the  fluentd repository .",
            "title": "Customizing:"
        },
        {
            "location": "/managing-workflow/platform-logging/#custom-fluentd-plugins",
            "text": "That are many output plugins available for  Fluentd . But, we purposefully do not ship our Fluentd image with these installed. Instead, we provide a mechanism that allows users to install a plugin at startup time of the container and configure it.   If you would like to install a plugin you can set an environment variable such as the following:  FLUENTD_PLUGIN_N=some-fluentd-plugin  where N is a positive integer that is incremented for every plugin you wish to install. After you set this value you must then set the configuration text for the  FILTER  or  STORE  plugin you are installing. You can do that by setting  CUSTOM_STORE_N=configuration text  where N is the corresponding index value of the plugin you just installed.  Here is an example of setting the values directly in the manifest of the daemonset.   env:\n  - name: \"FLUENTD_PLUGIN_1\"\n    value: \"fluent-plugin-kafka\"\n  - name: \"CUSTOM_STORE_1\"\n    value: |\n      <store>\n        @type kafka \\\n        default_topic some_topic\n      </store>  Or you could configure it using the  daemon_environment  key in the  values.yaml :  fluentd:\n  daemon_environment:\n    FLUENTD_PLUGIN_1: \"fluent-plugin-kafka\"\n    CUSTOM_STORE_1: \"|\\n              <store>\\n                @type kafka\\n                        default_topic some_topic\\n                        </store>\"\n    INSTALL_BUILD_TOOLS: \"|\\n              true\"  For more information please see the  Custom Plugins  section of the README.",
            "title": "Custom Fluentd Plugins"
        },
        {
            "location": "/managing-workflow/platform-monitoring/",
            "text": "Platform Monitoring\n\u00b6\n\n\nDescription\n\u00b6\n\n\nWe now include a monitoring stack for introspection on a running Kubernetes cluster. The stack includes 3 components:\n\n\n\n\nTelegraf\n - Metrics collection daemon written by team behind InfluxDB.\n\n\nInfluxDB\n - Time series database\n\n\nGrafana\n - Graphing tool for time series data\n\n\n\n\nArchitecture Diagram\n\u00b6\n\n\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                        \n                        \u2502 Router \u2502                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                  \u2502 Logger \u2502\u25c0\u2500\u2500\u2500\u25b6\u2502Redis\u2502\n                            \u2502                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n                        Log file                        \u25b2                \n                            \u2502                           \u2502                \n                            \u25bc                           \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    logs/metrics   \u250c\u2500\u2500\u2500\u2500\u2500\u2510             \n\u2502App Logs\u2502\u2500\u2500Log File\u2500\u2500\u25b6\u2502 fluentd \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500topics\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 NSQ \u2502             \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2518             \n                                                        \u2502                \n                                                        \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                         \u2502                \n\u2502 HOST        \u2502                                         \u25bc                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2510                                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502                                 \u2502Telegraf\u2502            \n                  \u2502                                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502                                      \u2502                \n\u2502 HOST        \u2502   \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u2502                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u25b6\u2502 InfluxDB  \u2502\u25c0\u2500\u2500\u2500\u2500Wire \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Protocol                   \n                  \u2502          \u25b2                                    \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502          \u2502                                    \n\u2502 HOST        \u2502   \u2502          \u25bc                                    \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2518    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                               \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502 Grafana  \u2502                               \n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                               \n\n\n\n\nGrafana\n\u00b6\n\n\nGrafana allows users to create custom dashboards that visualize the data captured to the running InfluxDB component. By default Grafana is exposed using a \nservice annotation\n through the router at the following URL: \nhttp://grafana.mydomain.com\n. The default login is \nadmin/admin\n. If you are interested in changing these values please see \nTuning Component Settings\n.\n\n\nGrafana will preload several dashboards to help operators get started with monitoring Kubernetes and Deis Workflow.\nThese dashboards are meant as starting points and don't include every item that might be desirable to monitor in a\nproduction installation.\n\n\nDeis Workflow monitoring by default does not write data to the host filesystem or to long-term storage. If the Grafana instance fails, modified dashboards are lost.\n\n\nProduction Configuration\n\u00b6\n\n\nA production install of Grafana should have the following configuration values changed if possible:\n\n\n\n\nChange the default username and password from \nadmin/admin\n. The value for the password is passed in plain text so it is best to set this value on the command line instead of checking it into version control.\n\n\nEnable persistence\n\n\nUse a supported external database such as mysql or postgres. You can find more information \nhere\n\n\n\n\nOn Cluster Persistence\n\u00b6\n\n\nEnabling persistence will allow your custom configuration to persist across pod restarts. This means that the default sqllite database (which stores things like sessions and user data) will not disappear if you upgrade the Workflow installation. \n\n\nIf you wish to have persistence for Grafana you can set \nenabled\n to \ntrue\n in the \nvalues.yaml\n file before running \nhelm install\n.\n\n\n grafana:\n   # Configure the following ONLY if you want persistence for on-cluster grafana\n   # GCP PDs and EBS volumes are supported only\n   persistence:\n     enabled: true # Set to true to enable persistence\n     size: 5Gi # PVC size\n\n\n\n\nOff Cluster Grafana\n\u00b6\n\n\nIf you wish to provide your own Grafana instance you can set \ngrafana_location\n in the \nvalues.yaml\n file before running \nhelm install\n.\n\n\nInfluxDB\n\u00b6\n\n\nInfluxDB writes data to the host disk; however, if the InfluxDB pod dies and comes back on another host, the data will not be recovered. The InfluxDB Admin UI is also exposed through the router allowing users to access the query engine by going to \ninflux.mydomain.com\n. You will need to configure where to find the \ninflux-api\n endpoint by clicking the \"gear\" icon at the top right and changing the host to \ninfluxapi.mydomain.com\n and port to \n80\n.\n\n\nOn Cluster Persistence\n\u00b6\n\n\nIf you wish to have persistence for InfluxDB you can set \nenabled\n to \ntrue\n in the \nvalues.yaml\n file before running \nhelm install\n.\n\n\n influxdb:\n   # Configure the following ONLY if you want persistence for on-cluster grafana\n   # GCP PDs and EBS volumes are supported only\n   persistence:\n     enabled: true # Set to true to enable persistence\n     size: 5Gi # PVC size\n\n\n\n\nOff Cluster Influxdb\n\u00b6\n\n\nTo use off-cluster Influx, please provide the following values in the \nvalues.yaml\n file before running \nhelm install\n.\n\n\n\n\ninfluxdb_location=off-cluster\n\n\nurl = \"http://my-influxhost.com:8086\"\n\n\ndatabase = \"metrics\"\n\n\nuser = \"InfluxUser\"\n\n\npassword = \"MysuperSecurePassword\"\n\n\n\n\nTelegraf\n\u00b6\n\n\nTelegraf is the metrics collection daemon used within the monitoring stack. It will collect and send the following metrics to InfluxDB:\n\n\n\n\nSystem level metrics such as CPU, Load Average, Memory, Disk, and Network stats\n\n\nContainer level metrics such as CPU and Memory\n\n\nKubernetes metrics such as API request latency, Pod Startup Latency, and number of running pods\n\n\n\n\nIt is possible to send these metrics to other endpoints besides InfluxDB. For more information please consult the following \nfile\n\n\nCustomizing the Monitoring Stack\n\u00b6\n\n\nTo learn more about customizing each of the above components please visit the \nTuning Component Settings\n section.",
            "title": "Platform Monitoring"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#platform-monitoring",
            "text": "",
            "title": "Platform Monitoring"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#description",
            "text": "We now include a monitoring stack for introspection on a running Kubernetes cluster. The stack includes 3 components:   Telegraf  - Metrics collection daemon written by team behind InfluxDB.  InfluxDB  - Time series database  Grafana  - Graphing tool for time series data",
            "title": "Description"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#architecture-diagram",
            "text": "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                        \n                        \u2502 Router \u2502                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                  \u2502 Logger \u2502\u25c0\u2500\u2500\u2500\u25b6\u2502Redis\u2502\n                            \u2502                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n                        Log file                        \u25b2                \n                            \u2502                           \u2502                \n                            \u25bc                           \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    logs/metrics   \u250c\u2500\u2500\u2500\u2500\u2500\u2510             \n\u2502App Logs\u2502\u2500\u2500Log File\u2500\u2500\u25b6\u2502 fluentd \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500topics\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 NSQ \u2502             \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2518             \n                                                        \u2502                \n                                                        \u2502                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                         \u2502                \n\u2502 HOST        \u2502                                         \u25bc                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2510                                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502                                 \u2502Telegraf\u2502            \n                  \u2502                                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502                                      \u2502                \n\u2502 HOST        \u2502   \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u2502                \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u25b6\u2502 InfluxDB  \u2502\u25c0\u2500\u2500\u2500\u2500Wire \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Protocol                   \n                  \u2502          \u25b2                                    \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502          \u2502                                    \n\u2502 HOST        \u2502   \u2502          \u25bc                                    \n\u2502  Telegraf   \u2502\u2500\u2500\u2500\u2518    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                               \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502 Grafana  \u2502                               \n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
            "title": "Architecture Diagram"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#grafana",
            "text": "Grafana allows users to create custom dashboards that visualize the data captured to the running InfluxDB component. By default Grafana is exposed using a  service annotation  through the router at the following URL:  http://grafana.mydomain.com . The default login is  admin/admin . If you are interested in changing these values please see  Tuning Component Settings .  Grafana will preload several dashboards to help operators get started with monitoring Kubernetes and Deis Workflow.\nThese dashboards are meant as starting points and don't include every item that might be desirable to monitor in a\nproduction installation.  Deis Workflow monitoring by default does not write data to the host filesystem or to long-term storage. If the Grafana instance fails, modified dashboards are lost.",
            "title": "Grafana"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#production-configuration",
            "text": "A production install of Grafana should have the following configuration values changed if possible:   Change the default username and password from  admin/admin . The value for the password is passed in plain text so it is best to set this value on the command line instead of checking it into version control.  Enable persistence  Use a supported external database such as mysql or postgres. You can find more information  here",
            "title": "Production Configuration"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#on-cluster-persistence",
            "text": "Enabling persistence will allow your custom configuration to persist across pod restarts. This means that the default sqllite database (which stores things like sessions and user data) will not disappear if you upgrade the Workflow installation.   If you wish to have persistence for Grafana you can set  enabled  to  true  in the  values.yaml  file before running  helm install .   grafana:\n   # Configure the following ONLY if you want persistence for on-cluster grafana\n   # GCP PDs and EBS volumes are supported only\n   persistence:\n     enabled: true # Set to true to enable persistence\n     size: 5Gi # PVC size",
            "title": "On Cluster Persistence"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#off-cluster-grafana",
            "text": "If you wish to provide your own Grafana instance you can set  grafana_location  in the  values.yaml  file before running  helm install .",
            "title": "Off Cluster Grafana"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#influxdb",
            "text": "InfluxDB writes data to the host disk; however, if the InfluxDB pod dies and comes back on another host, the data will not be recovered. The InfluxDB Admin UI is also exposed through the router allowing users to access the query engine by going to  influx.mydomain.com . You will need to configure where to find the  influx-api  endpoint by clicking the \"gear\" icon at the top right and changing the host to  influxapi.mydomain.com  and port to  80 .",
            "title": "InfluxDB"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#on-cluster-persistence_1",
            "text": "If you wish to have persistence for InfluxDB you can set  enabled  to  true  in the  values.yaml  file before running  helm install .   influxdb:\n   # Configure the following ONLY if you want persistence for on-cluster grafana\n   # GCP PDs and EBS volumes are supported only\n   persistence:\n     enabled: true # Set to true to enable persistence\n     size: 5Gi # PVC size",
            "title": "On Cluster Persistence"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#off-cluster-influxdb",
            "text": "To use off-cluster Influx, please provide the following values in the  values.yaml  file before running  helm install .   influxdb_location=off-cluster  url = \"http://my-influxhost.com:8086\"  database = \"metrics\"  user = \"InfluxUser\"  password = \"MysuperSecurePassword\"",
            "title": "Off Cluster Influxdb"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#telegraf",
            "text": "Telegraf is the metrics collection daemon used within the monitoring stack. It will collect and send the following metrics to InfluxDB:   System level metrics such as CPU, Load Average, Memory, Disk, and Network stats  Container level metrics such as CPU and Memory  Kubernetes metrics such as API request latency, Pod Startup Latency, and number of running pods   It is possible to send these metrics to other endpoints besides InfluxDB. For more information please consult the following  file",
            "title": "Telegraf"
        },
        {
            "location": "/managing-workflow/platform-monitoring/#customizing-the-monitoring-stack",
            "text": "To learn more about customizing each of the above components please visit the  Tuning Component Settings  section.",
            "title": "Customizing the Monitoring Stack"
        },
        {
            "location": "/managing-workflow/production-deployments/",
            "text": "Production Deployments\n\u00b6\n\n\nWhen readying a Workflow deployment for production workloads, there are some additional\nrecommendations.\n\n\nRunning Workflow without Minio\n\u00b6\n\n\nWorkflow makes use of \nMinio\n to provide storage for the \nRegistry\n, \nDatabase\n, and\n\nLogger\n components. Minio is provided out of the box as a central storage compartment, but it is\nnot resilient to cluster outages. If Minio is shut down, all data is lost.\n\n\nIn production, persistent storage can be achieved by running an external object store.\nFor users on AWS, GCE/GKE or Azure, the convenience of Amazon S3, Google GCS or Microsoft Azure Storage\nmakes the prospect of running a Minio-less Workflow cluster quite reasonable. For users who have restriction\non using external object storage using swift object storage can be an option.\n\n\nRunning a Workflow cluster without Minio provides several advantages:\n\n\n\n\nRemoval of state from the worker nodes\n\n\nReduced resource usage\n\n\nReduced complexity and operational burden of managing Workflow\n\n\n\n\nSee \nConfiguring Object Storage\n for details on removing this operational complexity.\n\n\nReview Security Considerations\n\u00b6\n\n\nThere are some additional security-related considerations when running Workflow in production.\nSee \nSecurity Considerations\n for details.\n\n\nRegistration is Admin-Only\n\u00b6\n\n\nBy default, registration with the Workflow controller is in \"admin_only\" mode. The first user\nto run a \ndeis register\n command becomes the initial \"admin\" user, and registrations after that\nare disallowed unless requested by an admin.\n\n\nPlease see the following documentation to learn about changing registration mode:\n\n\n\n\nCustomizing Controller\n\n\n\n\nDisable Grafana Signups\n\u00b6\n\n\nIt is also recommended to disable signups for the Grafana dashboards.\n\n\nPlease see the following documentation to learn about disabling Grafana signups:\n\n\n\n\nCustomizing Monitor\n\n\n\n\nEnable TLS\n\u00b6\n\n\nUsing TLS to encrypt traffic (including Workflow client traffic, such as login credentials) is\ncrucial. See \nPlatform SSL\n for the platform.\n\n\nScale Routers\n\u00b6\n\n\nIf all router pods in your cluster become unavailable then you will be unable to access the workflow API or\nany deployed applications. To reduce the potential of this happening it is recommended that you scale the\ndeis-router Deployment to run more than one router pod. This can be accomplished by running\n\nkubectl --namespace=deis scale --replicas=2 deployment/deis-router\n\n\nUsing on-cluster registry with CNI\n\u00b6\n\n\nIf you are using \nCNI\n for managing container network, you cannot use \nhostPort\n notation due to \nthis issue\n.\nIn this case you could enable CNI for \ndeis-registry-proxy\n by setting \nuse_cni\n variable to \ntrue\n inside \nvalues.yaml\n or by adding \n--set global.use_cni=true\n to \nhelm\n's args.\n\n\nRunning Workflow with RBAC\n\u00b6\n\n\nIf your cluster has \nRBAC\n amongst your \nauthorization\n modes (\n$ kubectl api-versions\n should contains \nrbac.authorization.k8s.io\n) it may be necessary to enable RBAC in Workflow.\nThis can be achieved by setting \nuse_rbac\n in the \nglobal\n section of \nvalues.yaml\n to \ntrue\n, or by adding \n--set=global.use_rbac=true\n to the \n$ helm install/upgrade\n command.\nRBAC support was announced in Kubernetes-1.5 and is enabled by default if:\n- your Kubernetes cluster is in GKE\n- your Kubernetes cluster built with \nkubeadm\n\n\nNote\n: helm may need to be given \nspecific permissions\n under RBAC if not already done.\n\n\nAttention\n: Azure ACS Kubernetes clusters are not RBAC-enabled for today due to lack in authentication strategy. Feel free to watch this \nPR\n for more details.",
            "title": "Production Deployments"
        },
        {
            "location": "/managing-workflow/production-deployments/#production-deployments",
            "text": "When readying a Workflow deployment for production workloads, there are some additional\nrecommendations.",
            "title": "Production Deployments"
        },
        {
            "location": "/managing-workflow/production-deployments/#running-workflow-without-minio",
            "text": "Workflow makes use of  Minio  to provide storage for the  Registry ,  Database , and Logger  components. Minio is provided out of the box as a central storage compartment, but it is\nnot resilient to cluster outages. If Minio is shut down, all data is lost.  In production, persistent storage can be achieved by running an external object store.\nFor users on AWS, GCE/GKE or Azure, the convenience of Amazon S3, Google GCS or Microsoft Azure Storage\nmakes the prospect of running a Minio-less Workflow cluster quite reasonable. For users who have restriction\non using external object storage using swift object storage can be an option.  Running a Workflow cluster without Minio provides several advantages:   Removal of state from the worker nodes  Reduced resource usage  Reduced complexity and operational burden of managing Workflow   See  Configuring Object Storage  for details on removing this operational complexity.",
            "title": "Running Workflow without Minio"
        },
        {
            "location": "/managing-workflow/production-deployments/#review-security-considerations",
            "text": "There are some additional security-related considerations when running Workflow in production.\nSee  Security Considerations  for details.",
            "title": "Review Security Considerations"
        },
        {
            "location": "/managing-workflow/production-deployments/#registration-is-admin-only",
            "text": "By default, registration with the Workflow controller is in \"admin_only\" mode. The first user\nto run a  deis register  command becomes the initial \"admin\" user, and registrations after that\nare disallowed unless requested by an admin.  Please see the following documentation to learn about changing registration mode:   Customizing Controller",
            "title": "Registration is Admin-Only"
        },
        {
            "location": "/managing-workflow/production-deployments/#disable-grafana-signups",
            "text": "It is also recommended to disable signups for the Grafana dashboards.  Please see the following documentation to learn about disabling Grafana signups:   Customizing Monitor",
            "title": "Disable Grafana Signups"
        },
        {
            "location": "/managing-workflow/production-deployments/#enable-tls",
            "text": "Using TLS to encrypt traffic (including Workflow client traffic, such as login credentials) is\ncrucial. See  Platform SSL  for the platform.",
            "title": "Enable TLS"
        },
        {
            "location": "/managing-workflow/production-deployments/#scale-routers",
            "text": "If all router pods in your cluster become unavailable then you will be unable to access the workflow API or\nany deployed applications. To reduce the potential of this happening it is recommended that you scale the\ndeis-router Deployment to run more than one router pod. This can be accomplished by running kubectl --namespace=deis scale --replicas=2 deployment/deis-router",
            "title": "Scale Routers"
        },
        {
            "location": "/managing-workflow/production-deployments/#using-on-cluster-registry-with-cni",
            "text": "If you are using  CNI  for managing container network, you cannot use  hostPort  notation due to  this issue .\nIn this case you could enable CNI for  deis-registry-proxy  by setting  use_cni  variable to  true  inside  values.yaml  or by adding  --set global.use_cni=true  to  helm 's args.",
            "title": "Using on-cluster registry with CNI"
        },
        {
            "location": "/managing-workflow/production-deployments/#running-workflow-with-rbac",
            "text": "If your cluster has  RBAC  amongst your  authorization  modes ( $ kubectl api-versions  should contains  rbac.authorization.k8s.io ) it may be necessary to enable RBAC in Workflow.\nThis can be achieved by setting  use_rbac  in the  global  section of  values.yaml  to  true , or by adding  --set=global.use_rbac=true  to the  $ helm install/upgrade  command.\nRBAC support was announced in Kubernetes-1.5 and is enabled by default if:\n- your Kubernetes cluster is in GKE\n- your Kubernetes cluster built with  kubeadm  Note : helm may need to be given  specific permissions  under RBAC if not already done.  Attention : Azure ACS Kubernetes clusters are not RBAC-enabled for today due to lack in authentication strategy. Feel free to watch this  PR  for more details.",
            "title": "Running Workflow with RBAC"
        },
        {
            "location": "/managing-workflow/security-considerations/",
            "text": "Security Considerations\n\u00b6\n\n\n\n\nImportant\n\n\nWorkflow is not suitable for multi-tenant environments or hosting untrusted code.\n\n\n\n\nA major goal of Workflow is to be operationally secure and trusted by operations engineers in every\ndeployed environment. There are, however, two notable security-related considerations to be aware\nof when deploying Workflow.\n\n\nApplication Runtime Segregation\n\u00b6\n\n\nUsers of Workflow often want to deploy their applications to separate environments. Typically,\nphysical network isolation isn\u2019t the goal, but rather segregation of application environments - if a\nregion goes haywire, it shouldn\u2019t affect applications that are running in a separate region.\n\n\nIn Workflow, deployed applications can be segregated by using the \ndeis tags\n command. This enables\nyou to tag machines in your cluster with arbitrary metadata, then configure your applications to be\nscheduled to machines which match the metadata.\n\n\nFor example, if some machines in your cluster are tagged with \nregion=us-west-1\n and some\nwith \nregion=us-east-1\n, you can configure an application to be deployed to us-west-1\nby using \ndeis tags set region=us-west-1\n. Workflow will pass this configuration\nalong to Kubernetes, which will schedule your application in different regions.\n\n\nSee \nIsolate the Application\n for more information.\n\n\nRunning Workflow on Public Clouds\n\u00b6\n\n\nIf you are running on a public cloud without security group features, you will have to set up\nsecurity groups yourself through either \niptables\n or a similar tool. The only ports on worker\nnodes that should be exposed to the public are:\n\n\n\n\n22: (optional) for remote SSH\n\n\n80: for the routers\n\n\n443: (optional) routers w/ SSL enabled\n\n\n2222: for the routers proxying TCP to the builder\n\n\n9090: for the routers' health check\n\n\n\n\nIP Whitelist\n\u00b6\n\n\nEnforcing a cluster-wide IP whitelist may be advisable for routers governing ingress to a cluster\nthat hosts applications intended for a limited audience-- e.g. applications for internal use within\nan organization. You can enforce cluster-wide IP whitelisting by enabling whitelists, then\nattaching an annotation to the router:\n\n\n$ kubectl --namespace=deis annotate deployments/deis-router router.deis.io/nginx.enforceWhitelists=true\n$ kubectl --namespace=deis annotate deployments/deis-router router.deis.io/nginx.defaultWhitelist=\"0.0.0.0/0\"\n\n\n\n\nThe format is the same for the controller whitelist but you need to specify the whitelist directly\nto the controller's service. For example:\n\n\n$ kubectl --namespace=deis annotate service deis-controller router.deis.io/whitelist=\"10.0.1.0/24,121.212.121.212\"\n\n\n\n\nAnd the same applies to applications. For example, to apply a whitelist to an application named\n\nexample\n:\n\n\n$ kubectl --namespace=example annotate service example-web router.deis.io/whitelist=\"10.0.1.0/24,121.212.121.212\"\n\n\n\n\nApplication level whitelisting can also be done using the Deis client. To add/remove/list addresses of an application whitelist, use \ndeis whitelist\n:\n\n\n$ deis whitelist:add 10.0.1.0/24,121.212.121.212 -a drafty-zaniness\nAdding 10.0.1.0/24,121.212.121.212 to drafty-zaniness whitelist...done\n\n$ deis whitelist:remove 121.212.121.212 -a drafty-zaniness\nRemoving 121.212.121.212 from drafty-zaniness whitelist... done\n\n$ deis whitelist -a drafty-zaniness\n=== drafty-zaniness Whitelisted Addresses\n10.0.1.0/24",
            "title": "Security Considerations"
        },
        {
            "location": "/managing-workflow/security-considerations/#security-considerations",
            "text": "Important  Workflow is not suitable for multi-tenant environments or hosting untrusted code.   A major goal of Workflow is to be operationally secure and trusted by operations engineers in every\ndeployed environment. There are, however, two notable security-related considerations to be aware\nof when deploying Workflow.",
            "title": "Security Considerations"
        },
        {
            "location": "/managing-workflow/security-considerations/#application-runtime-segregation",
            "text": "Users of Workflow often want to deploy their applications to separate environments. Typically,\nphysical network isolation isn\u2019t the goal, but rather segregation of application environments - if a\nregion goes haywire, it shouldn\u2019t affect applications that are running in a separate region.  In Workflow, deployed applications can be segregated by using the  deis tags  command. This enables\nyou to tag machines in your cluster with arbitrary metadata, then configure your applications to be\nscheduled to machines which match the metadata.  For example, if some machines in your cluster are tagged with  region=us-west-1  and some\nwith  region=us-east-1 , you can configure an application to be deployed to us-west-1\nby using  deis tags set region=us-west-1 . Workflow will pass this configuration\nalong to Kubernetes, which will schedule your application in different regions.  See  Isolate the Application  for more information.",
            "title": "Application Runtime Segregation"
        },
        {
            "location": "/managing-workflow/security-considerations/#running-workflow-on-public-clouds",
            "text": "If you are running on a public cloud without security group features, you will have to set up\nsecurity groups yourself through either  iptables  or a similar tool. The only ports on worker\nnodes that should be exposed to the public are:   22: (optional) for remote SSH  80: for the routers  443: (optional) routers w/ SSL enabled  2222: for the routers proxying TCP to the builder  9090: for the routers' health check",
            "title": "Running Workflow on Public Clouds"
        },
        {
            "location": "/managing-workflow/security-considerations/#ip-whitelist",
            "text": "Enforcing a cluster-wide IP whitelist may be advisable for routers governing ingress to a cluster\nthat hosts applications intended for a limited audience-- e.g. applications for internal use within\nan organization. You can enforce cluster-wide IP whitelisting by enabling whitelists, then\nattaching an annotation to the router:  $ kubectl --namespace=deis annotate deployments/deis-router router.deis.io/nginx.enforceWhitelists=true\n$ kubectl --namespace=deis annotate deployments/deis-router router.deis.io/nginx.defaultWhitelist=\"0.0.0.0/0\"  The format is the same for the controller whitelist but you need to specify the whitelist directly\nto the controller's service. For example:  $ kubectl --namespace=deis annotate service deis-controller router.deis.io/whitelist=\"10.0.1.0/24,121.212.121.212\"  And the same applies to applications. For example, to apply a whitelist to an application named example :  $ kubectl --namespace=example annotate service example-web router.deis.io/whitelist=\"10.0.1.0/24,121.212.121.212\"  Application level whitelisting can also be done using the Deis client. To add/remove/list addresses of an application whitelist, use  deis whitelist :  $ deis whitelist:add 10.0.1.0/24,121.212.121.212 -a drafty-zaniness\nAdding 10.0.1.0/24,121.212.121.212 to drafty-zaniness whitelist...done\n\n$ deis whitelist:remove 121.212.121.212 -a drafty-zaniness\nRemoving 121.212.121.212 from drafty-zaniness whitelist... done\n\n$ deis whitelist -a drafty-zaniness\n=== drafty-zaniness Whitelisted Addresses\n10.0.1.0/24",
            "title": "IP Whitelist"
        },
        {
            "location": "/managing-workflow/platform-ssl/",
            "text": "Platform SSL\n\u00b6\n\n\nSSL/TLS is the standard security technology for establishing an encrypted link between a web server\nand a browser. This link ensures that all data passed between the web server and browsers remain\nprivate and integral.\n\n\nTo enable SSL for the Workflow API and all managed apps, you can add an SSL certificate to the Deis Workflow router. You\nmust provide either an SSL certificate that was registered with a CA or \nyour own self-signed SSL\ncertificate\n.\n\n\nNote that the platform SSL certificate also functions as a default certificate for your apps that are deployed via\nWorkflow. If you would like to attach a specific certificate to an application and domain see \nApplication SSL\nCertificates\n.\n\n\nInstalling SSL on the Deis Router\n\u00b6\n\n\nTo terminate SSL connections on the Deis Router use \nkubectl\n to create a new Secret at a known name. The Deis Workflow\nrouter will automatically detect this secret and reconfigure itself appropriately.\n\n\nThe following criteria must be met:\n\n\n\n\nThe name of the secret must be \ndeis-router-platform-cert\n\n\nThe certificate's public key must be supplied as the value of the \ntls.crt\n key\n\n\nThe certificate's private key must be supplied as the value of the \ntls.key\n key\n\n\nBoth the certificate and private key must be base64 encoded\n\n\n\n\nIf your certificate has intermediate certs, append the intermediate signing certs to the bottom of the \ncert\n file\nbefore base64 encoding the combined certificates.\n\n\nPrepare your certificate and key files by encoding them in base64:\n\n\n$ cat certificate-file.crt\n-----BEGIN CERTIFICATE-----\n/ * your SSL certificate here */\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n/* any intermediate certificates */\n-----END CERTIFICATE-----\n$ cat certificate-file.crt | base64 -e\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi8gKiB5b3VyIFNTTCBjZXJ0aWZpY2F0ZSBoZXJlICovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi8qIGFueSBpbnRlcm1lZGlhdGUgY2VydGlmaWNhdGVzICovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n$ cat certificate.key\n-----BEGIN RSA PRIVATE KEY-----\n/* your unencrypted private key here */\n-----END RSA PRIVATE KEY-----\n$ cat certificate.key | base64 -e\nLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQovKiB5b3VyIHVuZW5jcnlwdGVkIHByaXZhdGUga2V5IGhlcmUgKi8KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n\n\n\n\nOpen your favorite text editor and create the Kubernetes manifest:\n\n\n$ $EDITOR deis-router-platform-cert.yaml\n\n\n\n\nThe format of the Secret manifest should match the below example. Make sure you paste the appropriate values for \ncert\n\nand \nkey\n from the above examples:\n\n\n$ cat deis-router-platform-cert.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: deis-router-platform-cert\n  namespace: deis\ntype: Opaque\ndata:\n  tls.crt: LS0...tCg==\n  tls.key: LS0...LQo=\n\n\n\n\nOnce you've created the \ndeis-router-platform-cert.yaml\n file, you can install the manifest with \nkubectl create -f\ndeis-router-platform-cert.yaml\n. The Deis Workflow router will automatically notice the new secret and update its\nconfiguration on-the-fly.\n\n\nInstalling SSL on a Load Balancer\n\u00b6\n\n\nMost cloud-based load balancers also support SSL termination in addition to passing traffic through to Deis Router.  Any\ncommunication inbound to the load balancer will be encrypted while the internal components of Deis Workflow will still\ncommunicate over HTTP. This offloads SSL processing to the cloud load balancer but also means that any\napplication-specific SSL certificates must \nalso\n be configured on the cloud load balancer.\n\n\nTo terminate SSL on the cloud load balancer you will need to modify the load balancer's listener settings:\n\n\n\n\nSwap the load balancer protocol on port 443 to use HTTPS instead of TCP\n\n\nSwap the backend protocol to use HTTP instead of TCP\n\n\nChange the destination backend port to match the port configured for HTTP, usually port 80\n\n\nInstall the certificate on the listener associated with port 443\n\n\n\n\nSee your vendor's specific instructions on installing SSL on your load balancer. For AWS, see their\ndocumentation on \ninstalling an SSL cert for load balancing\n.",
            "title": "Platform SSL"
        },
        {
            "location": "/managing-workflow/platform-ssl/#platform-ssl",
            "text": "SSL/TLS is the standard security technology for establishing an encrypted link between a web server\nand a browser. This link ensures that all data passed between the web server and browsers remain\nprivate and integral.  To enable SSL for the Workflow API and all managed apps, you can add an SSL certificate to the Deis Workflow router. You\nmust provide either an SSL certificate that was registered with a CA or  your own self-signed SSL\ncertificate .  Note that the platform SSL certificate also functions as a default certificate for your apps that are deployed via\nWorkflow. If you would like to attach a specific certificate to an application and domain see  Application SSL\nCertificates .",
            "title": "Platform SSL"
        },
        {
            "location": "/managing-workflow/platform-ssl/#installing-ssl-on-the-deis-router",
            "text": "To terminate SSL connections on the Deis Router use  kubectl  to create a new Secret at a known name. The Deis Workflow\nrouter will automatically detect this secret and reconfigure itself appropriately.  The following criteria must be met:   The name of the secret must be  deis-router-platform-cert  The certificate's public key must be supplied as the value of the  tls.crt  key  The certificate's private key must be supplied as the value of the  tls.key  key  Both the certificate and private key must be base64 encoded   If your certificate has intermediate certs, append the intermediate signing certs to the bottom of the  cert  file\nbefore base64 encoding the combined certificates.  Prepare your certificate and key files by encoding them in base64:  $ cat certificate-file.crt\n-----BEGIN CERTIFICATE-----\n/ * your SSL certificate here */\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n/* any intermediate certificates */\n-----END CERTIFICATE-----\n$ cat certificate-file.crt | base64 -e\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi8gKiB5b3VyIFNTTCBjZXJ0aWZpY2F0ZSBoZXJlICovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi8qIGFueSBpbnRlcm1lZGlhdGUgY2VydGlmaWNhdGVzICovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n$ cat certificate.key\n-----BEGIN RSA PRIVATE KEY-----\n/* your unencrypted private key here */\n-----END RSA PRIVATE KEY-----\n$ cat certificate.key | base64 -e\nLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQovKiB5b3VyIHVuZW5jcnlwdGVkIHByaXZhdGUga2V5IGhlcmUgKi8KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K  Open your favorite text editor and create the Kubernetes manifest:  $ $EDITOR deis-router-platform-cert.yaml  The format of the Secret manifest should match the below example. Make sure you paste the appropriate values for  cert \nand  key  from the above examples:  $ cat deis-router-platform-cert.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: deis-router-platform-cert\n  namespace: deis\ntype: Opaque\ndata:\n  tls.crt: LS0...tCg==\n  tls.key: LS0...LQo=  Once you've created the  deis-router-platform-cert.yaml  file, you can install the manifest with  kubectl create -f\ndeis-router-platform-cert.yaml . The Deis Workflow router will automatically notice the new secret and update its\nconfiguration on-the-fly.",
            "title": "Installing SSL on the Deis Router"
        },
        {
            "location": "/managing-workflow/platform-ssl/#installing-ssl-on-a-load-balancer",
            "text": "Most cloud-based load balancers also support SSL termination in addition to passing traffic through to Deis Router.  Any\ncommunication inbound to the load balancer will be encrypted while the internal components of Deis Workflow will still\ncommunicate over HTTP. This offloads SSL processing to the cloud load balancer but also means that any\napplication-specific SSL certificates must  also  be configured on the cloud load balancer.  To terminate SSL on the cloud load balancer you will need to modify the load balancer's listener settings:   Swap the load balancer protocol on port 443 to use HTTPS instead of TCP  Swap the backend protocol to use HTTP instead of TCP  Change the destination backend port to match the port configured for HTTP, usually port 80  Install the certificate on the listener associated with port 443   See your vendor's specific instructions on installing SSL on your load balancer. For AWS, see their\ndocumentation on  installing an SSL cert for load balancing .",
            "title": "Installing SSL on a Load Balancer"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/",
            "text": "Upgrading Workflow\n\u00b6\n\n\nDeis Workflow releases may be upgraded in-place with minimal downtime. This upgrade process requires:\n\n\n\n\nHelm version \n2.1.0 or newer\n\n\nConfigured Off-Cluster Storage\n\n\nA Kubernetes cluster with more than one node is required for the rolling upgrade of the deis-router (as it is a rolling upgrade with host ports)\n\n\n\n\nOff-Cluster Storage Required\n\u00b6\n\n\nA Workflow upgrade requires using off-cluster object storage, since the default\nin-cluster storage is ephemeral. \nUpgrading Workflow with the in-cluster default\nof \nMinio\n will result in data loss.\n\n\nSee \nConfiguring Object Storage\n to learn how to store your Workflow data off-cluster.\n\n\nUpgrade Process\n\u00b6\n\n\n\n\nNote\n\n\nIf upgrading from a \nHelm Classic\n install, you'll need to 'migrate' the cluster to a \nKubernetes Helm\n installation.  See \nWorkflow-Migration\n for steps.\n\n\n\n\nStep 1: Apply the Workflow upgrade\n\u00b6\n\n\nHelm will remove all components from the previous release. Traffic to applications deployed through\nWorkflow will continue to flow during the upgrade. No service interruptions should occur.\n\n\nIf Workflow is not configured to use off-cluster Postgres, the Workflow API will experience a brief\nperiod of downtime while the database recovers from backup.\n\n\nFirst, find the name of the release helm gave to your deployment with \nhelm ls\n, then run\n\n\n$ helm repo update\n$ helm upgrade <release-name> deis/workflow\n\n\n\n\nNote:\n If using off-cluster object storage on \ngcs\n and/or off-cluster registry using \ngcr\n and intending to upgrade from a pre-\nv2.10.0\n chart to \nv2.10.0\n or greater, the \nkey_json\n values will now need to be pre-base64-encoded.  Therefore, assuming the rest of the custom/off-cluster values are defined in the existing \nvalues.yaml\n used for previous installs, the following may be run:\n\n\n$ B64_KEY_JSON=\"$(cat ~/path/to/key.json | base64 -w 0)\"\n$ helm upgrade <release_name> deis/workflow -f values.yaml --set gcs.key_json=\"${B64_KEY_JSON}\",registry-token-refresher.gcr.key_json=\"${B64_KEY_JSON}\"\n\n\n\n\nAlternatively, simply replace the appropriate values in values.yaml and do without the \n--set\n\nparameter. Make sure to wrap it in single quotes as double quotes will give a parser error when\nupgrading.\n\n\nStep 2: Verify Upgrade\n\u00b6\n\n\nVerify that all components have started and passed their readiness checks:\n\n\n$ kubectl --namespace=deis get pods\nNAME                                     READY     STATUS    RESTARTS   AGE\ndeis-builder-2448122224-3cibz            1/1       Running   0          5m\ndeis-controller-1410285775-ipc34         1/1       Running   3          5m\ndeis-database-e7c5z                      1/1       Running   0          5m\ndeis-logger-cgjup                        1/1       Running   3          5m\ndeis-logger-fluentd-45h7j                1/1       Running   0          5m\ndeis-logger-fluentd-4z7lw                1/1       Running   0          5m\ndeis-logger-fluentd-k2wsw                1/1       Running   0          5m\ndeis-logger-fluentd-skdw4                1/1       Running   0          5m\ndeis-logger-redis-8nazu                  1/1       Running   0          5m\ndeis-monitor-grafana-tm266               1/1       Running   0          5m\ndeis-monitor-influxdb-ah8io              1/1       Running   0          5m\ndeis-monitor-telegraf-51zel              1/1       Running   1          5m\ndeis-monitor-telegraf-cdasg              1/1       Running   0          5m\ndeis-monitor-telegraf-hea6x              1/1       Running   0          5m\ndeis-monitor-telegraf-r7lsg              1/1       Running   0          5m\ndeis-nsqd-3yrg2                          1/1       Running   0          5m\ndeis-registry-1814324048-yomz5           1/1       Running   0          5m\ndeis-registry-proxy-4m3o4                1/1       Running   0          5m\ndeis-registry-proxy-no3r1                1/1       Running   0          5m\ndeis-registry-proxy-ou8is                1/1       Running   0          5m\ndeis-registry-proxy-zyajl                1/1       Running   0          5m\ndeis-router-1357759721-a3ard             1/1       Running   0          5m\ndeis-workflow-manager-2654760652-kitf9   1/1       Running   0          5m\n\n\n\n\nStep 3: Upgrade the Deis Client\n\u00b6\n\n\nUsers of Deis Workflow should now upgrade their deis client to avoid getting \nWARNING: Client and server API versions do not match. Please consider upgrading.\n warnings.\n\n\ncurl -sSL http://deis.io/deis-cli/install-v2.sh | bash && sudo mv deis $(which deis)",
            "title": "Upgrading Workflow"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#upgrading-workflow",
            "text": "Deis Workflow releases may be upgraded in-place with minimal downtime. This upgrade process requires:   Helm version  2.1.0 or newer  Configured Off-Cluster Storage  A Kubernetes cluster with more than one node is required for the rolling upgrade of the deis-router (as it is a rolling upgrade with host ports)",
            "title": "Upgrading Workflow"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#off-cluster-storage-required",
            "text": "A Workflow upgrade requires using off-cluster object storage, since the default\nin-cluster storage is ephemeral.  Upgrading Workflow with the in-cluster default\nof  Minio  will result in data loss.  See  Configuring Object Storage  to learn how to store your Workflow data off-cluster.",
            "title": "Off-Cluster Storage Required"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#upgrade-process",
            "text": "Note  If upgrading from a  Helm Classic  install, you'll need to 'migrate' the cluster to a  Kubernetes Helm  installation.  See  Workflow-Migration  for steps.",
            "title": "Upgrade Process"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#step-1-apply-the-workflow-upgrade",
            "text": "Helm will remove all components from the previous release. Traffic to applications deployed through\nWorkflow will continue to flow during the upgrade. No service interruptions should occur.  If Workflow is not configured to use off-cluster Postgres, the Workflow API will experience a brief\nperiod of downtime while the database recovers from backup.  First, find the name of the release helm gave to your deployment with  helm ls , then run  $ helm repo update\n$ helm upgrade <release-name> deis/workflow  Note:  If using off-cluster object storage on  gcs  and/or off-cluster registry using  gcr  and intending to upgrade from a pre- v2.10.0  chart to  v2.10.0  or greater, the  key_json  values will now need to be pre-base64-encoded.  Therefore, assuming the rest of the custom/off-cluster values are defined in the existing  values.yaml  used for previous installs, the following may be run:  $ B64_KEY_JSON=\"$(cat ~/path/to/key.json | base64 -w 0)\"\n$ helm upgrade <release_name> deis/workflow -f values.yaml --set gcs.key_json=\"${B64_KEY_JSON}\",registry-token-refresher.gcr.key_json=\"${B64_KEY_JSON}\"  Alternatively, simply replace the appropriate values in values.yaml and do without the  --set \nparameter. Make sure to wrap it in single quotes as double quotes will give a parser error when\nupgrading.",
            "title": "Step 1: Apply the Workflow upgrade"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#step-2-verify-upgrade",
            "text": "Verify that all components have started and passed their readiness checks:  $ kubectl --namespace=deis get pods\nNAME                                     READY     STATUS    RESTARTS   AGE\ndeis-builder-2448122224-3cibz            1/1       Running   0          5m\ndeis-controller-1410285775-ipc34         1/1       Running   3          5m\ndeis-database-e7c5z                      1/1       Running   0          5m\ndeis-logger-cgjup                        1/1       Running   3          5m\ndeis-logger-fluentd-45h7j                1/1       Running   0          5m\ndeis-logger-fluentd-4z7lw                1/1       Running   0          5m\ndeis-logger-fluentd-k2wsw                1/1       Running   0          5m\ndeis-logger-fluentd-skdw4                1/1       Running   0          5m\ndeis-logger-redis-8nazu                  1/1       Running   0          5m\ndeis-monitor-grafana-tm266               1/1       Running   0          5m\ndeis-monitor-influxdb-ah8io              1/1       Running   0          5m\ndeis-monitor-telegraf-51zel              1/1       Running   1          5m\ndeis-monitor-telegraf-cdasg              1/1       Running   0          5m\ndeis-monitor-telegraf-hea6x              1/1       Running   0          5m\ndeis-monitor-telegraf-r7lsg              1/1       Running   0          5m\ndeis-nsqd-3yrg2                          1/1       Running   0          5m\ndeis-registry-1814324048-yomz5           1/1       Running   0          5m\ndeis-registry-proxy-4m3o4                1/1       Running   0          5m\ndeis-registry-proxy-no3r1                1/1       Running   0          5m\ndeis-registry-proxy-ou8is                1/1       Running   0          5m\ndeis-registry-proxy-zyajl                1/1       Running   0          5m\ndeis-router-1357759721-a3ard             1/1       Running   0          5m\ndeis-workflow-manager-2654760652-kitf9   1/1       Running   0          5m",
            "title": "Step 2: Verify Upgrade"
        },
        {
            "location": "/managing-workflow/upgrading-workflow/#step-3-upgrade-the-deis-client",
            "text": "Users of Deis Workflow should now upgrade their deis client to avoid getting  WARNING: Client and server API versions do not match. Please consider upgrading.  warnings.  curl -sSL http://deis.io/deis-cli/install-v2.sh | bash && sudo mv deis $(which deis)",
            "title": "Step 3: Upgrade the Deis Client"
        },
        {
            "location": "/managing-workflow/extending-workflow/",
            "text": "Extending Workflow\n\u00b6\n\n\nDeis Workflow is an open source project which wouldn't be here without the amazing skill\nand enthusiasm of the community that has grown up around it. Several projects have blossomed\nwhich extend Workflow in various ways.\n\n\nThese links are to community-contributed extensions of Deis Workflow. Deis makes no\nguarantees about the functionality, security, or code contained within. As with any software,\nuse with caution in a production environment.\n\n\nWorkflow Community Projects\n\u00b6\n\n\n\n\nalea\n is a backing services manager for Deis Workflow, providing easy\n  access to PostgreSQL, Redis, MongoDB, and memcached.\n\n\ndeisdash\n is a web-based UI supporting many user and app actions without need of the\n  \ndeis\n command-line interface.\n\n\ndeis-cleanup\n is a Deis-friendly, configurable approach to purging unneeded Docker\n  containers and images.\n\n\ndeis-global-config-plugin\n stores config values in \nVault\n for easy use in Workflow apps.\n\n\ndeis-node\n is a controller API client for a browser in NodeJS.\n\n\ndeis-ui\n is the beginning of a full client-side dashboard that interfaces with the\n  controller API.\n\n\ndeis-workflow-aws\n simplifies installing Workflow on \nAmazon Web Services\n, backed by\n  S3 and using ECR as the container registry.\n\n\ndeis-workflow-gke\n simplifies installing Workflow on \nGoogle Container Engine\n, backed\n  by Google Cloud Storage and using gcr.io as the container registry.\n\n\ndeis-workflow-ruby\n contains Workflow controller API bindings for Ruby programming.\n\n\nheroku-to-deis\n migrates existing Heroku applications to the Workflow platform.\n\n\nkube-solo-osx\n creates a zero-to-Kubernetes development environment for macOS in under\n  two minutes, with specific support for installing Workflow with \nHelm\n or Helm Classic.\n\n\n\n\nAre we missing something? Please open a \ndocumentation pull request\n to add it.",
            "title": "Extending Workflow"
        },
        {
            "location": "/managing-workflow/extending-workflow/#extending-workflow",
            "text": "Deis Workflow is an open source project which wouldn't be here without the amazing skill\nand enthusiasm of the community that has grown up around it. Several projects have blossomed\nwhich extend Workflow in various ways.  These links are to community-contributed extensions of Deis Workflow. Deis makes no\nguarantees about the functionality, security, or code contained within. As with any software,\nuse with caution in a production environment.",
            "title": "Extending Workflow"
        },
        {
            "location": "/managing-workflow/extending-workflow/#workflow-community-projects",
            "text": "alea  is a backing services manager for Deis Workflow, providing easy\n  access to PostgreSQL, Redis, MongoDB, and memcached.  deisdash  is a web-based UI supporting many user and app actions without need of the\n   deis  command-line interface.  deis-cleanup  is a Deis-friendly, configurable approach to purging unneeded Docker\n  containers and images.  deis-global-config-plugin  stores config values in  Vault  for easy use in Workflow apps.  deis-node  is a controller API client for a browser in NodeJS.  deis-ui  is the beginning of a full client-side dashboard that interfaces with the\n  controller API.  deis-workflow-aws  simplifies installing Workflow on  Amazon Web Services , backed by\n  S3 and using ECR as the container registry.  deis-workflow-gke  simplifies installing Workflow on  Google Container Engine , backed\n  by Google Cloud Storage and using gcr.io as the container registry.  deis-workflow-ruby  contains Workflow controller API bindings for Ruby programming.  heroku-to-deis  migrates existing Heroku applications to the Workflow platform.  kube-solo-osx  creates a zero-to-Kubernetes development environment for macOS in under\n  two minutes, with specific support for installing Workflow with  Helm  or Helm Classic.   Are we missing something? Please open a  documentation pull request  to add it.",
            "title": "Workflow Community Projects"
        },
        {
            "location": "/troubleshooting/",
            "text": "Troubleshooting Workflow\n\u00b6\n\n\nCommon issues that users have run into when provisioning Workflow are detailed below.\n\n\nA Component Fails to Start\n\u00b6\n\n\nFor information on troubleshooting a failing component, see\n\nTroubleshooting with Kubectl\n.\n\n\nAn Application Fails to Start\n\u00b6\n\n\nFor information on troubleshooting application deployment issues, see\n\nTroubleshooting Applications\n.\n\n\nPermission denied (publickey)\n\u00b6\n\n\nThe most common problem for this issue is the user forgetting to run \ndeis keys:add\n or add their\nprivate key to their SSH agent. To do so, run \nssh-add ~/.ssh/id_rsa\n and try running\n\ngit push deis master\n again.\n\n\nIf you happen get a \nCould not open a connection to your authentication agent\n \nerror after trying to run \nssh-add\n command above, you may need to load the SSH\nagent environment variables issuing the \neval \"$(ssh-agent)\"\n command before.\n\n\nOther Issues\n\u00b6\n\n\nRunning into something not detailed here? Please \nopen an issue\n or hop into\n\n#community on Slack\n for help!",
            "title": "Troubleshooting Workflow"
        },
        {
            "location": "/troubleshooting/#troubleshooting-workflow",
            "text": "Common issues that users have run into when provisioning Workflow are detailed below.",
            "title": "Troubleshooting Workflow"
        },
        {
            "location": "/troubleshooting/#a-component-fails-to-start",
            "text": "For information on troubleshooting a failing component, see Troubleshooting with Kubectl .",
            "title": "A Component Fails to Start"
        },
        {
            "location": "/troubleshooting/#an-application-fails-to-start",
            "text": "For information on troubleshooting application deployment issues, see Troubleshooting Applications .",
            "title": "An Application Fails to Start"
        },
        {
            "location": "/troubleshooting/#permission-denied-publickey",
            "text": "The most common problem for this issue is the user forgetting to run  deis keys:add  or add their\nprivate key to their SSH agent. To do so, run  ssh-add ~/.ssh/id_rsa  and try running git push deis master  again.  If you happen get a  Could not open a connection to your authentication agent  \nerror after trying to run  ssh-add  command above, you may need to load the SSH\nagent environment variables issuing the  eval \"$(ssh-agent)\"  command before.",
            "title": "Permission denied (publickey)"
        },
        {
            "location": "/troubleshooting/#other-issues",
            "text": "Running into something not detailed here? Please  open an issue  or hop into #community on Slack  for help!",
            "title": "Other Issues"
        },
        {
            "location": "/troubleshooting/kubectl/",
            "text": "Troubleshooting using Kubectl\n\u00b6\n\n\nThis document describes how one can use \nkubectl\n to debug any issues with the cluster.\n\n\nDiving into the Components\n\u00b6\n\n\nUsing \nkubectl\n, one can inspect the cluster's current state. When Workflow is installed\nwith \nhelm\n, Workflow is installed into the \ndeis\n namespace. To inspect if Workflow is\nrunning, run:\n\n\n$ kubectl --namespace=deis get pods\nNAME                          READY     STATUS              RESTARTS   AGE\ndeis-builder-gqum7            0/1       ContainerCreating   0          4s\ndeis-controller-h6lk6         0/1       ContainerCreating   0          4s\ndeis-database-56v39           0/1       ContainerCreating   0          4s\ndeis-logger-fluentd-xihr1     0/1       Pending             0          2s\ndeis-logger-grupg             0/1       ContainerCreating   0          3s\ndeis-minio-c2exb              0/1       Pending             0          3s\ndeis-monitor-grafana-9ccur    0/1       Pending             0          3s\ndeis-monitor-influxdb-f9ftm   0/1       Pending             0          3s\ndeis-monitor-stdout-novxs     0/1       Pending             0          3s\ndeis-monitor-telegraf-dc3y3   0/1       Pending             0          2s\ndeis-registry-5bor6           0/1       Pending             0          3s\ndeis-router-r02sd             0/1       Pending             0          2s\ndeis-workflow-manager-hizv6   0/1       Pending             0          2s\n\n\n\n\n\n\nTip\n\n\nTo save precious keystrokes, alias \nkubectl --namespace=deis\n to \nkd\n so it is easier to type\nin the future.\n\n\n\n\nTo fetch the logs of a specific component, use \nkubectl logs\n:\n\n\n$ kubectl --namespace=deis logs deis-controller-h6lk6\nsystem information:\nDjango Version: 1.9.6\nPython 3.5.1\naddgroup: gid '0' in use\nDjango checks:\nSystem check identified no issues (2 silenced).\n[...]\n\n\n\n\nTo dive into a running container to inspect its environment, use \nkubectl exec\n:\n\n\n$ kubectl --namespace=deis exec -it deis-database-56v39 gosu postgres psql\npsql (9.4.7)\nType \"help\" for help.\n\npostgres=# \\l\n                                                List of databases\n               Name               |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges\n----------------------------------+----------+----------+------------+------------+-----------------------\n V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc | postgres | UTF8     | en_US.utf8 | en_US.utf8 |\n postgres                         | postgres | UTF8     | en_US.utf8 | en_US.utf8 |\n template0                        | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                                  |          |          |            |            | postgres=CTc/postgres\n template1                        | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                                  |          |          |            |            | postgres=CTc/postgres\n(4 rows)\npostgres=# \\connect V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\nYou are now connected to database \"V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\" as user \"postgres\".\nV7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc=# \\dt\n                                 List of relations\n Schema |              Name              | Type  |              Owner\n--------+--------------------------------+-------+----------------------------------\n public | api_app                        | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_build                      | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_certificate                | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_config                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_domain                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_key                        | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_push                       | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_release                    | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | auth_group                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n --More--\n V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc=# SELECT COUNT(*) from api_app;\n count\n-------\n     0\n(1 row)",
            "title": "Troubleshooting using Kubectl"
        },
        {
            "location": "/troubleshooting/kubectl/#troubleshooting-using-kubectl",
            "text": "This document describes how one can use  kubectl  to debug any issues with the cluster.",
            "title": "Troubleshooting using Kubectl"
        },
        {
            "location": "/troubleshooting/kubectl/#diving-into-the-components",
            "text": "Using  kubectl , one can inspect the cluster's current state. When Workflow is installed\nwith  helm , Workflow is installed into the  deis  namespace. To inspect if Workflow is\nrunning, run:  $ kubectl --namespace=deis get pods\nNAME                          READY     STATUS              RESTARTS   AGE\ndeis-builder-gqum7            0/1       ContainerCreating   0          4s\ndeis-controller-h6lk6         0/1       ContainerCreating   0          4s\ndeis-database-56v39           0/1       ContainerCreating   0          4s\ndeis-logger-fluentd-xihr1     0/1       Pending             0          2s\ndeis-logger-grupg             0/1       ContainerCreating   0          3s\ndeis-minio-c2exb              0/1       Pending             0          3s\ndeis-monitor-grafana-9ccur    0/1       Pending             0          3s\ndeis-monitor-influxdb-f9ftm   0/1       Pending             0          3s\ndeis-monitor-stdout-novxs     0/1       Pending             0          3s\ndeis-monitor-telegraf-dc3y3   0/1       Pending             0          2s\ndeis-registry-5bor6           0/1       Pending             0          3s\ndeis-router-r02sd             0/1       Pending             0          2s\ndeis-workflow-manager-hizv6   0/1       Pending             0          2s   Tip  To save precious keystrokes, alias  kubectl --namespace=deis  to  kd  so it is easier to type\nin the future.   To fetch the logs of a specific component, use  kubectl logs :  $ kubectl --namespace=deis logs deis-controller-h6lk6\nsystem information:\nDjango Version: 1.9.6\nPython 3.5.1\naddgroup: gid '0' in use\nDjango checks:\nSystem check identified no issues (2 silenced).\n[...]  To dive into a running container to inspect its environment, use  kubectl exec :  $ kubectl --namespace=deis exec -it deis-database-56v39 gosu postgres psql\npsql (9.4.7)\nType \"help\" for help.\n\npostgres=# \\l\n                                                List of databases\n               Name               |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges\n----------------------------------+----------+----------+------------+------------+-----------------------\n V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc | postgres | UTF8     | en_US.utf8 | en_US.utf8 |\n postgres                         | postgres | UTF8     | en_US.utf8 | en_US.utf8 |\n template0                        | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                                  |          |          |            |            | postgres=CTc/postgres\n template1                        | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                                  |          |          |            |            | postgres=CTc/postgres\n(4 rows)\npostgres=# \\connect V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\nYou are now connected to database \"V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\" as user \"postgres\".\nV7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc=# \\dt\n                                 List of relations\n Schema |              Name              | Type  |              Owner\n--------+--------------------------------+-------+----------------------------------\n public | api_app                        | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_build                      | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_certificate                | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_config                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_domain                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_key                        | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_push                       | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | api_release                    | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n public | auth_group                     | table | V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc\n --More--\n V7wckOHIAn3MZ7mO5du4q5IRq7yib1Oc=# SELECT COUNT(*) from api_app;\n count\n-------\n     0\n(1 row)",
            "title": "Diving into the Components"
        },
        {
            "location": "/troubleshooting/applications/",
            "text": "Troubleshooting Applications\n\u00b6\n\n\nThis document describes how one can troubleshoot common issues when deploying or debugging an\napplication that fails to start or deploy.\n\n\nApplication has a Dockerfile, but a Buildpack Deployment Occurs\n\u00b6\n\n\nWhen you deploy an application to Workflow using \ngit push deis master\n and the \nBuilder\n\nattempts to deploy using the Buildpack workflow, check the following steps:\n\n\n\n\nAre you deploying the correct project?\n\n\nAre you pushing the correct git branch (\ngit push deis <branch>\n)?\n\n\nIs the \nDockerfile\n in the project's root directory?\n\n\nHave you committed the \nDockerfile\n to the project?\n\n\n\n\nApplication was Deployed, but is Failing to Start\n\u00b6\n\n\nIf you deployed your application but it is failing to start, you can use \ndeis logs\n to check\nwhy the application fails to boot. Sometimes, the application container may fail to boot without\nlogging any information about the error. This typically occurs when the healthcheck configured for\nthe application fails. In this case, you can start by\n\ntroubleshooting using kubectl\n. You can inspect the application's current\nstate by examining the pod deployed in the application's namespace. To do that, run\n\n\n$ kubectl --namespace=myapp get pods\nNAME                          READY     STATUS                RESTARTS   AGE\nmyapp-cmd-1585713350-3brbo    0/1       CrashLoopBackOff      2          43s\n\n\n\n\nWe can then describe the pod and determine why it is failing to boot:\n\n\nEvents:\n  FirstSeen     LastSeen        Count   From                            SubobjectPath                           Type            Reason          Message\n  ---------     --------        -----   ----                            -------------                           --------        ------          -------\n  43s           43s             1       {default-scheduler }                                                    Normal          Scheduled       Successfully assigned myapp-cmd-1585713350-3brbo to kubernetes-node-1\n  41s           41s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Normal          Created         Created container with docker id b86bd851a61f\n  41s           41s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Normal          Started         Started container with docker id b86bd851a61f\n  37s           35s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Warning         Unhealthy       Liveness probe failed: Get http://10.246.39.13:8000/healthz: dial tcp 10.246.39.13:8000: getsockopt: connection refused\n\n\n\n\nIn this instance, we set the healthcheck initial delay timeout for the application at 1 second,\nwhich is too aggressive. The application needs some time to set up the API server after the\ncontainer has booted. By increasing the healthcheck initial delay timeout to 10 seconds, the\napplication is able to boot and is responding correctly.\n\n\nSee \nCustom Health Checks\n for more information on how to customize the application's\nhealth checks to better suit the application's needs.",
            "title": "Troubleshooting Applications"
        },
        {
            "location": "/troubleshooting/applications/#troubleshooting-applications",
            "text": "This document describes how one can troubleshoot common issues when deploying or debugging an\napplication that fails to start or deploy.",
            "title": "Troubleshooting Applications"
        },
        {
            "location": "/troubleshooting/applications/#application-has-a-dockerfile-but-a-buildpack-deployment-occurs",
            "text": "When you deploy an application to Workflow using  git push deis master  and the  Builder \nattempts to deploy using the Buildpack workflow, check the following steps:   Are you deploying the correct project?  Are you pushing the correct git branch ( git push deis <branch> )?  Is the  Dockerfile  in the project's root directory?  Have you committed the  Dockerfile  to the project?",
            "title": "Application has a Dockerfile, but a Buildpack Deployment Occurs"
        },
        {
            "location": "/troubleshooting/applications/#application-was-deployed-but-is-failing-to-start",
            "text": "If you deployed your application but it is failing to start, you can use  deis logs  to check\nwhy the application fails to boot. Sometimes, the application container may fail to boot without\nlogging any information about the error. This typically occurs when the healthcheck configured for\nthe application fails. In this case, you can start by troubleshooting using kubectl . You can inspect the application's current\nstate by examining the pod deployed in the application's namespace. To do that, run  $ kubectl --namespace=myapp get pods\nNAME                          READY     STATUS                RESTARTS   AGE\nmyapp-cmd-1585713350-3brbo    0/1       CrashLoopBackOff      2          43s  We can then describe the pod and determine why it is failing to boot:  Events:\n  FirstSeen     LastSeen        Count   From                            SubobjectPath                           Type            Reason          Message\n  ---------     --------        -----   ----                            -------------                           --------        ------          -------\n  43s           43s             1       {default-scheduler }                                                    Normal          Scheduled       Successfully assigned myapp-cmd-1585713350-3brbo to kubernetes-node-1\n  41s           41s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Normal          Created         Created container with docker id b86bd851a61f\n  41s           41s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Normal          Started         Started container with docker id b86bd851a61f\n  37s           35s             1       {kubelet kubernetes-node-1}     spec.containers{myapp-cmd}              Warning         Unhealthy       Liveness probe failed: Get http://10.246.39.13:8000/healthz: dial tcp 10.246.39.13:8000: getsockopt: connection refused  In this instance, we set the healthcheck initial delay timeout for the application at 1 second,\nwhich is too aggressive. The application needs some time to set up the API server after the\ncontainer has booted. By increasing the healthcheck initial delay timeout to 10 seconds, the\napplication is able to boot and is responding correctly.  See  Custom Health Checks  for more information on how to customize the application's\nhealth checks to better suit the application's needs.",
            "title": "Application was Deployed, but is Failing to Start"
        },
        {
            "location": "/roadmap/planning-process/",
            "text": "Planning Process\n\u00b6\n\n\nDeis features a lightweight process that emphasizes openness and ensures every community member can be an integral part of planning for the future.\n\n\nThe Role of Maintainers\n\u00b6\n\n\nMaintainers\n lead the Deis projects. Their duties include proposing the Roadmap, reviewing and integrating contributions and maintaining the vision of the project.\n\n\nOpen Roadmap\n\u00b6\n\n\nThe \nDeis Roadmap\n is a community document. While Maintainers propose the Roadmap, it gets discussed and refined in Release Planning Meetings.\n\n\nContributing to the Roadmap\n\u00b6\n\n\nProposals and issues can be opened by anyone. Every member of the \ncommunity\n is welcome to participate in the discussion by providing feedback and/or offering counter-proposals.\n\n\nRelease Milestones\n\u00b6\n\n\nThe Roadmap gets delivered progressively via the \nRelease Schedule\n.  Releases are defined during Release Planning Meetings and managed using GitHub Milestones which track specific deliverables and work-in-progress.\n\n\nRelease Planning Meetings\n\u00b6\n\n\nMajor decisions affecting the Roadmap are discussed during Release Planning Meetings on the first Thursday of each month, aligned with the \nRelease Schedule\n.\n\n\nRelease Planning Meetings are open to the public with access coordinated via the \nDeis #community Slack channel\n.\nNotes from past meetings are below, along with links to a recording of the entire meeting on YouTube.\n\n\nCredits\n\u00b6\n\n\nThanks to \nAmy Lindburg\n and our friends at \nDocker\n for their inspiration.",
            "title": "Planning Process"
        },
        {
            "location": "/roadmap/planning-process/#planning-process",
            "text": "Deis features a lightweight process that emphasizes openness and ensures every community member can be an integral part of planning for the future.",
            "title": "Planning Process"
        },
        {
            "location": "/roadmap/planning-process/#the-role-of-maintainers",
            "text": "Maintainers  lead the Deis projects. Their duties include proposing the Roadmap, reviewing and integrating contributions and maintaining the vision of the project.",
            "title": "The Role of Maintainers"
        },
        {
            "location": "/roadmap/planning-process/#open-roadmap",
            "text": "The  Deis Roadmap  is a community document. While Maintainers propose the Roadmap, it gets discussed and refined in Release Planning Meetings.",
            "title": "Open Roadmap"
        },
        {
            "location": "/roadmap/planning-process/#contributing-to-the-roadmap",
            "text": "Proposals and issues can be opened by anyone. Every member of the  community  is welcome to participate in the discussion by providing feedback and/or offering counter-proposals.",
            "title": "Contributing to the Roadmap"
        },
        {
            "location": "/roadmap/planning-process/#release-milestones",
            "text": "The Roadmap gets delivered progressively via the  Release Schedule .  Releases are defined during Release Planning Meetings and managed using GitHub Milestones which track specific deliverables and work-in-progress.",
            "title": "Release Milestones"
        },
        {
            "location": "/roadmap/planning-process/#release-planning-meetings",
            "text": "Major decisions affecting the Roadmap are discussed during Release Planning Meetings on the first Thursday of each month, aligned with the  Release Schedule .  Release Planning Meetings are open to the public with access coordinated via the  Deis #community Slack channel .\nNotes from past meetings are below, along with links to a recording of the entire meeting on YouTube.",
            "title": "Release Planning Meetings"
        },
        {
            "location": "/roadmap/planning-process/#credits",
            "text": "Thanks to  Amy Lindburg  and our friends at  Docker  for their inspiration.",
            "title": "Credits"
        },
        {
            "location": "/roadmap/roadmap/",
            "text": "Deis Workflow Roadmap\n\u00b6\n\n\nThe Deis Workflow Roadmap is a community document created as part of the open\n\nPlanning Process\n. Each roadmap item describes a high-level capability or\ngrouping of features that are deemed important to the future of Deis.\n\n\nGiven the project's rapid \nRelease Schedule\n, roadmap\nitems are designed to provide a sense of direction over many releases.\n\n\nInteractive \ndeis run /bin/bash\n\u00b6\n\n\nProvide the ability for developers to launch an interactive terminal session in\ntheir application environment.\n\n\nRelated issues:\n\n\n\n\nhttps://github.com/deisthree/workflow-cli/issues/98\n\n\nhttps://github.com/deisthree/deis/issues/117\n\n\n\n\nLog Streaming\n\u00b6\n\n\nStream application logs via \ndeis logs -f\n \nhttps://github.com/deisthree/deis/issues/465\n\n\nTeams and Permissions\n\u00b6\n\n\nTeams and Permissions represents a more flexible permissions model to allow\nmore nuanced control to applications, capabilities and resources on the\nplatform. There have been a number of proposals in this area which need to be\nreconciled for Deis Workflow before we begin implementation.\n\n\nRelated issues:\n\n\n\n\nDeploy Keys: \nhttps://github.com/deisthree/deis/issues/3875\n\n\nTeams: \nhttps://github.com/deisthree/deis/issues/4173\n\n\nFine grained permissions: \nhttps://github.com/deisthree/deis/issues/4150\n\n\nAdmins create apps only: \nhttps://github.com/deisthree/deis/issues/4052\n\n\nAdmin Certificate Permissions: \nhttps://github.com/deisthree/deis/issues/4576#issuecomment-170987223\n\n\n\n\nMonitoring\n\u00b6\n\n\n\n\n Define and deliver alerts with Kapacitor: \nhttps://github.com/deisthree/monitor/issues/44\n\n\n\n\nWorkflow Addons/Services\n\u00b6\n\n\nDevelopers should be able to quickly and easily provision application\ndependencies using a services or addon abstraction.\n\nhttps://github.com/deisthree/deis/issues/231\n\n\nInbound/Outbound Webhooks\n\u00b6\n\n\nDeis Workflow should be able to send and receive webhooks from external\nsystems. Facilitating integration with third party services like GitHub,\nGitlab, Slack, Hipchat.\n\n\n\n\n Send webhook on platform events: \nhttps://github.com/deisthree/deis/issues/1486\n (Workflow v2.10)",
            "title": "Roadmap"
        },
        {
            "location": "/roadmap/roadmap/#deis-workflow-roadmap",
            "text": "The Deis Workflow Roadmap is a community document created as part of the open Planning Process . Each roadmap item describes a high-level capability or\ngrouping of features that are deemed important to the future of Deis.  Given the project's rapid  Release Schedule , roadmap\nitems are designed to provide a sense of direction over many releases.",
            "title": "Deis Workflow Roadmap"
        },
        {
            "location": "/roadmap/roadmap/#interactive-deis-run-binbash",
            "text": "Provide the ability for developers to launch an interactive terminal session in\ntheir application environment.  Related issues:   https://github.com/deisthree/workflow-cli/issues/98  https://github.com/deisthree/deis/issues/117",
            "title": "Interactive deis run /bin/bash"
        },
        {
            "location": "/roadmap/roadmap/#log-streaming",
            "text": "Stream application logs via  deis logs -f   https://github.com/deisthree/deis/issues/465",
            "title": "Log Streaming"
        },
        {
            "location": "/roadmap/roadmap/#teams-and-permissions",
            "text": "Teams and Permissions represents a more flexible permissions model to allow\nmore nuanced control to applications, capabilities and resources on the\nplatform. There have been a number of proposals in this area which need to be\nreconciled for Deis Workflow before we begin implementation.  Related issues:   Deploy Keys:  https://github.com/deisthree/deis/issues/3875  Teams:  https://github.com/deisthree/deis/issues/4173  Fine grained permissions:  https://github.com/deisthree/deis/issues/4150  Admins create apps only:  https://github.com/deisthree/deis/issues/4052  Admin Certificate Permissions:  https://github.com/deisthree/deis/issues/4576#issuecomment-170987223",
            "title": "Teams and Permissions"
        },
        {
            "location": "/roadmap/roadmap/#monitoring",
            "text": "Define and deliver alerts with Kapacitor:  https://github.com/deisthree/monitor/issues/44",
            "title": "Monitoring"
        },
        {
            "location": "/roadmap/roadmap/#workflow-addonsservices",
            "text": "Developers should be able to quickly and easily provision application\ndependencies using a services or addon abstraction. https://github.com/deisthree/deis/issues/231",
            "title": "Workflow Addons/Services"
        },
        {
            "location": "/roadmap/roadmap/#inboundoutbound-webhooks",
            "text": "Deis Workflow should be able to send and receive webhooks from external\nsystems. Facilitating integration with third party services like GitHub,\nGitlab, Slack, Hipchat.    Send webhook on platform events:  https://github.com/deisthree/deis/issues/1486  (Workflow v2.10)",
            "title": "Inbound/Outbound Webhooks"
        },
        {
            "location": "/roadmap/releases/",
            "text": "Releases\n\u00b6\n\n\nDeis uses a \ncontinuous delivery\n approach for creating releases. Every merged commit that passes\ntesting results in a deliverable that can be given a \nsemantic version\n tag and shipped.\n\n\nThe master \ngit\n branch of a project should always work. Only changes considered ready to be\nreleased publicly are merged.\n\n\nComponents Release as Needed\n\u00b6\n\n\nDeis components release new versions as often as needed. Fixing a high priority bug requires the\nproject maintainer to create a new patch release. Merging a backward-compatible feature implies\na minor release.\n\n\nBy releasing often, each component release becomes a safe and routine event. This makes it faster\nand easier for users to obtain specific fixes. Continuous delivery also reduces the work\nnecessary to release a product such as Deis Workflow, which integrates several components.\n\n\n\"Components\" applies not just to Deis Workflow projects, but also to development and release\ntools, to Docker base images, and to other Deis projects that do \nsemantic version\n releases.\n\n\nSee \"\nHow to Release a Component\n\" for more detail.\n\n\nWorkflow Releases Each Month\n\u00b6\n\n\nDeis Workflow has a regular, public release cadence. From v2.8.0 onward, new Workflow feature\nreleases arrive on the first Thursday of each month. Patch releases are created at any time,\nas needed. GitHub milestones are used to communicate the content and timing of major and minor\nreleases, and longer-term planning is visible at \nthe Roadmap\n.\n\n\nWorkflow release timing is not linked to specific features. If a feature is merged before the\nrelease date, it is included in the next release.\n\n\nSee \"\nHow to Release Workflow\n\" for more detail.\n\n\nSemantic Versioning\n\u00b6\n\n\nDeis releases comply with \nsemantic versioning\n, with the \"public API\" broadly\ndefined as:\n\n\n\n\nREST, gRPC, or other API that is network-accessible\n\n\nLibrary or framework API intended for public use\n\n\n\"Pluggable\" socket-level protocols users can redirect\n\n\nCLI commands and output formats\n\n\n\n\nIn general, changes to anything a user might reasonably link to, customize, or integrate with\nshould be backward-compatible, or else require a major release. Deis users can be confident that\nupgrading to a patch or to a minor release will not break anything.\n\n\nHow to Release a Component\n\u00b6\n\n\nMost Deis projects are \"components\" which produce a Docker image or binary executable as a\ndeliverable. This section leads a maintainer through creating a component release.\n\n\nStep 1: Update Code and Run the Release Tool\n\u00b6\n\n\nMajor or minor releases should happen on the master branch. Patch releases\nshould check out the previous release tag and cherry-pick specific commits from master.\n\n\nNote:\n if a patch release, the release artifact will have to be manually promoted by triggering\nthe \ncomponent-promote\n job with the following values:\n\n\nCOMPONENT_NAME=<component name>\nCOMPONENT_SHA=<patch commit sha>\n\n\n\n\nMake sure you have the \ndeisrel\n release tool in your search \n$PATH\n.\n\n\nRun \ndeisrel release\n once with a fake semver tag to proofread the changelog content. (If \nHEAD\n\nof master is not what is intended for the release, add the \n--sha\n flag as described\nin \ndeisrel release --help\n.)\n\n\n$ deisrel release controller v0.0.0\nDoing a dry run of the component release...\nskipping commit 943a49267eeb28546819a266654806cfcbae0e38\n\nCreating changelog for controller with tag v2.8.1 through commit 943a49267eeb28546819a266654806cfcbae0e38\n\n### v2.8.1 -> v0.0.0\n\n#### Fixes\n\n- [`615b834`](https://github.com/deisthree/controller/commit/615b834f39cb68a854cc1f1e2f0f82d862ea2731) boot: Ensure DEIS_DEBUG==true for debug output\n\n\n\n\nBased on the changelog content, determine whether the component deserves a minor or patch\nrelease. Run the command again with that semver tag and \n--dry-run=false\n. You will still be\nasked for confirmation before the release is created:\n\n\n$ deisrel release controller v2.8.2 --dry-run=false\nskipping commit 943a49267eeb28546819a266654806cfcbae0e38\n\nCreating changelog for controller with tag v2.8.1 through commit 943a49267eeb28546819a266654806cfcbae0e38\n\n### v2.8.1 -> v2.8.2\n\n\n#### Fixes\n\n- [`615b834`](https://github.com/deisthree/controller/commit/615b834f39cb68a854cc1f1e2f0f82d862ea2731) boot: Ensure DEIS_DEBUG==true for debug output\n\n\nPlease review the above changelog contents and ensure:\n  1. All intended commits are mentioned\n  2. The changes agree with the semver release tag (major, minor, or patch)\n\nCreate release for Deis Controller v2.8.2? [y/n]: y\nNew release is available at https://github.com/deisthree/controller/releases/tag/v2.8.2\n\n\n\n\nStep 2: Verify the Component is Available\n\u00b6\n\n\nTagging the component (see \nStep 1\n)\nstarts a CI job that eventually results in an artifact being made available for public download.\nPlease see the \nCI flow diagrams\n for details.\n\n\nDouble-check that the artifact is available, either by a \ndocker pull\n command or by running the\nappropriate installer script.\n\n\nIf the artifact can't be downloaded, ensure that its CI release jobs are still in progress, or\nfix whatever issue arose in the pipeline. For example, the\n\nmaster merge pipeline\n\nmay have failed to promote the \n:git-abc1d23\n candidate image and needs to be restarted with\nthat component and commit.\n\n\nIf the component has a correlating \nKubernetes Helm\n chart,\nthis chart will also be packaged, signed and uploaded to its production chart repo.  Please\nverify it can be fetched (and verified):\n\n\n$ helm repo add controller https://charts.deis.com/controller\n\"controller\" has been added to your repositories\n$ helm fetch --verify controller/controller --version v2.17.0\nVerification: &{0xc4207ec870 sha256:026e766e918ff28d2a7041bc3d560d149ee7eb0cb84165c9d9d00a3045ff45c3 controller-v2.17.0.tgz}\n\n\n\n\nHow to Release Workflow\n\u00b6\n\n\nDeis Workflow integrates multiple component releases together with a \nKubernetes Helm\n chart\ndeliverable. This section leads a maintainer through creating a Workflow release.\n\n\nStep 1: Set Environment Variables\n\u00b6\n\n\nExport two environment variables that will be used in later steps:\n\n\nexport WORKFLOW_RELEASE=v2.17.0 WORKFLOW_PREV_RELEASE=v2.16.0  # for example\n\n\n\n\nStep 2: Tag Supporting Repositories\n\u00b6\n\n\nSome Workflow components not in the Helm chart must also be tagged in sync with the release.\nFollow the \ncomponent release process\n above and ensure that\nthese components are tagged:\n\n\n\n\ndeis/workflow-cli\n\n\ndeis/workflow-e2e\n\n\n\n\nThe version number for \ndeis/workflow-cli\n should always match the overall Workflow version\nnumber.\n\n\nStep 3: Create Helm Chart\n\u00b6\n\n\nTo create and stage a release candidate chart for Workflow, we will build the \nworkflow-chart-stage\n job with the following parameters:\n\n\nRELEASE_TAG=$WORKFLOW_RELEASE\n\n\nThis job will gather all of the latest component release tags and use these to specify the versions of all component charts.\nIt will then package the Workflow chart, upload it to the staging chart repo and kick off an e2e run against said chart.\n\n\nStep 4: Manual Testing\n\u00b6\n\n\nNow it's time to go above and beyond current CI tests. Create a testing matrix spreadsheet (copying\nfrom the previous document is a good start) and sign up testers to cover all permutations.\n\n\nTesters should pay special attention to the overall user experience, make sure upgrading from\nearlier versions is smooth, and cover various storage configurations and Kubernetes versions and\ninfrastructure providers.\n\n\nWhen showstopper-level bugs are found, the process is as follows:\n\n\n\n\nCreate a component PR that fixes the bug.\n\n\nOnce the PR passes and is reviewed, merge it and do a new\n  \ncomponent release\n\n\nTrigger the same \nworkflow-chart-stage\n job as mentioned in Step 3 to upload the newly-generated Workflow release candidate chart to staging.\n\n\n\n\nStep 5: Release the Chart\n\u00b6\n\n\nWhen testing has completed without uncovering any new showstopper bugs, kick off the \nworkflow-chart-release\n job with the following parameter:\n\n\nRELEASE_TAG=$WORKFLOW_RELEASE\n\n\nThis job will copy the release candidate chart (now approved by CI and manual testing) from the staging repo to the production repo, signing\nit if it has not done so already.\n\n\nStep 6: Assemble Master Changelog\n\u00b6\n\n\nEach component already updated its release notes on GitHub with CHANGELOG content. We'll now\ngenerate the master changelog for the Workflow chart, consisting of all component and auxilliary repo changes.\n\n\nWe'll employ the \nrequirements.lock\n file from the \nWORKFLOW_PREV_RELEASE\n chart, as well as a repo-to-chart-name \nmapping file\n, this time invoking \ndeisrel changelog global\n to get all component changes between\nthe chart versions existing in the \nWORKFLOW_PREV_RELEASE\n chart and the \nmost recent\n releases existing in GitHub.\n(Therefore, if there are any unreleased commits in a component repo, they will not appear here):\n\n\nhelm repo add deis https://charts.deis.com/workflow\nhelm fetch --untar deis/workflow --version $WORKFLOW_PREV_RELEASE\ndeisrel changelog global workflow/requirements.lock map.json > changelog-$WORKFLOW_RELEASE.md\n\n\n\n\nThis master changelog should then be placed into a single gist.  The file will also be added to the documentation\nupdate PR created in the next step.\n\n\nStep 7: Update Documentation\n\u00b6\n\n\nCreate a new pull request at \ndeis/workflow\n that updates version references to the new release.\nUse \ngit grep $WORKFLOW_PREV_RELEASE\n to find any references, but be careful not to change\n\nCHANGELOG.md\n.\n\n\nPlace the \n$WORKFLOW_RELEASE\n master changelog generated in Step 7 in the \nchangelogs\n directory.\nMake sure to add a header to the page to make it clear that this is for a Workflow release, e.g.:\n\n\n## Workflow v2.16.0 -> v2.17.0\n\n\n\n\nOnce the PR has been reviewed and merged, do a \ncomponent release\n of\n\ndeis/workflow\n itself. The version number for \ndeis/workflow\n should always match the\noverall Workflow version number.\n\n\nStep 8: Close GitHub Milestones\n\u00b6\n\n\nCreate a pull request at \nseed-repo\n to close the release\nmilestone and create the next one. When changes are merged to seed-repo, milestones on all\nrelevant projects will be updated. If there are open issues attached to the milestone, move them\nto the next upcoming milestone before merging the pull request.\n\n\nMilestones map to Deis Workflow releases in \ndeis/workflow\n. These milestones do not correspond\nto individual component release tags.\n\n\nStep 9: Release Workflow CLI Stable\n\u00b6\n\n\nNow that the \n$WORKFLOW_RELEASE\n version of Workflow CLI has been vetted, we can push \nstable\n artifacts based on this version.\n\n\nKick off https://ci.deis.io/job/workflow-cli-build-stable/ with the \nTAG\n build parameter of \n$WORKFLOW_RELEASE\n\nand then verify \nstable\n artifacts are available and appropriately updated after the job completes:\n\n\n$ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash\n$ ./deis version\n# (Should show $WORKFLOW_RELEASE)\n\n\n\n\nStep 10: Let Everyone Know\n\u00b6\n\n\nLet the rest of the team know they can start blogging and tweeting about the new Workflow release.\nPost a message to the #company channel on Slack. Include a link to the released chart and to the\nmaster CHANGELOG:\n\n\n@here Deis Workflow v2.17.0 is now live!\nMaster CHANGELOG: https://deis.com/docs/workflow/changelogs/v2.17.0/\n\n\n\n\nYou're done with the release. Nice job!",
            "title": "Releases"
        },
        {
            "location": "/roadmap/releases/#releases",
            "text": "Deis uses a  continuous delivery  approach for creating releases. Every merged commit that passes\ntesting results in a deliverable that can be given a  semantic version  tag and shipped.  The master  git  branch of a project should always work. Only changes considered ready to be\nreleased publicly are merged.",
            "title": "Releases"
        },
        {
            "location": "/roadmap/releases/#components-release-as-needed",
            "text": "Deis components release new versions as often as needed. Fixing a high priority bug requires the\nproject maintainer to create a new patch release. Merging a backward-compatible feature implies\na minor release.  By releasing often, each component release becomes a safe and routine event. This makes it faster\nand easier for users to obtain specific fixes. Continuous delivery also reduces the work\nnecessary to release a product such as Deis Workflow, which integrates several components.  \"Components\" applies not just to Deis Workflow projects, but also to development and release\ntools, to Docker base images, and to other Deis projects that do  semantic version  releases.  See \" How to Release a Component \" for more detail.",
            "title": "Components Release as Needed"
        },
        {
            "location": "/roadmap/releases/#workflow-releases-each-month",
            "text": "Deis Workflow has a regular, public release cadence. From v2.8.0 onward, new Workflow feature\nreleases arrive on the first Thursday of each month. Patch releases are created at any time,\nas needed. GitHub milestones are used to communicate the content and timing of major and minor\nreleases, and longer-term planning is visible at  the Roadmap .  Workflow release timing is not linked to specific features. If a feature is merged before the\nrelease date, it is included in the next release.  See \" How to Release Workflow \" for more detail.",
            "title": "Workflow Releases Each Month"
        },
        {
            "location": "/roadmap/releases/#semantic-versioning",
            "text": "Deis releases comply with  semantic versioning , with the \"public API\" broadly\ndefined as:   REST, gRPC, or other API that is network-accessible  Library or framework API intended for public use  \"Pluggable\" socket-level protocols users can redirect  CLI commands and output formats   In general, changes to anything a user might reasonably link to, customize, or integrate with\nshould be backward-compatible, or else require a major release. Deis users can be confident that\nupgrading to a patch or to a minor release will not break anything.",
            "title": "Semantic Versioning"
        },
        {
            "location": "/roadmap/releases/#how-to-release-a-component",
            "text": "Most Deis projects are \"components\" which produce a Docker image or binary executable as a\ndeliverable. This section leads a maintainer through creating a component release.",
            "title": "How to Release a Component"
        },
        {
            "location": "/roadmap/releases/#step-1-update-code-and-run-the-release-tool",
            "text": "Major or minor releases should happen on the master branch. Patch releases\nshould check out the previous release tag and cherry-pick specific commits from master.  Note:  if a patch release, the release artifact will have to be manually promoted by triggering\nthe  component-promote  job with the following values:  COMPONENT_NAME=<component name>\nCOMPONENT_SHA=<patch commit sha>  Make sure you have the  deisrel  release tool in your search  $PATH .  Run  deisrel release  once with a fake semver tag to proofread the changelog content. (If  HEAD \nof master is not what is intended for the release, add the  --sha  flag as described\nin  deisrel release --help .)  $ deisrel release controller v0.0.0\nDoing a dry run of the component release...\nskipping commit 943a49267eeb28546819a266654806cfcbae0e38\n\nCreating changelog for controller with tag v2.8.1 through commit 943a49267eeb28546819a266654806cfcbae0e38\n\n### v2.8.1 -> v0.0.0\n\n#### Fixes\n\n- [`615b834`](https://github.com/deisthree/controller/commit/615b834f39cb68a854cc1f1e2f0f82d862ea2731) boot: Ensure DEIS_DEBUG==true for debug output  Based on the changelog content, determine whether the component deserves a minor or patch\nrelease. Run the command again with that semver tag and  --dry-run=false . You will still be\nasked for confirmation before the release is created:  $ deisrel release controller v2.8.2 --dry-run=false\nskipping commit 943a49267eeb28546819a266654806cfcbae0e38\n\nCreating changelog for controller with tag v2.8.1 through commit 943a49267eeb28546819a266654806cfcbae0e38\n\n### v2.8.1 -> v2.8.2\n\n\n#### Fixes\n\n- [`615b834`](https://github.com/deisthree/controller/commit/615b834f39cb68a854cc1f1e2f0f82d862ea2731) boot: Ensure DEIS_DEBUG==true for debug output\n\n\nPlease review the above changelog contents and ensure:\n  1. All intended commits are mentioned\n  2. The changes agree with the semver release tag (major, minor, or patch)\n\nCreate release for Deis Controller v2.8.2? [y/n]: y\nNew release is available at https://github.com/deisthree/controller/releases/tag/v2.8.2",
            "title": "Step 1: Update Code and Run the Release Tool"
        },
        {
            "location": "/roadmap/releases/#step-2-verify-the-component-is-available",
            "text": "Tagging the component (see  Step 1 )\nstarts a CI job that eventually results in an artifact being made available for public download.\nPlease see the  CI flow diagrams  for details.  Double-check that the artifact is available, either by a  docker pull  command or by running the\nappropriate installer script.  If the artifact can't be downloaded, ensure that its CI release jobs are still in progress, or\nfix whatever issue arose in the pipeline. For example, the master merge pipeline \nmay have failed to promote the  :git-abc1d23  candidate image and needs to be restarted with\nthat component and commit.  If the component has a correlating  Kubernetes Helm  chart,\nthis chart will also be packaged, signed and uploaded to its production chart repo.  Please\nverify it can be fetched (and verified):  $ helm repo add controller https://charts.deis.com/controller\n\"controller\" has been added to your repositories\n$ helm fetch --verify controller/controller --version v2.17.0\nVerification: &{0xc4207ec870 sha256:026e766e918ff28d2a7041bc3d560d149ee7eb0cb84165c9d9d00a3045ff45c3 controller-v2.17.0.tgz}",
            "title": "Step 2: Verify the Component is Available"
        },
        {
            "location": "/roadmap/releases/#how-to-release-workflow",
            "text": "Deis Workflow integrates multiple component releases together with a  Kubernetes Helm  chart\ndeliverable. This section leads a maintainer through creating a Workflow release.",
            "title": "How to Release Workflow"
        },
        {
            "location": "/roadmap/releases/#step-1-set-environment-variables",
            "text": "Export two environment variables that will be used in later steps:  export WORKFLOW_RELEASE=v2.17.0 WORKFLOW_PREV_RELEASE=v2.16.0  # for example",
            "title": "Step 1: Set Environment Variables"
        },
        {
            "location": "/roadmap/releases/#step-2-tag-supporting-repositories",
            "text": "Some Workflow components not in the Helm chart must also be tagged in sync with the release.\nFollow the  component release process  above and ensure that\nthese components are tagged:   deis/workflow-cli  deis/workflow-e2e   The version number for  deis/workflow-cli  should always match the overall Workflow version\nnumber.",
            "title": "Step 2: Tag Supporting Repositories"
        },
        {
            "location": "/roadmap/releases/#step-3-create-helm-chart",
            "text": "To create and stage a release candidate chart for Workflow, we will build the  workflow-chart-stage  job with the following parameters:  RELEASE_TAG=$WORKFLOW_RELEASE  This job will gather all of the latest component release tags and use these to specify the versions of all component charts.\nIt will then package the Workflow chart, upload it to the staging chart repo and kick off an e2e run against said chart.",
            "title": "Step 3: Create Helm Chart"
        },
        {
            "location": "/roadmap/releases/#step-4-manual-testing",
            "text": "Now it's time to go above and beyond current CI tests. Create a testing matrix spreadsheet (copying\nfrom the previous document is a good start) and sign up testers to cover all permutations.  Testers should pay special attention to the overall user experience, make sure upgrading from\nearlier versions is smooth, and cover various storage configurations and Kubernetes versions and\ninfrastructure providers.  When showstopper-level bugs are found, the process is as follows:   Create a component PR that fixes the bug.  Once the PR passes and is reviewed, merge it and do a new\n   component release  Trigger the same  workflow-chart-stage  job as mentioned in Step 3 to upload the newly-generated Workflow release candidate chart to staging.",
            "title": "Step 4: Manual Testing"
        },
        {
            "location": "/roadmap/releases/#step-5-release-the-chart",
            "text": "When testing has completed without uncovering any new showstopper bugs, kick off the  workflow-chart-release  job with the following parameter:  RELEASE_TAG=$WORKFLOW_RELEASE  This job will copy the release candidate chart (now approved by CI and manual testing) from the staging repo to the production repo, signing\nit if it has not done so already.",
            "title": "Step 5: Release the Chart"
        },
        {
            "location": "/roadmap/releases/#step-6-assemble-master-changelog",
            "text": "Each component already updated its release notes on GitHub with CHANGELOG content. We'll now\ngenerate the master changelog for the Workflow chart, consisting of all component and auxilliary repo changes.  We'll employ the  requirements.lock  file from the  WORKFLOW_PREV_RELEASE  chart, as well as a repo-to-chart-name  mapping file , this time invoking  deisrel changelog global  to get all component changes between\nthe chart versions existing in the  WORKFLOW_PREV_RELEASE  chart and the  most recent  releases existing in GitHub.\n(Therefore, if there are any unreleased commits in a component repo, they will not appear here):  helm repo add deis https://charts.deis.com/workflow\nhelm fetch --untar deis/workflow --version $WORKFLOW_PREV_RELEASE\ndeisrel changelog global workflow/requirements.lock map.json > changelog-$WORKFLOW_RELEASE.md  This master changelog should then be placed into a single gist.  The file will also be added to the documentation\nupdate PR created in the next step.",
            "title": "Step 6: Assemble Master Changelog"
        },
        {
            "location": "/roadmap/releases/#step-7-update-documentation",
            "text": "Create a new pull request at  deis/workflow  that updates version references to the new release.\nUse  git grep $WORKFLOW_PREV_RELEASE  to find any references, but be careful not to change CHANGELOG.md .  Place the  $WORKFLOW_RELEASE  master changelog generated in Step 7 in the  changelogs  directory.\nMake sure to add a header to the page to make it clear that this is for a Workflow release, e.g.:  ## Workflow v2.16.0 -> v2.17.0  Once the PR has been reviewed and merged, do a  component release  of deis/workflow  itself. The version number for  deis/workflow  should always match the\noverall Workflow version number.",
            "title": "Step 7: Update Documentation"
        },
        {
            "location": "/roadmap/releases/#step-8-close-github-milestones",
            "text": "Create a pull request at  seed-repo  to close the release\nmilestone and create the next one. When changes are merged to seed-repo, milestones on all\nrelevant projects will be updated. If there are open issues attached to the milestone, move them\nto the next upcoming milestone before merging the pull request.  Milestones map to Deis Workflow releases in  deis/workflow . These milestones do not correspond\nto individual component release tags.",
            "title": "Step 8: Close GitHub Milestones"
        },
        {
            "location": "/roadmap/releases/#step-9-release-workflow-cli-stable",
            "text": "Now that the  $WORKFLOW_RELEASE  version of Workflow CLI has been vetted, we can push  stable  artifacts based on this version.  Kick off https://ci.deis.io/job/workflow-cli-build-stable/ with the  TAG  build parameter of  $WORKFLOW_RELEASE \nand then verify  stable  artifacts are available and appropriately updated after the job completes:  $ curl -sSL http://deis.io/deis-cli/install-v2.sh | bash\n$ ./deis version\n# (Should show $WORKFLOW_RELEASE)",
            "title": "Step 9: Release Workflow CLI Stable"
        },
        {
            "location": "/roadmap/releases/#step-10-let-everyone-know",
            "text": "Let the rest of the team know they can start blogging and tweeting about the new Workflow release.\nPost a message to the #company channel on Slack. Include a link to the released chart and to the\nmaster CHANGELOG:  @here Deis Workflow v2.17.0 is now live!\nMaster CHANGELOG: https://deis.com/docs/workflow/changelogs/v2.17.0/  You're done with the release. Nice job!",
            "title": "Step 10: Let Everyone Know"
        },
        {
            "location": "/contributing/overview/",
            "text": "Contributor Overview\n\u00b6\n\n\nInterested in contributing to a Deis project?  There are lots of ways to help.\n\n\nFile Bugs & Enhancements\n\u00b6\n\n\nFind a bug? Want to see a new feature? Have a request for the maintainers? Open a Github issue in the applicable repository and we\u2019ll get the conversation started.\n\n\nOur official support channel is the \nDeis #community Slack channel\n.\n\n\nDon't know what the applicable repository for an issue is? Open up in issue in \nworkflow\n or chat with a maintainer in the \nDeis #community Slack channel\n and we'll make sure it gets to the right place.\n\n\nAdditionally, take a look at the \ntroubleshooting\n documentation for common issues.\n\n\nBefore opening a new issue, it's helpful to search and see if anyone else has already reported the problem. You can search through a list of issues for all Deis projects \nhere\n.\n\n\nWrite Documentation\n\u00b6\n\n\nWe are always looking to improve and expand our documentation. Most docs reside in the \ndeis/workflow\n repository. Simply fork the project, update docs and send us a pull request.\n\n\nContribute Code\n\u00b6\n\n\nWe are always looking for help improving the core platform, other workloads, tooling, and test coverage. Interested in contributing code? Let\u2019s chat in the \nDeis #community Slack channel\n. Make sure to check out issues tagged \neasy fix\n or \nhelp wanted\n.\n\n\nWhen you're ready to begin writing code, review \nDesign Documents\n and get your \nDevelopment Environment\n set up.\n\n\nBy contributing to any Deis project you agree to its \nDeveloper Certificate of Origin (DCO)\n. This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.\n\n\nTriage Issues\n\u00b6\n\n\nIf you don't have time to code, consider helping with triage. The community will thank you for saving them time by spending some of yours. See \nTriaging Issues\n for more info.\n\n\nShare your Experience\n\u00b6\n\n\nInteract with the community on our user mailing list or live in our \nDeis #community Slack channel\n, where you can chat with other Deis Workflow users any time of day.",
            "title": "Overview"
        },
        {
            "location": "/contributing/overview/#contributor-overview",
            "text": "Interested in contributing to a Deis project?  There are lots of ways to help.",
            "title": "Contributor Overview"
        },
        {
            "location": "/contributing/overview/#file-bugs-enhancements",
            "text": "Find a bug? Want to see a new feature? Have a request for the maintainers? Open a Github issue in the applicable repository and we\u2019ll get the conversation started.  Our official support channel is the  Deis #community Slack channel .  Don't know what the applicable repository for an issue is? Open up in issue in  workflow  or chat with a maintainer in the  Deis #community Slack channel  and we'll make sure it gets to the right place.  Additionally, take a look at the  troubleshooting  documentation for common issues.  Before opening a new issue, it's helpful to search and see if anyone else has already reported the problem. You can search through a list of issues for all Deis projects  here .",
            "title": "File Bugs &amp; Enhancements"
        },
        {
            "location": "/contributing/overview/#write-documentation",
            "text": "We are always looking to improve and expand our documentation. Most docs reside in the  deis/workflow  repository. Simply fork the project, update docs and send us a pull request.",
            "title": "Write Documentation"
        },
        {
            "location": "/contributing/overview/#contribute-code",
            "text": "We are always looking for help improving the core platform, other workloads, tooling, and test coverage. Interested in contributing code? Let\u2019s chat in the  Deis #community Slack channel . Make sure to check out issues tagged  easy fix  or  help wanted .  When you're ready to begin writing code, review  Design Documents  and get your  Development Environment  set up.  By contributing to any Deis project you agree to its  Developer Certificate of Origin (DCO) . This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.",
            "title": "Contribute Code"
        },
        {
            "location": "/contributing/overview/#triage-issues",
            "text": "If you don't have time to code, consider helping with triage. The community will thank you for saving them time by spending some of yours. See  Triaging Issues  for more info.",
            "title": "Triage Issues"
        },
        {
            "location": "/contributing/overview/#share-your-experience",
            "text": "Interact with the community on our user mailing list or live in our  Deis #community Slack channel , where you can chat with other Deis Workflow users any time of day.",
            "title": "Share your Experience"
        },
        {
            "location": "/contributing/design-documents/",
            "text": "Design Documents\n\u00b6\n\n\nBefore submitting a pull request which will significantly alter the behavior of any Deis component, such as a new feature or major refactoring, contributors should first open an issue representing a design document.\n\n\nGoals\n\u00b6\n\n\nDesign documents help ensure project contributors:\n\n\n\n\nInvolve stakeholders as early as possible in a feature's development\n\n\nEnsure code changes accomplish the original motivations and design goals\n\n\nEstablish clear acceptance criteria for a feature or change\n\n\nEnforce test-driven design methodology and automated test coverage\n\n\n\n\nContents\n\u00b6\n\n\nDesign document issues should be named \nDesign Doc: <change description>\n and contain the following sections:\n\n\nGoal\n\u00b6\n\n\nThis section should briefly describe the proposed change and the motivations behind it. Tests will be written to ensure this design goal is met by the change.\n\n\nThis section should also reference a separate GitHub issue tracking the feature or change, which will typically be assigned to a release milestone.\n\n\nCode Changes\n\u00b6\n\n\nThis section should detail the code changes necessary to accomplish the change, as well as the proposed implementation. This should be as detailed as necessary to help reviewers understand the change.\n\n\nTests\n\u00b6\n\n\nAll changes should be covered by automated tests, either unit or integration tests (ideally both). This section should detail how tests will be written to validate that the change accomplishes the design goals and doesn't introduce any regressions.\n\n\nIf a change cannot be sufficiently covered by automated testing, the design should be reconsidered. If there is no test coverage whatsoever for an affected section of code, a separate issue should be filed to integrate automated testing with that section of the codebase.\n\n\nThe tests described here also form the acceptance criteria for the change, so that when it's completed maintainers can merge the pull request after confirming the tests pass CI.\n\n\nApproval\n\u00b6\n\n\nA design document follows the same \nmerge approval\n review process as final pull requests do, and maintainers will take extra care to ensure that any stakeholders for the change are included in the discussion and review of the design document.\n\n\nOnce the design is accepted, the author can complete the change and submit a pull request for review. The pull request should close both the design document for the change as well as any issues that either track the issue or are closed as a result of the change.\n\n\nSee \nSubmitting a Pull Request\n for more information on pull request and commit message formatting.",
            "title": "Design Documents"
        },
        {
            "location": "/contributing/design-documents/#design-documents",
            "text": "Before submitting a pull request which will significantly alter the behavior of any Deis component, such as a new feature or major refactoring, contributors should first open an issue representing a design document.",
            "title": "Design Documents"
        },
        {
            "location": "/contributing/design-documents/#goals",
            "text": "Design documents help ensure project contributors:   Involve stakeholders as early as possible in a feature's development  Ensure code changes accomplish the original motivations and design goals  Establish clear acceptance criteria for a feature or change  Enforce test-driven design methodology and automated test coverage",
            "title": "Goals"
        },
        {
            "location": "/contributing/design-documents/#contents",
            "text": "Design document issues should be named  Design Doc: <change description>  and contain the following sections:",
            "title": "Contents"
        },
        {
            "location": "/contributing/design-documents/#goal",
            "text": "This section should briefly describe the proposed change and the motivations behind it. Tests will be written to ensure this design goal is met by the change.  This section should also reference a separate GitHub issue tracking the feature or change, which will typically be assigned to a release milestone.",
            "title": "Goal"
        },
        {
            "location": "/contributing/design-documents/#code-changes",
            "text": "This section should detail the code changes necessary to accomplish the change, as well as the proposed implementation. This should be as detailed as necessary to help reviewers understand the change.",
            "title": "Code Changes"
        },
        {
            "location": "/contributing/design-documents/#tests",
            "text": "All changes should be covered by automated tests, either unit or integration tests (ideally both). This section should detail how tests will be written to validate that the change accomplishes the design goals and doesn't introduce any regressions.  If a change cannot be sufficiently covered by automated testing, the design should be reconsidered. If there is no test coverage whatsoever for an affected section of code, a separate issue should be filed to integrate automated testing with that section of the codebase.  The tests described here also form the acceptance criteria for the change, so that when it's completed maintainers can merge the pull request after confirming the tests pass CI.",
            "title": "Tests"
        },
        {
            "location": "/contributing/design-documents/#approval",
            "text": "A design document follows the same  merge approval  review process as final pull requests do, and maintainers will take extra care to ensure that any stakeholders for the change are included in the discussion and review of the design document.  Once the design is accepted, the author can complete the change and submit a pull request for review. The pull request should close both the design document for the change as well as any issues that either track the issue or are closed as a result of the change.  See  Submitting a Pull Request  for more information on pull request and commit message formatting.",
            "title": "Approval"
        },
        {
            "location": "/contributing/development-environment/",
            "text": "Development Environment\n\u00b6\n\n\nThis document is for developers who are interested in working directly on the Deis codebase. In this guide, we walk you through the process of setting up a development environment that is suitable for hacking on most Deis components.\n\n\nWe try to make it simple to hack on Deis components. However, there are necessarily several moving pieces and some setup required. We welcome any suggestions for automating or simplifying this process.\n\n\n\n\nNote\n\n\nThe Deis team is actively engaged in containerizing Go and Python based development environments tailored specifically for Deis development in order to minimize the setup required.  This work is ongoing.  Refer to the \ndeis/router\n project for a working example of a fully containerized development environment.\n\n\n\n\nIf you're just getting into the Deis codebase, look for GitHub issues with the label \neasy-fix\n. These are more straightforward or low-risk issues and are a great way to become more familiar with Deis.\n\n\nPrerequisites\n\u00b6\n\n\nIn order to successfully compile and test Deis binaries and build Docker images of Deis components, the following are required:\n\n\n\n\ngit\n\n\nGo 1.5 or later, with support for compiling to \nlinux/amd64\n\n\nglide\n\n\ngolint\n\n\nshellcheck\n\n\nDocker\n (in a non-Linux environment, you will additionally want \nDocker Machine\n)\n\n\n\n\nFor \ndeis/controller\n, in particular, you will also need:\n\n\n\n\nPython 2.7 or later (with \npip\n)\n\n\nvirtualenv (\nsudo pip install virtualenv\n)\n\n\n\n\nIn most cases, you should simply install according to the instructions. There are a few special cases, though. We cover these below.\n\n\nConfiguring Go\n\u00b6\n\n\nIf your local workstation does not support the \nlinux/amd64\n target environment, you will have to install Go from source with cross-compile support for that environment. This is because some of the components are built on your local machine and then injected into a Docker container.\n\n\nHomebrew users can just install with cross compiling support:\n\n\n$ brew install go --with-cc-common\n\n\n\n\nIt is also straightforward to build Go from source:\n\n\n$ sudo su\n$ curl -sSL https://golang.org/dl/go1.5.src.tar.gz | tar -v -C /usr/local -xz\n$ cd /usr/local/go/src\n$ # compile Go for our default platform first, then add cross-compile support\n$ ./make.bash --no-clean\n$ GOOS=linux GOARCH=amd64 ./make.bash --no-clean\n\n\n\n\nOnce you can compile to \nlinux/amd64\n, you should be able to compile Deis components as normal.\n\n\nConfiguring Docker Machine (Mac)\n\u00b6\n\n\nDeis needs Docker for building images.  Docker utilizes a client/server architecture, and while the Docker client is available for Mac OS, the Docker server is dependent upon the Linux kernel.  Therefore, in order to use Docker on Mac OS, \nDocker Machine\n is used to facilitate running the Docker server within a \nVirtualBox\n VM.\n\n\nInstall Docker Machine according to the normal installation instructions, then use it to create a new VM:\n\n\n$ docker-machine create deis-docker \\\n    --driver=virtualbox \\\n    --virtualbox-disk-size=100000 \\\n    --engine-insecure-registry 10.0.0.0/8 \\\n    --engine-insecure-registry 172.16.0.0/12 \\\n    --engine-insecure-registry 192.168.0.0/16 \\\n    --engine-insecure-registry 100.64.0.0/10\n\n\n\n\nThis will create a new virtual machine named \ndeis-docker\n that will take up as much as 100,000 MB of disk space. The images you build may be large, so allocating a big disk is a good idea.\n\n\nOnce the \ndeis-docker\n machine exists, source its values into your environment so your docker client knows how to use the new machine. You may even choose to add this to your bash profile or similar.\n\n\n$ eval \"$(docker-machine env deis-docker)\"\n\n\n\n\nAfter following these steps, some Docker Machine users report a slight delay (30 - 60 seconds) before the Docker server is ready.\n\n\n\n\nNote\n\n\nIn subsequent steps, you may run a Docker registry within the \ndeis-docker\n VM. Such a registry will not have a valid SSL certificate and will use HTTP instead of HTTPS. Such registries are implicitly untrusted by the Docker server (which is also running on the \ndeis-docker\n VM).  In order for the Docker server to trust the insecure registry, \ndeis-docker\n is explicitly created to trust all registries in the IP ranges that that are reserved for use by private networks.  The VM (and therefore the registry) will exist within such a range.  This will effectively permit Docker pulls and pushes to such a registry.\n\n\n\n\nFork the Repository\n\u00b6\n\n\nOnce the prerequisites have been met, we can begin to work with Deis components.\n\n\nBegin at Github by forking whichever Deis project you would like to contribute to, then clone that fork locally.  Since Deis is predominantly written in Go, the best place to put it is under \n$GOPATH/src/github.com/deis/\n.\n\n\n$ mkdir -p  $GOPATH/src/github.com/deis\n$ cd $GOPATH/src/github.com/deis\n$ git clone git@github.com:<username>/<component>.git\n$ cd <component>\n\n\n\n\n\n\nNote\n\n\nBy checking out the forked copy into the namespace \ngithub.com/deis/<component>\n, we are tricking the Go toolchain into seeing our fork as the \"official\" source tree.\n\n\n\n\nIf you are going to be issuing pull requests to the upstream repository from which you forked, we suggest configuring Git such that you can easily rebase your code to the upstream repository's master branch. There are various strategies for doing this, but the \nmost common\n is to add an \nupstream\n remote:\n\n\n$ git remote add upstream https://github.com/deisthree/<component>.git\n\n\n\n\nFor the sake of simplicity, you may want to point an environment variable to your Deis code - the directory containing one or more Deis components:\n\n\n$ export DEIS=$GOPATH/src/github.com/deis\n\n\n\n\nThroughout the rest of this document, \n$DEIS\n refers to that location.\n\n\nAlternative: Forking with a Pushurl\n\u00b6\n\n\nA number of Deis contributors prefer to pull directly from \ndeis/<component>\n, but push to \n<username>/<component>\n. If that workflow suits you better, you can set it up this way:\n\n\n$ git clone git@github.com:deis/<component>.git\n$ cd deis\n$ git config remote.origin.pushurl git@github.com:<username>/<component>.git\n\n\n\n\nIn this setup, fetching and pulling code will work directly with the upstream repository, while pushing code will send changes to your fork. This makes it easy to stay up to date, but also make changes and then issue pull requests.\n\n\nMake Your Changes\n\u00b6\n\n\nWith your development environment set up and the code you wish to work on forked and cloned, you can begin making your changes.\n\n\nTest Your Changes\n\u00b6\n\n\nDeis components each include a comprehensive suite of automated tests, mostly written in Go. See \ntesting\n for instructions on running the tests.\n\n\nDeploying Your Changes\n\u00b6\n\n\nAlthough writing and executing tests are critical to ensuring code quality, most contributors will also want to deploy their changes to a live environment, whether to make use of those changes or to test them further.  The remainder of this section documents the procedure for running officially released Deis components in a development cluster and replacing any one of those with your customizations.\n\n\nRunning a Kubernetes Cluster for Development\n\u00b6\n\n\nTo run a Kubernetes cluster locally or elsewhere to support your development activities, refer to Deis installation instructions \nhere\n.\n\n\nUsing a Development Registry\n\u00b6\n\n\nTo facilitate deploying Docker images containing your changes to your Kubernetes cluster, you will need to make use of a Docker registry.  This is a location to where you can push your custom-built images and from where your Kubernetes cluster can retrieve those same images.\n\n\nIf your development cluster runs locally (in Minikube, for instance), the most efficient and economical means of achieving this is to run a Docker registry locally \nas\n a Docker container.\n\n\nTo facilitate this, most Deis components provide a make target to create such a registry:\n\n\n$ make dev-registry\n\n\n\n\nIn a Linux environment, to begin using the registry:\n\n\nexport DEIS_REGISTRY=<IP of the host machine>:5000\n\n\n\n\nIn non-Linux environments:\n\n\nexport DEIS_REGISTRY=<IP of the deis-docker Docker Machine VM>:5000/\n\n\n\n\nIf your development cluster runs on a cloud provider such as Google Container Engine, a local registry such as the one above will not be accessible to your Kubernetes nodes.  In such cases, a public registry such as \nDockerHub\n or \nquay.io\n will suffice.\n\n\nTo use DockerHub for this purpose, for instance:\n\n\n$ export DEIS_REGISTRY=\"\"\n$ export IMAGE_PREFIX=<your DockerHub username>\n\n\n\n\nTo use quay.io:\n\n\n$ export DEIS_REGISTRY=quay.io/\n$ export IMAGE_PREFIX=<your quay.io username>\n\n\n\n\nNote the importance of the trailing slash.\n\n\nDev / Deployment Workflow\n\u00b6\n\n\nWith a functioning Kubernetes cluster and the officially released Deis components installed onto it, deployment and further testing of any Deis component you have made changes to is facilitated by replacing the officially released component with a custom built image that contains your changes.  Most Deis components include Makefiles with targets specifically intended to facilitate this workflow with minimal friction.\n\n\nIn the general case, this workflow looks like this:\n\n\n\n\nUpdate source code and commit your changes using \ngit\n\n\nUse \nmake build\n to build a new Docker image\n\n\nUse \nmake dev-release\n to generate Kubernetes manifest(s)\n\n\nUse \nmake deploy\n to restart the component using the updated manifest\n\n\n\n\nThis can be shortened to a one-liner using just the \ndeploy\n target:\n\n\n$ make deploy\n\n\n\n\nUseful Commands\n\u00b6\n\n\nOnce your customized Deis component has been deployed, here are some helpful commands that will allow you to inspect your cluster and to troubleshoot, if necessary:\n\n\nSee All Deis Pods\n\u00b6\n\n\n$ kubectl --namespace=deis get pods\n\n\n\n\nDescribe a Pod\n\u00b6\n\n\nThis is often useful for troubleshooting pods that are in pending or crashed states:\n\n\n$ kubectl --namespace=deis describe -f <pod name>\n\n\n\n\nTail Logs\n\u00b6\n\n\n$ kubectl --namespace=deis logs -f <pod name>\n\n\n\n\nDjango Shell\n\u00b6\n\n\nSpecific to \ndeis/controller\n\n\n$ kubectl --namespace=deis exec -it <pod name> -- python manage.py shell\n\n\n\n\nHave commands other Deis contributors might find useful? Send us a PR!\n\n\nPull Requests\n\u00b6\n\n\nSatisfied with your changes?  Share them!\n\n\nPlease read \nSubmitting a Pull Request\n. It contains a checklist of\nthings you should do when proposing a change to any Deis component.",
            "title": "Development Environment"
        },
        {
            "location": "/contributing/development-environment/#development-environment",
            "text": "This document is for developers who are interested in working directly on the Deis codebase. In this guide, we walk you through the process of setting up a development environment that is suitable for hacking on most Deis components.  We try to make it simple to hack on Deis components. However, there are necessarily several moving pieces and some setup required. We welcome any suggestions for automating or simplifying this process.   Note  The Deis team is actively engaged in containerizing Go and Python based development environments tailored specifically for Deis development in order to minimize the setup required.  This work is ongoing.  Refer to the  deis/router  project for a working example of a fully containerized development environment.   If you're just getting into the Deis codebase, look for GitHub issues with the label  easy-fix . These are more straightforward or low-risk issues and are a great way to become more familiar with Deis.",
            "title": "Development Environment"
        },
        {
            "location": "/contributing/development-environment/#prerequisites",
            "text": "In order to successfully compile and test Deis binaries and build Docker images of Deis components, the following are required:   git  Go 1.5 or later, with support for compiling to  linux/amd64  glide  golint  shellcheck  Docker  (in a non-Linux environment, you will additionally want  Docker Machine )   For  deis/controller , in particular, you will also need:   Python 2.7 or later (with  pip )  virtualenv ( sudo pip install virtualenv )   In most cases, you should simply install according to the instructions. There are a few special cases, though. We cover these below.",
            "title": "Prerequisites"
        },
        {
            "location": "/contributing/development-environment/#configuring-go",
            "text": "If your local workstation does not support the  linux/amd64  target environment, you will have to install Go from source with cross-compile support for that environment. This is because some of the components are built on your local machine and then injected into a Docker container.  Homebrew users can just install with cross compiling support:  $ brew install go --with-cc-common  It is also straightforward to build Go from source:  $ sudo su\n$ curl -sSL https://golang.org/dl/go1.5.src.tar.gz | tar -v -C /usr/local -xz\n$ cd /usr/local/go/src\n$ # compile Go for our default platform first, then add cross-compile support\n$ ./make.bash --no-clean\n$ GOOS=linux GOARCH=amd64 ./make.bash --no-clean  Once you can compile to  linux/amd64 , you should be able to compile Deis components as normal.",
            "title": "Configuring Go"
        },
        {
            "location": "/contributing/development-environment/#configuring-docker-machine-mac",
            "text": "Deis needs Docker for building images.  Docker utilizes a client/server architecture, and while the Docker client is available for Mac OS, the Docker server is dependent upon the Linux kernel.  Therefore, in order to use Docker on Mac OS,  Docker Machine  is used to facilitate running the Docker server within a  VirtualBox  VM.  Install Docker Machine according to the normal installation instructions, then use it to create a new VM:  $ docker-machine create deis-docker \\\n    --driver=virtualbox \\\n    --virtualbox-disk-size=100000 \\\n    --engine-insecure-registry 10.0.0.0/8 \\\n    --engine-insecure-registry 172.16.0.0/12 \\\n    --engine-insecure-registry 192.168.0.0/16 \\\n    --engine-insecure-registry 100.64.0.0/10  This will create a new virtual machine named  deis-docker  that will take up as much as 100,000 MB of disk space. The images you build may be large, so allocating a big disk is a good idea.  Once the  deis-docker  machine exists, source its values into your environment so your docker client knows how to use the new machine. You may even choose to add this to your bash profile or similar.  $ eval \"$(docker-machine env deis-docker)\"  After following these steps, some Docker Machine users report a slight delay (30 - 60 seconds) before the Docker server is ready.   Note  In subsequent steps, you may run a Docker registry within the  deis-docker  VM. Such a registry will not have a valid SSL certificate and will use HTTP instead of HTTPS. Such registries are implicitly untrusted by the Docker server (which is also running on the  deis-docker  VM).  In order for the Docker server to trust the insecure registry,  deis-docker  is explicitly created to trust all registries in the IP ranges that that are reserved for use by private networks.  The VM (and therefore the registry) will exist within such a range.  This will effectively permit Docker pulls and pushes to such a registry.",
            "title": "Configuring Docker Machine (Mac)"
        },
        {
            "location": "/contributing/development-environment/#fork-the-repository",
            "text": "Once the prerequisites have been met, we can begin to work with Deis components.  Begin at Github by forking whichever Deis project you would like to contribute to, then clone that fork locally.  Since Deis is predominantly written in Go, the best place to put it is under  $GOPATH/src/github.com/deis/ .  $ mkdir -p  $GOPATH/src/github.com/deis\n$ cd $GOPATH/src/github.com/deis\n$ git clone git@github.com:<username>/<component>.git\n$ cd <component>   Note  By checking out the forked copy into the namespace  github.com/deis/<component> , we are tricking the Go toolchain into seeing our fork as the \"official\" source tree.   If you are going to be issuing pull requests to the upstream repository from which you forked, we suggest configuring Git such that you can easily rebase your code to the upstream repository's master branch. There are various strategies for doing this, but the  most common  is to add an  upstream  remote:  $ git remote add upstream https://github.com/deisthree/<component>.git  For the sake of simplicity, you may want to point an environment variable to your Deis code - the directory containing one or more Deis components:  $ export DEIS=$GOPATH/src/github.com/deis  Throughout the rest of this document,  $DEIS  refers to that location.",
            "title": "Fork the Repository"
        },
        {
            "location": "/contributing/development-environment/#alternative-forking-with-a-pushurl",
            "text": "A number of Deis contributors prefer to pull directly from  deis/<component> , but push to  <username>/<component> . If that workflow suits you better, you can set it up this way:  $ git clone git@github.com:deis/<component>.git\n$ cd deis\n$ git config remote.origin.pushurl git@github.com:<username>/<component>.git  In this setup, fetching and pulling code will work directly with the upstream repository, while pushing code will send changes to your fork. This makes it easy to stay up to date, but also make changes and then issue pull requests.",
            "title": "Alternative: Forking with a Pushurl"
        },
        {
            "location": "/contributing/development-environment/#make-your-changes",
            "text": "With your development environment set up and the code you wish to work on forked and cloned, you can begin making your changes.",
            "title": "Make Your Changes"
        },
        {
            "location": "/contributing/development-environment/#test-your-changes",
            "text": "Deis components each include a comprehensive suite of automated tests, mostly written in Go. See  testing  for instructions on running the tests.",
            "title": "Test Your Changes"
        },
        {
            "location": "/contributing/development-environment/#deploying-your-changes",
            "text": "Although writing and executing tests are critical to ensuring code quality, most contributors will also want to deploy their changes to a live environment, whether to make use of those changes or to test them further.  The remainder of this section documents the procedure for running officially released Deis components in a development cluster and replacing any one of those with your customizations.",
            "title": "Deploying Your Changes"
        },
        {
            "location": "/contributing/development-environment/#running-a-kubernetes-cluster-for-development",
            "text": "To run a Kubernetes cluster locally or elsewhere to support your development activities, refer to Deis installation instructions  here .",
            "title": "Running a Kubernetes Cluster for Development"
        },
        {
            "location": "/contributing/development-environment/#using-a-development-registry",
            "text": "To facilitate deploying Docker images containing your changes to your Kubernetes cluster, you will need to make use of a Docker registry.  This is a location to where you can push your custom-built images and from where your Kubernetes cluster can retrieve those same images.  If your development cluster runs locally (in Minikube, for instance), the most efficient and economical means of achieving this is to run a Docker registry locally  as  a Docker container.  To facilitate this, most Deis components provide a make target to create such a registry:  $ make dev-registry  In a Linux environment, to begin using the registry:  export DEIS_REGISTRY=<IP of the host machine>:5000  In non-Linux environments:  export DEIS_REGISTRY=<IP of the deis-docker Docker Machine VM>:5000/  If your development cluster runs on a cloud provider such as Google Container Engine, a local registry such as the one above will not be accessible to your Kubernetes nodes.  In such cases, a public registry such as  DockerHub  or  quay.io  will suffice.  To use DockerHub for this purpose, for instance:  $ export DEIS_REGISTRY=\"\"\n$ export IMAGE_PREFIX=<your DockerHub username>  To use quay.io:  $ export DEIS_REGISTRY=quay.io/\n$ export IMAGE_PREFIX=<your quay.io username>  Note the importance of the trailing slash.",
            "title": "Using a Development Registry"
        },
        {
            "location": "/contributing/development-environment/#dev-deployment-workflow",
            "text": "With a functioning Kubernetes cluster and the officially released Deis components installed onto it, deployment and further testing of any Deis component you have made changes to is facilitated by replacing the officially released component with a custom built image that contains your changes.  Most Deis components include Makefiles with targets specifically intended to facilitate this workflow with minimal friction.  In the general case, this workflow looks like this:   Update source code and commit your changes using  git  Use  make build  to build a new Docker image  Use  make dev-release  to generate Kubernetes manifest(s)  Use  make deploy  to restart the component using the updated manifest   This can be shortened to a one-liner using just the  deploy  target:  $ make deploy",
            "title": "Dev / Deployment Workflow"
        },
        {
            "location": "/contributing/development-environment/#useful-commands",
            "text": "Once your customized Deis component has been deployed, here are some helpful commands that will allow you to inspect your cluster and to troubleshoot, if necessary:",
            "title": "Useful Commands"
        },
        {
            "location": "/contributing/development-environment/#see-all-deis-pods",
            "text": "$ kubectl --namespace=deis get pods",
            "title": "See All Deis Pods"
        },
        {
            "location": "/contributing/development-environment/#describe-a-pod",
            "text": "This is often useful for troubleshooting pods that are in pending or crashed states:  $ kubectl --namespace=deis describe -f <pod name>",
            "title": "Describe a Pod"
        },
        {
            "location": "/contributing/development-environment/#tail-logs",
            "text": "$ kubectl --namespace=deis logs -f <pod name>",
            "title": "Tail Logs"
        },
        {
            "location": "/contributing/development-environment/#django-shell",
            "text": "Specific to  deis/controller  $ kubectl --namespace=deis exec -it <pod name> -- python manage.py shell  Have commands other Deis contributors might find useful? Send us a PR!",
            "title": "Django Shell"
        },
        {
            "location": "/contributing/development-environment/#pull-requests",
            "text": "Satisfied with your changes?  Share them!  Please read  Submitting a Pull Request . It contains a checklist of\nthings you should do when proposing a change to any Deis component.",
            "title": "Pull Requests"
        },
        {
            "location": "/contributing/testing/",
            "text": "Testing Deis\n\u00b6\n\n\nEach Deis component is one among an ecosystem of such components - many of which integrate with one another - which makes testing each component thoroughly a matter of paramount importance.\n\n\nEach Deis component includes its own suite of style checks, \nunit tests\n, and black-box type \nfunctional tests\n.\n\n\nIntegration tests\n verify the behavior of the Deis components together as a system and are provided separately by the \ndeis/workflow-e2e\n project.\n\n\nGitHub pull requests for all Deis components are tested automatically by the \nTravis CI\n \ncontinuous integration\n system. Contributors should run the same tests locally before proposing any changes to the Deis codebase.\n\n\nSet Up the Environment\n\u00b6\n\n\nSuccessfully executing the unit and functional tests for any Deis component requires that the \nDevelopment Environment\n is set up first.\n\n\nRun the Tests\n\u00b6\n\n\nThe style checks, unit tests, and functional tests for each component can all be executed via make targets:\n\n\nTo execute style checks:\n\n\n$ make test-style\n\n\n\n\nTo execute unit tests:\n\n\n$ make test-unit\n\n\n\n\nTo execute functional tests:\n\n\n$ make test-functional\n\n\n\n\nTo execute style checks, unit tests, and functional tests all in one shot:\n\n\n$ make test\n\n\n\n\nTo execute integration tests, refer to \ndeis/workflow-e2e\n documentation.",
            "title": "Testing"
        },
        {
            "location": "/contributing/testing/#testing-deis",
            "text": "Each Deis component is one among an ecosystem of such components - many of which integrate with one another - which makes testing each component thoroughly a matter of paramount importance.  Each Deis component includes its own suite of style checks,  unit tests , and black-box type  functional tests .  Integration tests  verify the behavior of the Deis components together as a system and are provided separately by the  deis/workflow-e2e  project.  GitHub pull requests for all Deis components are tested automatically by the  Travis CI   continuous integration  system. Contributors should run the same tests locally before proposing any changes to the Deis codebase.",
            "title": "Testing Deis"
        },
        {
            "location": "/contributing/testing/#set-up-the-environment",
            "text": "Successfully executing the unit and functional tests for any Deis component requires that the  Development Environment  is set up first.",
            "title": "Set Up the Environment"
        },
        {
            "location": "/contributing/testing/#run-the-tests",
            "text": "The style checks, unit tests, and functional tests for each component can all be executed via make targets:  To execute style checks:  $ make test-style  To execute unit tests:  $ make test-unit  To execute functional tests:  $ make test-functional  To execute style checks, unit tests, and functional tests all in one shot:  $ make test  To execute integration tests, refer to  deis/workflow-e2e  documentation.",
            "title": "Run the Tests"
        },
        {
            "location": "/contributing/submitting-a-pull-request/",
            "text": "Submitting a Pull Request\n\u00b6\n\n\nProposed changes to Deis projects are made as GitHub pull requests.\n\n\nDesign Document\n\u00b6\n\n\nBefore opening a pull request, ensure your change also references a design document if the contribution is substantial. For more information, see \nDesign Documents\n.\n\n\nSingle Issue\n\u00b6\n\n\nIt's hard to reach agreement on the merit of a PR when it isn't focused. When fixing an issue or implementing a new feature, resist the temptation to refactor nearby code or to fix that potential bug you noticed. Instead, open a separate issue or pull request. Keeping concerns separated allows pull requests to be tested, reviewed, and merged more quickly.\n\n\nSquash and rebase the commit or commits in your pull request into logical units of work with \ngit\n. Include tests and documentation changes in the same commit, so that a revert would remove all traces of the feature or fix.\n\n\nMost pull requests will reference a GitHub issue. In the PR description - not in the commit itself - include a line such as \"closes #1234\". The issue referenced will automatically be closed when your PR is merged.\n\n\nInclude Tests\n\u00b6\n\n\nIf you significantly alter or add functionality to a component that impacts the broader Deis Workflow PaaS, you should submit a complementary PR to modify or amend end-to-end integration tests.  These integration tests can be found in the \ndeis/workflow-e2e\n repository.\n\n\nSee \ntesting\n for more information.\n\n\nInclude Docs\n\u00b6\n\n\nChanges to any Deis Workflow component that could affect a user's experience also require a change or addition to the relevant documentation. For most Deis components, this involves updating the component's \nown\n documentation. In some cases where a component is tightly integrated into \ndeis/workflow\n, its documentation must also be updated.\n\n\nCross-repo commits\n\u00b6\n\n\nIf a pull request is part of a larger piece of work involving one or more additional commits in other Workflow repositories, these commits can be referenced in the last PR to be submitted.  The downstream \ne2e test job\n will then supply every referenced commit (derived from PR issue number supplied) to the test runner so it can source the necessary Docker images for inclusion in the generated Workflow chart to be tested.\n\n\nFor example, consider paired commits in \ndeis/controller\n and \ndeis/workflow-e2e\n.  The commit body for the first PR in \ndeis/workflow-e2e\n would look like:\n\n\nfeat(foo_test): add e2e test for feature foo\n\n[skip e2e] test for controller#42\n\n\n\n\nAdding \n[skip e2e]\n forgoes the e2e tests on this commit. This and any other required PRs aside from the final PR should be submitted first, so that their respective build and image push jobs run.\n\n\nLastly, the final PR in \ndeis/controller\n should be created with the required PR number(s) listed, in the form of \n[Rr]equires <repoName>#<pullRequestNumber>\n, for use by the downstream e2e run.\n\n\nfeat(foo): add feature foo\n\nRequires workflow-e2e#42\n\n\n\n\nCode Standards\n\u00b6\n\n\nDeis components are implemented in \nGo\n and \nPython\n. For both languages, we agree with \nThe Zen of Python\n, which emphasizes simple over clever. Readability counts.\n\n\nGo code should always be run through \ngofmt\n on the default settings. Lines of code may be up to 99 characters long. Documentation strings and tests are required for all exported functions. Use of third-party go packages should be minimal, but when doing so, such dependencies should be managed via the \nglide\n tool.\n\n\nPython code should always adhere to \nPEP8\n, the python code style guide, with the exception that lines of code may be up to 99 characters long. Docstrings and tests are required for all public methods, although the \nflake8\n tool used by Deis does not enforce this.\n\n\nCommit Style\n\u00b6\n\n\nWe follow a convention for commit messages borrowed from CoreOS, who borrowed theirs\nfrom AngularJS. This is an example of a commit:\n\n\nfeat(scripts/test-cluster): add a cluster test command\n\nthis uses tmux to setup a test cluster that you can easily kill and\nstart for debugging.\n\n\n\n\nTo make it more formal, it looks something like this:\n\n\n{type}({scope}): {subject}\n<BLANK LINE>\n{body}\n<BLANK LINE>\n{footer}\n\n\n\n\nThe allowed \n{types}\n are as follows:\n\n\n\n\nfeat\n -> feature\n\n\nfix\n -> bug fix\n\n\ndocs\n -> documentation\n\n\nstyle\n -> formatting\n\n\nref\n -> refactoring code\n\n\ntest\n -> adding missing tests\n\n\nchore\n -> maintenance\n\n\n\n\nThe \n{scope}\n can be anything specifying the location(s) of the commit change(s).\n\n\nThe \n{subject}\n needs to be an imperative, present tense verb: \u201cchange\u201d, not \u201cchanged\u201d nor\n\u201cchanges\u201d. The first letter should not be capitalized, and there is no dot (.) at the end.\n\n\nJust like the \n{subject}\n, the message \n{body}\n needs to be in the present tense, and includes\nthe motivation for the change, as well as a contrast with the previous behavior. The first\nletter in a paragraph must be capitalized.\n\n\nAll breaking changes need to be mentioned in the \n{footer}\n with the description of the\nchange, the justification behind the change and any migration notes required.\n\n\nAny line of the commit message cannot be longer than 72 characters, with the subject line\nlimited to 50 characters. This allows the message to be easier to read on GitHub as well\nas in various git tools.\n\n\nMerge Approval\n\u00b6\n\n\nAny code change - other than a simple typo fix or one-line documentation change - requires at least two \nDeis maintainers\n to accept it.  Maintainers tag pull requests with \"\nLGTM1\n\" and \"\nLGTM2\n\" (Looks Good To Me) labels to indicate acceptance.\n\n\nNo pull requests can be merged until at least one core maintainer signs off with an LGTM. The other LGTM can come from either a core maintainer or contributing maintainer.\n\n\nIf the PR is from a Deis maintainer, then he or she should be the one to close it. This keeps the commit stream clean and gives the maintainer the benefit of revisiting the PR before deciding whether or not to merge the changes.\n\n\nAn exception to this is when an errant commit needs to be reverted urgently. If necessary, a PR that only reverts a previous commit can be merged without waiting for LGTM approval.",
            "title": "Submitting a Pull Request"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#submitting-a-pull-request",
            "text": "Proposed changes to Deis projects are made as GitHub pull requests.",
            "title": "Submitting a Pull Request"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#design-document",
            "text": "Before opening a pull request, ensure your change also references a design document if the contribution is substantial. For more information, see  Design Documents .",
            "title": "Design Document"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#single-issue",
            "text": "It's hard to reach agreement on the merit of a PR when it isn't focused. When fixing an issue or implementing a new feature, resist the temptation to refactor nearby code or to fix that potential bug you noticed. Instead, open a separate issue or pull request. Keeping concerns separated allows pull requests to be tested, reviewed, and merged more quickly.  Squash and rebase the commit or commits in your pull request into logical units of work with  git . Include tests and documentation changes in the same commit, so that a revert would remove all traces of the feature or fix.  Most pull requests will reference a GitHub issue. In the PR description - not in the commit itself - include a line such as \"closes #1234\". The issue referenced will automatically be closed when your PR is merged.",
            "title": "Single Issue"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#include-tests",
            "text": "If you significantly alter or add functionality to a component that impacts the broader Deis Workflow PaaS, you should submit a complementary PR to modify or amend end-to-end integration tests.  These integration tests can be found in the  deis/workflow-e2e  repository.  See  testing  for more information.",
            "title": "Include Tests"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#include-docs",
            "text": "Changes to any Deis Workflow component that could affect a user's experience also require a change or addition to the relevant documentation. For most Deis components, this involves updating the component's  own  documentation. In some cases where a component is tightly integrated into  deis/workflow , its documentation must also be updated.",
            "title": "Include Docs"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#cross-repo-commits",
            "text": "If a pull request is part of a larger piece of work involving one or more additional commits in other Workflow repositories, these commits can be referenced in the last PR to be submitted.  The downstream  e2e test job  will then supply every referenced commit (derived from PR issue number supplied) to the test runner so it can source the necessary Docker images for inclusion in the generated Workflow chart to be tested.  For example, consider paired commits in  deis/controller  and  deis/workflow-e2e .  The commit body for the first PR in  deis/workflow-e2e  would look like:  feat(foo_test): add e2e test for feature foo\n\n[skip e2e] test for controller#42  Adding  [skip e2e]  forgoes the e2e tests on this commit. This and any other required PRs aside from the final PR should be submitted first, so that their respective build and image push jobs run.  Lastly, the final PR in  deis/controller  should be created with the required PR number(s) listed, in the form of  [Rr]equires <repoName>#<pullRequestNumber> , for use by the downstream e2e run.  feat(foo): add feature foo\n\nRequires workflow-e2e#42",
            "title": "Cross-repo commits"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#code-standards",
            "text": "Deis components are implemented in  Go  and  Python . For both languages, we agree with  The Zen of Python , which emphasizes simple over clever. Readability counts.  Go code should always be run through  gofmt  on the default settings. Lines of code may be up to 99 characters long. Documentation strings and tests are required for all exported functions. Use of third-party go packages should be minimal, but when doing so, such dependencies should be managed via the  glide  tool.  Python code should always adhere to  PEP8 , the python code style guide, with the exception that lines of code may be up to 99 characters long. Docstrings and tests are required for all public methods, although the  flake8  tool used by Deis does not enforce this.",
            "title": "Code Standards"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#commit-style",
            "text": "We follow a convention for commit messages borrowed from CoreOS, who borrowed theirs\nfrom AngularJS. This is an example of a commit:  feat(scripts/test-cluster): add a cluster test command\n\nthis uses tmux to setup a test cluster that you can easily kill and\nstart for debugging.  To make it more formal, it looks something like this:  {type}({scope}): {subject}\n<BLANK LINE>\n{body}\n<BLANK LINE>\n{footer}  The allowed  {types}  are as follows:   feat  -> feature  fix  -> bug fix  docs  -> documentation  style  -> formatting  ref  -> refactoring code  test  -> adding missing tests  chore  -> maintenance   The  {scope}  can be anything specifying the location(s) of the commit change(s).  The  {subject}  needs to be an imperative, present tense verb: \u201cchange\u201d, not \u201cchanged\u201d nor\n\u201cchanges\u201d. The first letter should not be capitalized, and there is no dot (.) at the end.  Just like the  {subject} , the message  {body}  needs to be in the present tense, and includes\nthe motivation for the change, as well as a contrast with the previous behavior. The first\nletter in a paragraph must be capitalized.  All breaking changes need to be mentioned in the  {footer}  with the description of the\nchange, the justification behind the change and any migration notes required.  Any line of the commit message cannot be longer than 72 characters, with the subject line\nlimited to 50 characters. This allows the message to be easier to read on GitHub as well\nas in various git tools.",
            "title": "Commit Style"
        },
        {
            "location": "/contributing/submitting-a-pull-request/#merge-approval",
            "text": "Any code change - other than a simple typo fix or one-line documentation change - requires at least two  Deis maintainers  to accept it.  Maintainers tag pull requests with \" LGTM1 \" and \" LGTM2 \" (Looks Good To Me) labels to indicate acceptance.  No pull requests can be merged until at least one core maintainer signs off with an LGTM. The other LGTM can come from either a core maintainer or contributing maintainer.  If the PR is from a Deis maintainer, then he or she should be the one to close it. This keeps the commit stream clean and gives the maintainer the benefit of revisiting the PR before deciding whether or not to merge the changes.  An exception to this is when an errant commit needs to be reverted urgently. If necessary, a PR that only reverts a previous commit can be merged without waiting for LGTM approval.",
            "title": "Merge Approval"
        },
        {
            "location": "/contributing/community/",
            "text": "Community\n\u00b6\n\n\nDeis software is fully open source. As such, the \"Deis community\" consists of anyone who uses the Deis software and participates in its evolution, whether by answering questions, finding bugs, suggesting enhancements, or writing documentation or code.\n\n\nDeis development is coordinated through numerous project repositories \non GitHub\n. Anyone can check out the source code for any Deis component, fork it, make improvements, and create a pull request to offer those changes back to the Deis community.\n\n\nEngine Yard\n maintains the numerous Deis projects, and as such, decides what ends up in the official GitHub repositories. Deis depends on the contributions of the community; the maintainers will not ignore pull requests or issues.\n\n\nDeis uses the timeless, highly efficient, and totally unfair system known as \"Benevolent Dictator for Life\" (\nBDFL\n). \nGabriel Monroy\n, the creator of Deis, is our BDFL and has final say over all decisions related to Deis.\n\n\nOpen Source Bounties\n\u00b6\n\n\nDeis projects are bounty-friendly.  We believe open source bounty sites can be constructive tools in the development of open source software. Community members are encouraged to a) offer bounties and b) receive bounties for open source contributions that benefit everyone. The Deis maintainers, however, will not accept bounties on this project but are more than happy to help community members attempting bounties.",
            "title": "Community"
        },
        {
            "location": "/contributing/community/#community",
            "text": "Deis software is fully open source. As such, the \"Deis community\" consists of anyone who uses the Deis software and participates in its evolution, whether by answering questions, finding bugs, suggesting enhancements, or writing documentation or code.  Deis development is coordinated through numerous project repositories  on GitHub . Anyone can check out the source code for any Deis component, fork it, make improvements, and create a pull request to offer those changes back to the Deis community.  Engine Yard  maintains the numerous Deis projects, and as such, decides what ends up in the official GitHub repositories. Deis depends on the contributions of the community; the maintainers will not ignore pull requests or issues.  Deis uses the timeless, highly efficient, and totally unfair system known as \"Benevolent Dictator for Life\" ( BDFL ).  Gabriel Monroy , the creator of Deis, is our BDFL and has final say over all decisions related to Deis.",
            "title": "Community"
        },
        {
            "location": "/contributing/community/#open-source-bounties",
            "text": "Deis projects are bounty-friendly.  We believe open source bounty sites can be constructive tools in the development of open source software. Community members are encouraged to a) offer bounties and b) receive bounties for open source contributions that benefit everyone. The Deis maintainers, however, will not accept bounties on this project but are more than happy to help community members attempting bounties.",
            "title": "Open Source Bounties"
        },
        {
            "location": "/contributing/triaging-issues/",
            "text": "Triaging Issues\n\u00b6\n\n\nIssue triage provides an important way to contribute to an open source project.  Triage helps ensure issues resolve quickly by:\n\n\n\n\nDescribing the issue's intent and purpose is conveyed precisely. This is necessary because it can be difficult for an issue to explain how an end user experiences an problem and what actions they took.\n\n\nGiving a contributor the information they need before they commit to resolving an issue.\n\n\nLowering the issue count by preventing duplicate issues.\n\n\nStreamlining the development process by preventing duplicate discussions.\n\n\n\n\nIf you don't have time to code, consider helping with triage. The community will thank you for saving them time by spending some of yours.\n\n\nEnsure the Issue Contains Basic Information\n\u00b6\n\n\nBefore triaging an issue very far, make sure that the issue's author provided the standard issue information. This will help you make an educated recommendation on how this to categorize the issue. Standard information that should be included in most issues are things such as:\n\n\n\n\nthe version(s) of Deis this issue affects\n\n\na reproducible case if this is a bug\n\n\npage URL if this is a docs issue or the name of a man page\n\n\n\n\nDepending on the issue, you might not feel all this information is needed. Use your best judgment. If you cannot triage an issue using what its author provided, explain kindly to the author that they must provide the above information to clarify the problem.\n\n\nIf the author provides the recommended information but you are still unable to triage the issue, request additional information. Do this kindly and politely because you are asking for more of the author's time.\n\n\nIf the author does not respond requested information within the timespan of a week, close the issue with a kind note stating that the author can request for the issue to be reopened when the necessary information is provided.\n\n\nClassifying the Issue\n\u00b6\n\n\nAn issue can have multiple of the following labels:\n\n\nIssue Kind\n\u00b6\n\n\n\n\n\n\n\n\nKind\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbug\n\n\nBugs are bugs. The cause may or may not be known at triage time so debugging should be taken account into the time estimate.\n\n\n\n\n\n\ndocs\n\n\nWriting documentation, man pages, articles, blogs, or other significant word-driven task.\n\n\n\n\n\n\nenhancement\n\n\nEnhancements can drastically improve usability or performance of a component.\n\n\n\n\n\n\nquestion\n\n\nContains a user or contributor question requiring a response.\n\n\n\n\n\n\nsecurity\n\n\nSecurity-related issues such as TLS encryption, network segregation, authn/authz features, etc.\n\n\n\n\n\n\n\n\nFunctional Area\n\u00b6\n\n\n\n\nbuilder\n\n\ncache\n\n\ncontrib and provisioning\n\n\nclient\n\n\ncontroller\n\n\ndatabase\n\n\ndocs\n\n\nkubernetes\n\n\nregistry\n\n\nrouter\n\n\nstore (Ceph)\n\n\ntests\n\n\n\n\nEasy Fix\n\u00b6\n\n\n\"Easy Fix\" issues are a way for a new contributor to find issues that are fit for their experience level. These issues are typically for users who are new to Deis, and possibly Go, and is looking to help while learning the basics.\n\n\nPrioritizing issues\n\u00b6\n\n\nWhen attached to a specific milestone, an issue can be attributed one of the following labels to indicate their degree of priority.\n\n\n\n\n\n\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npriority\u00a00\n\n\nUrgent: Security, critical bugs, blocking issues. Drop everything and fix this today, then consider creating a patch release.\n\n\n\n\n\n\npriority\u00a01\n\n\nSerious: Impedes user actions or is a regression. Fix this before the next planned release.\n\n\n\n\n\n\n\n\nAnd that's it. That should be all the information required for a new or existing contributor to come in an resolve an issue.",
            "title": "Triaging Issues"
        },
        {
            "location": "/contributing/triaging-issues/#triaging-issues",
            "text": "Issue triage provides an important way to contribute to an open source project.  Triage helps ensure issues resolve quickly by:   Describing the issue's intent and purpose is conveyed precisely. This is necessary because it can be difficult for an issue to explain how an end user experiences an problem and what actions they took.  Giving a contributor the information they need before they commit to resolving an issue.  Lowering the issue count by preventing duplicate issues.  Streamlining the development process by preventing duplicate discussions.   If you don't have time to code, consider helping with triage. The community will thank you for saving them time by spending some of yours.",
            "title": "Triaging Issues"
        },
        {
            "location": "/contributing/triaging-issues/#ensure-the-issue-contains-basic-information",
            "text": "Before triaging an issue very far, make sure that the issue's author provided the standard issue information. This will help you make an educated recommendation on how this to categorize the issue. Standard information that should be included in most issues are things such as:   the version(s) of Deis this issue affects  a reproducible case if this is a bug  page URL if this is a docs issue or the name of a man page   Depending on the issue, you might not feel all this information is needed. Use your best judgment. If you cannot triage an issue using what its author provided, explain kindly to the author that they must provide the above information to clarify the problem.  If the author provides the recommended information but you are still unable to triage the issue, request additional information. Do this kindly and politely because you are asking for more of the author's time.  If the author does not respond requested information within the timespan of a week, close the issue with a kind note stating that the author can request for the issue to be reopened when the necessary information is provided.",
            "title": "Ensure the Issue Contains Basic Information"
        },
        {
            "location": "/contributing/triaging-issues/#classifying-the-issue",
            "text": "An issue can have multiple of the following labels:",
            "title": "Classifying the Issue"
        },
        {
            "location": "/contributing/triaging-issues/#issue-kind",
            "text": "Kind  Description      bug  Bugs are bugs. The cause may or may not be known at triage time so debugging should be taken account into the time estimate.    docs  Writing documentation, man pages, articles, blogs, or other significant word-driven task.    enhancement  Enhancements can drastically improve usability or performance of a component.    question  Contains a user or contributor question requiring a response.    security  Security-related issues such as TLS encryption, network segregation, authn/authz features, etc.",
            "title": "Issue Kind"
        },
        {
            "location": "/contributing/triaging-issues/#functional-area",
            "text": "builder  cache  contrib and provisioning  client  controller  database  docs  kubernetes  registry  router  store (Ceph)  tests",
            "title": "Functional Area"
        },
        {
            "location": "/contributing/triaging-issues/#easy-fix",
            "text": "\"Easy Fix\" issues are a way for a new contributor to find issues that are fit for their experience level. These issues are typically for users who are new to Deis, and possibly Go, and is looking to help while learning the basics.",
            "title": "Easy Fix"
        },
        {
            "location": "/contributing/triaging-issues/#prioritizing-issues",
            "text": "When attached to a specific milestone, an issue can be attributed one of the following labels to indicate their degree of priority.     Priority  Description      priority\u00a00  Urgent: Security, critical bugs, blocking issues. Drop everything and fix this today, then consider creating a patch release.    priority\u00a01  Serious: Impedes user actions or is a regression. Fix this before the next planned release.     And that's it. That should be all the information required for a new or existing contributor to come in an resolve an issue.",
            "title": "Prioritizing issues"
        },
        {
            "location": "/contributing/conduct/",
            "text": "Conduct\n\u00b6\n\n\nThe Deis community welcomes and encourages participation by \neveryone\n.\n\n\nNo matter how you identify yourself or how others perceive you: we welcome you. We welcome contributions from everyone as long as they interact constructively with our community.\n\n\nThe Deis developer community continues to grow, and it is inevitable that disagreements and conflict will arise. We ask that participants conduct themselves according to these principles:\n\n\n\n\n\n\nBe welcoming, friendly, and patient.\n\n\n\n\n\n\nBe considerate.\n\n\n\n\n\n\nYour work will be used by other people, and you in turn will depend on the work of others. Any decision you take will affect users and colleagues, and you should take those consequences into account when making decisions. Remember that we're a world-wide community, so you might not be communicating in someone else's primary language.\n\n\n\n\nBe respectful.\n\n\n\n\nNot all of us will agree all the time, but disagreement is no excuse for poor behavior and bad manners. We might all experience some frustration now and then, but we cannot allow that frustration to turn into a personal attack. It\u2019s important to remember that a community where people feel uncomfortable or threatened is not a productive one.\n\n\n\n\nBe careful in the words that you choose.\n\n\n\n\nBe kind to others. Do not insult or put down other participants. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are never appropriate for the community.\n\n\n(Thanks to the \nDebian\n and \nDjango\n communities for their text and\ntheir inspiration.)",
            "title": "Conduct"
        },
        {
            "location": "/contributing/conduct/#conduct",
            "text": "The Deis community welcomes and encourages participation by  everyone .  No matter how you identify yourself or how others perceive you: we welcome you. We welcome contributions from everyone as long as they interact constructively with our community.  The Deis developer community continues to grow, and it is inevitable that disagreements and conflict will arise. We ask that participants conduct themselves according to these principles:    Be welcoming, friendly, and patient.    Be considerate.    Your work will be used by other people, and you in turn will depend on the work of others. Any decision you take will affect users and colleagues, and you should take those consequences into account when making decisions. Remember that we're a world-wide community, so you might not be communicating in someone else's primary language.   Be respectful.   Not all of us will agree all the time, but disagreement is no excuse for poor behavior and bad manners. We might all experience some frustration now and then, but we cannot allow that frustration to turn into a personal attack. It\u2019s important to remember that a community where people feel uncomfortable or threatened is not a productive one.   Be careful in the words that you choose.   Be kind to others. Do not insult or put down other participants. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are never appropriate for the community.  (Thanks to the  Debian  and  Django  communities for their text and\ntheir inspiration.)",
            "title": "Conduct"
        },
        {
            "location": "/contributing/maintainers/",
            "text": "Deis Maintainers\n\u00b6\n\n\nThis document serves to describe the leadership structure of the Deis project, and list the current\nproject maintainers.\n\n\nWhat is a maintainer?\n\u00b6\n\n\n(Unabashedly stolen from the \nDocker\n project)\n\n\nThere are different types of maintainers, with different responsibilities, but\nall maintainers have 3 things in common:\n\n\n\n\nThey share responsibility in the project's success.\n\n\nThey have made a long-term, recurring time investment to improve the project.\n\n\nThey spend that time doing whatever needs to be done, not necessarily what\nis the most interesting or fun.\n\n\n\n\nMaintainers are often under-appreciated, because their work is harder to appreciate.\nIt's easy to appreciate a really cool and technically advanced feature. It's harder\nto appreciate the absence of bugs, the slow but steady improvement in stability,\nor the reliability of a release process. But those things distinguish a good\nproject from a great one.\n\n\nDeis maintainers\n\u00b6\n\n\nDeis has two groups of maintainers in addition to our beloved Benevolent Dictator for Life.\n\n\nBDFL\n\u00b6\n\n\nDeis follows the timeless, highly efficient and totally unfair system known as \nBenevolent dictator\nfor life\n.\n\n\nGabriel Monroy (\n@gabrtv\n), as creator of the Deis project, serves as our\nproject's BDFL. While the day-to-day project management is carried out by the maintainers, Gabriel\nserves as the final arbiter of any disputes and has the final say on project direction.\n\n\nCore maintainers\n\u00b6\n\n\nCore maintainers are exceptionally knowledgeable about all areas of Deis. Some maintainers work on Deis\nfull-time, although this is not a requirement.\n\n\nThe duties of a core maintainer include:\n\n\n\n\nClassify and respond to GitHub issues and review pull requests\n\n\nHelp to shape the Deis roadmap and lead efforts to accomplish roadmap milestones\n\n\nParticipate actively in feature development and bug fixing\n\n\nAnswer questions and help users in the \nDeis #community Slack channel\n\n\n\n\nThe current list of core maintainers can be seen \nhere\n.\n\n\nNo pull requests can be merged until at least one core maintainer signs off with an\n\nLGTM\n. The other LGTM can\ncome from either a core maintainer or contributing maintainer.\n\n\nContributing maintainers\n\u00b6\n\n\nContributing maintainers are exceptionally knowledgeable about some but not necessarily all areas\nof Deis, and are often selected due to specific domain knowledge that complements the project (but\na willingness to continually contribute to the project is most important!). Often,\ncore maintainers will ask a contributing maintainer to weigh in on issues, pull requests, or\nconversations where the contributing maintainer is knowledgeable.\n\n\nThe duties of a contributing maintainer are very similar to those of a core maintainer, but they are limited to areas of the Deis project where the contributing maintainer is knowledgeable.\n\n\nContributing maintainers are defined in practice as those who have write access to the Deis repository. All maintainers can review pull requests and add LGTM labels as appropriate.\n\n\nBecoming a maintainer\n\u00b6\n\n\nThe Deis project wouldn't be where it is today without its community. Many of the project's\ncommunity members embody the spirit of maintainership, and have contributed substantially to\nthe project.\n\n\nThe contributing maintainers group was created in part so that exceptional members of the community\nwho have an interest in the continued success of the project have the opportunity to join the\ncore maintainers in guiding the future of Deis.\n\n\nGenerally, potential contributing maintainers are selected by the Deis core maintainers based in\npart on the following criteria:\n\n\n\n\nSustained contributions to the project over a period of time (usually months)\n\n\nA willingness to help Deis users on GitHub and in the \nDeis #community Slack channel\n\n\nA friendly attitude :)\n\n\n\n\nThe Deis core maintainers must unanimously agree before inviting a community member to join as a\ncontributing maintainer, although in many cases the candidate has already been acting in the\ncapacity of a contributing maintainer for some time, and has been consulted on issues, pull requests,\netc.",
            "title": "Maintainers"
        },
        {
            "location": "/contributing/maintainers/#deis-maintainers",
            "text": "This document serves to describe the leadership structure of the Deis project, and list the current\nproject maintainers.",
            "title": "Deis Maintainers"
        },
        {
            "location": "/contributing/maintainers/#what-is-a-maintainer",
            "text": "(Unabashedly stolen from the  Docker  project)  There are different types of maintainers, with different responsibilities, but\nall maintainers have 3 things in common:   They share responsibility in the project's success.  They have made a long-term, recurring time investment to improve the project.  They spend that time doing whatever needs to be done, not necessarily what\nis the most interesting or fun.   Maintainers are often under-appreciated, because their work is harder to appreciate.\nIt's easy to appreciate a really cool and technically advanced feature. It's harder\nto appreciate the absence of bugs, the slow but steady improvement in stability,\nor the reliability of a release process. But those things distinguish a good\nproject from a great one.",
            "title": "What is a maintainer?"
        },
        {
            "location": "/contributing/maintainers/#deis-maintainers_1",
            "text": "Deis has two groups of maintainers in addition to our beloved Benevolent Dictator for Life.",
            "title": "Deis maintainers"
        },
        {
            "location": "/contributing/maintainers/#bdfl",
            "text": "Deis follows the timeless, highly efficient and totally unfair system known as  Benevolent dictator\nfor life .  Gabriel Monroy ( @gabrtv ), as creator of the Deis project, serves as our\nproject's BDFL. While the day-to-day project management is carried out by the maintainers, Gabriel\nserves as the final arbiter of any disputes and has the final say on project direction.",
            "title": "BDFL"
        },
        {
            "location": "/contributing/maintainers/#core-maintainers",
            "text": "Core maintainers are exceptionally knowledgeable about all areas of Deis. Some maintainers work on Deis\nfull-time, although this is not a requirement.  The duties of a core maintainer include:   Classify and respond to GitHub issues and review pull requests  Help to shape the Deis roadmap and lead efforts to accomplish roadmap milestones  Participate actively in feature development and bug fixing  Answer questions and help users in the  Deis #community Slack channel   The current list of core maintainers can be seen  here .  No pull requests can be merged until at least one core maintainer signs off with an LGTM . The other LGTM can\ncome from either a core maintainer or contributing maintainer.",
            "title": "Core maintainers"
        },
        {
            "location": "/contributing/maintainers/#contributing-maintainers",
            "text": "Contributing maintainers are exceptionally knowledgeable about some but not necessarily all areas\nof Deis, and are often selected due to specific domain knowledge that complements the project (but\na willingness to continually contribute to the project is most important!). Often,\ncore maintainers will ask a contributing maintainer to weigh in on issues, pull requests, or\nconversations where the contributing maintainer is knowledgeable.  The duties of a contributing maintainer are very similar to those of a core maintainer, but they are limited to areas of the Deis project where the contributing maintainer is knowledgeable.  Contributing maintainers are defined in practice as those who have write access to the Deis repository. All maintainers can review pull requests and add LGTM labels as appropriate.",
            "title": "Contributing maintainers"
        },
        {
            "location": "/contributing/maintainers/#becoming-a-maintainer",
            "text": "The Deis project wouldn't be where it is today without its community. Many of the project's\ncommunity members embody the spirit of maintainership, and have contributed substantially to\nthe project.  The contributing maintainers group was created in part so that exceptional members of the community\nwho have an interest in the continued success of the project have the opportunity to join the\ncore maintainers in guiding the future of Deis.  Generally, potential contributing maintainers are selected by the Deis core maintainers based in\npart on the following criteria:   Sustained contributions to the project over a period of time (usually months)  A willingness to help Deis users on GitHub and in the  Deis #community Slack channel  A friendly attitude :)   The Deis core maintainers must unanimously agree before inviting a community member to join as a\ncontributing maintainer, although in many cases the candidate has already been acting in the\ncapacity of a contributing maintainer for some time, and has been consulted on issues, pull requests,\netc.",
            "title": "Becoming a maintainer"
        },
        {
            "location": "/reference-guide/migration/",
            "text": "Migrating from Deis v1\n\u00b6\n\n\nWorkflow uses \nkubectl\n and \nhelm\n to manage the cluster. These tools are\nequivalent to Deis v1's \nfleetctl\n and \ndeisctl\n. These two tools are used\nfor managing the cluster's state, installing the platform and inspecting its state.\n\n\nThis document is a \"cheat sheet\" for users migrating from Deis v1 to Workflow (v2). It lists most of\nthe known commands administrators would use with \ndeisctl\n and translates their usage in Workflow.\n\n\nListing all Components\n\u00b6\n\n\n# Deis v1\n$ deisctl list\n\n# Workflow\n$ kubectl --namespace=deis get deployments\n\n\n\n\nListing all Nodes\n\u00b6\n\n\n# Deis v1\n$ fleetctl list-machines\n\n# Workflow\n$ kubectl get nodes\n\n\n\n\nCustom Configuration\n\u00b6\n\n\n# Deis v1\n$ deisctl config controller set registrationMode=admin_only\n\n# Workflow\n$ kubectl --namespace=deis patch deployment deis-controller -p '{\"spec\":{\"containers\":{\"env\":[{\"name\":\"REGISTRATION_MODE\",\"value\":\"admin_only\"}]}}}'\n\n\n\n\nView Component Configuration\n\u00b6\n\n\n# Deis v1\n$ deisctl config router get bodySize\n\n# Workflow\n$ kubectl --namespace=deis get deployment deis-router -o yaml\n\n\n\n\nRunning a Command Within a Component\n\u00b6\n\n\n# Deis v1\n$ deisctl dock router@1\n\n# Workflow\n$ kubectl get po --namespace=deis -l app=deis-router --output=\"jsonpath={.items[0].metadata.name}\"\ndeis-router-1930478716-iz6oq\n$ kubectl --namespace=deis exec -it deis-router-1930478716-iz6oq bash\n\n\n\n\nFollow the Logs for a Component\n\u00b6\n\n\n# Deis v1\n$ fleetctl journal -f deis-builder\n\n# Workflow\n$ kubectl get po --namespace=deis -l app=deis-builder --output=\"jsonpath={.items[0].metadata.name}\"\ndeis-builder-1851090495-5n0sn\n$ kubectl --namespace=deis logs -f deis-builder-1851090495-5n0sn",
            "title": "Migrating from Deis v1"
        },
        {
            "location": "/reference-guide/migration/#migrating-from-deis-v1",
            "text": "Workflow uses  kubectl  and  helm  to manage the cluster. These tools are\nequivalent to Deis v1's  fleetctl  and  deisctl . These two tools are used\nfor managing the cluster's state, installing the platform and inspecting its state.  This document is a \"cheat sheet\" for users migrating from Deis v1 to Workflow (v2). It lists most of\nthe known commands administrators would use with  deisctl  and translates their usage in Workflow.",
            "title": "Migrating from Deis v1"
        },
        {
            "location": "/reference-guide/migration/#listing-all-components",
            "text": "# Deis v1\n$ deisctl list\n\n# Workflow\n$ kubectl --namespace=deis get deployments",
            "title": "Listing all Components"
        },
        {
            "location": "/reference-guide/migration/#listing-all-nodes",
            "text": "# Deis v1\n$ fleetctl list-machines\n\n# Workflow\n$ kubectl get nodes",
            "title": "Listing all Nodes"
        },
        {
            "location": "/reference-guide/migration/#custom-configuration",
            "text": "# Deis v1\n$ deisctl config controller set registrationMode=admin_only\n\n# Workflow\n$ kubectl --namespace=deis patch deployment deis-controller -p '{\"spec\":{\"containers\":{\"env\":[{\"name\":\"REGISTRATION_MODE\",\"value\":\"admin_only\"}]}}}'",
            "title": "Custom Configuration"
        },
        {
            "location": "/reference-guide/migration/#view-component-configuration",
            "text": "# Deis v1\n$ deisctl config router get bodySize\n\n# Workflow\n$ kubectl --namespace=deis get deployment deis-router -o yaml",
            "title": "View Component Configuration"
        },
        {
            "location": "/reference-guide/migration/#running-a-command-within-a-component",
            "text": "# Deis v1\n$ deisctl dock router@1\n\n# Workflow\n$ kubectl get po --namespace=deis -l app=deis-router --output=\"jsonpath={.items[0].metadata.name}\"\ndeis-router-1930478716-iz6oq\n$ kubectl --namespace=deis exec -it deis-router-1930478716-iz6oq bash",
            "title": "Running a Command Within a Component"
        },
        {
            "location": "/reference-guide/migration/#follow-the-logs-for-a-component",
            "text": "# Deis v1\n$ fleetctl journal -f deis-builder\n\n# Workflow\n$ kubectl get po --namespace=deis -l app=deis-builder --output=\"jsonpath={.items[0].metadata.name}\"\ndeis-builder-1851090495-5n0sn\n$ kubectl --namespace=deis logs -f deis-builder-1851090495-5n0sn",
            "title": "Follow the Logs for a Component"
        },
        {
            "location": "/reference-guide/creating-a-self-signed-ssl-certificate/",
            "text": "Creating a Self-Signed SSL Certificate\n\u00b6\n\n\nWhen \nusing the app ssl\n feature for non-production applications or when \ninstalling SSL for the platform\n, you can avoid the costs associated with the SSL certificate by using a self-signed SSL certificate. Though the certificate implements full encryption, visitors to your site will see a browser warning indicating that the certificate should not be trusted.\n\n\nPrerequisites\n\u00b6\n\n\nThe openssl library is required to generate your own certificate. Run the following command in your local environment to see if you already have openssl installed.\n\n\n$ which openssl\n/usr/bin/openssl\n\n\n\n\nIf the which command does not return a path then you will need to install openssl yourself:\n\n\n\n\n\n\n\n\nIf you have...\n\n\nInstall with...\n\n\n\n\n\n\n\n\n\n\nMac OS X\n\n\nHomebrew: \nbrew install openssl\n\n\n\n\n\n\nWindows\n\n\ncomplete package .exe installed\n\n\n\n\n\n\nUbuntu Linux\n\n\napt-get install openssl\n\n\n\n\n\n\n\n\nGenerate Private Key and Certificate Signing Request\n\u00b6\n\n\nA private key and certificate signing request are required to create an SSL certificate. These can be generated with a few simple commands. When the openssl req command asks for a \u201cchallenge password\u201d, just press return, leaving the password empty.\n\n\n$ openssl genrsa -des3 -passout pass:x -out server.pass.key 2048\n...\n$ openssl rsa -passin pass:x -in server.pass.key -out server.key\nwriting RSA key\n$ rm server.pass.key\n$ openssl req -new -key server.key -out server.csr\n...\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:California\n...\nA challenge password []:\n...\n\n\n\n\nGenerate SSL Certificate\n\u00b6\n\n\nThe self-signed SSL certificate is generated from the server.key private key and server.csr files.\n\n\n$ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n\n\n\n\nThe server.crt file is your site certificate suitable for use with \nDeis's SSL endpoint\n along with the server.key private key.",
            "title": "Creating a Self-Signed SSL Certificate"
        },
        {
            "location": "/reference-guide/creating-a-self-signed-ssl-certificate/#creating-a-self-signed-ssl-certificate",
            "text": "When  using the app ssl  feature for non-production applications or when  installing SSL for the platform , you can avoid the costs associated with the SSL certificate by using a self-signed SSL certificate. Though the certificate implements full encryption, visitors to your site will see a browser warning indicating that the certificate should not be trusted.",
            "title": "Creating a Self-Signed SSL Certificate"
        },
        {
            "location": "/reference-guide/creating-a-self-signed-ssl-certificate/#prerequisites",
            "text": "The openssl library is required to generate your own certificate. Run the following command in your local environment to see if you already have openssl installed.  $ which openssl\n/usr/bin/openssl  If the which command does not return a path then you will need to install openssl yourself:     If you have...  Install with...      Mac OS X  Homebrew:  brew install openssl    Windows  complete package .exe installed    Ubuntu Linux  apt-get install openssl",
            "title": "Prerequisites"
        },
        {
            "location": "/reference-guide/creating-a-self-signed-ssl-certificate/#generate-private-key-and-certificate-signing-request",
            "text": "A private key and certificate signing request are required to create an SSL certificate. These can be generated with a few simple commands. When the openssl req command asks for a \u201cchallenge password\u201d, just press return, leaving the password empty.  $ openssl genrsa -des3 -passout pass:x -out server.pass.key 2048\n...\n$ openssl rsa -passin pass:x -in server.pass.key -out server.key\nwriting RSA key\n$ rm server.pass.key\n$ openssl req -new -key server.key -out server.csr\n...\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:California\n...\nA challenge password []:\n...",
            "title": "Generate Private Key and Certificate Signing Request"
        },
        {
            "location": "/reference-guide/creating-a-self-signed-ssl-certificate/#generate-ssl-certificate",
            "text": "The self-signed SSL certificate is generated from the server.key private key and server.csr files.  $ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  The server.crt file is your site certificate suitable for use with  Deis's SSL endpoint  along with the server.key private key.",
            "title": "Generate SSL Certificate"
        },
        {
            "location": "/reference-guide/terms/",
            "text": "Terms\n\u00b6\n\n\nApplication\n\u00b6\n\n\nAn application services requests and background jobs for a deployed git repository. Each application includes a set of Containers used to run isolated processes, and a Release that defines the current Build and Config deployed by containers.\n\n\nBuild\n\u00b6\n\n\nDeis builds are created automatically on the controller when a developer uses \ngit push deis master\n. When a new build is created, a new Release is created automatically.\n\n\nConfig\n\u00b6\n\n\nConfig refers to a set of environment variables used by Containers in as Application.\n\n\nWhen Config is changed, a new Release is created automatically.\n\n\nContainer\n\u00b6\n\n\nDeis containers are instances of Docker containers used to run Applications. Containers perform the actual work of an Application by servicing requests or by running background tasks as part of the cluster.\n\n\nEphemeral Filesystem\n\u00b6\n\n\nEach container gets its own ephemeral filesystem, with a fresh copy of the most recently deployed code. During the container\u2019s lifetime, its running processes can use the filesystem as a temporary scratchpad, but no files that are written are visible to processes in any other container. Any files written to the ephemeral filesystem will be discarded the moment the container is either stopped or restarted.\n\n\nContainer States\n\u00b6\n\n\nThere are several states that a container can be in at any time. The states are:\n\n\n\n\ninitialized - the state of the container before it is created\n\n\ncreated - the container is built and ready for operation\n\n\nup - the container is running\n\n\ndown - the container crashed or is stopped\n\n\ndestroyed - the container has been destroyed\n\n\n\n\nController\n\u00b6\n\n\nThe controller is the \"brain\" of the Deis platform. A controller manages Applications and their lifecycle.\n\n\nThe controller is in charge of:\n\n\n\n\nAuthenticating and authorizing clients\n\n\nProcessing client API calls\n\n\nManaging containers that perform work for applications\n\n\nManaging proxies that route traffic to containers\n\n\nManaging users, keys and other base configuration\n\n\n\n\nThe Controller stack includes:\n\n\n\n\nDjango API Server for handling API calls\n\n\n\n\nKey\n\u00b6\n\n\nDeis keys are SSH Keys used during the git push process. Each user can use the client to manage a list of keys on the Controller.\n\n\nRelease\n\u00b6\n\n\nA Deis release is a combination of a Build with a Config. Each Application is associated with one release at a time. Deis releases are numbered and new releases always increment by one (e.g. v1, v2, v3).\n\n\nContainers that host an application use these release versions to pull the correct code and configuration.\n\n\nScheduler\n\u00b6\n\n\nThe Scheduler is responsible for creating, starting, stopping, and destroying Containers. For example, a command such as \ndeis scale cmd=10\n tells the Scheduler to run ten Containers from the Docker image for your Application.\n\n\nThe Scheduler must decide which machines are eligible to run these container jobs. Scheduler backends vary in the details of their job allocation policies and whether or not they are resource-aware, among other features.\n\n\nThe Deis scheduler client is implemented in the Controller component.\n\n\nService\n\u00b6\n\n\nA Kubernetes Service is an abstraction which defines a logical set of Pods and a policy by which to access them. In Workflow, a Service is used to load-balance an application's \nContainers\n internally through a virtual IP address.",
            "title": "Terms"
        },
        {
            "location": "/reference-guide/terms/#terms",
            "text": "",
            "title": "Terms"
        },
        {
            "location": "/reference-guide/terms/#application",
            "text": "An application services requests and background jobs for a deployed git repository. Each application includes a set of Containers used to run isolated processes, and a Release that defines the current Build and Config deployed by containers.",
            "title": "Application"
        },
        {
            "location": "/reference-guide/terms/#build",
            "text": "Deis builds are created automatically on the controller when a developer uses  git push deis master . When a new build is created, a new Release is created automatically.",
            "title": "Build"
        },
        {
            "location": "/reference-guide/terms/#config",
            "text": "Config refers to a set of environment variables used by Containers in as Application.  When Config is changed, a new Release is created automatically.",
            "title": "Config"
        },
        {
            "location": "/reference-guide/terms/#container",
            "text": "Deis containers are instances of Docker containers used to run Applications. Containers perform the actual work of an Application by servicing requests or by running background tasks as part of the cluster.",
            "title": "Container"
        },
        {
            "location": "/reference-guide/terms/#ephemeral-filesystem",
            "text": "Each container gets its own ephemeral filesystem, with a fresh copy of the most recently deployed code. During the container\u2019s lifetime, its running processes can use the filesystem as a temporary scratchpad, but no files that are written are visible to processes in any other container. Any files written to the ephemeral filesystem will be discarded the moment the container is either stopped or restarted.",
            "title": "Ephemeral Filesystem"
        },
        {
            "location": "/reference-guide/terms/#container-states",
            "text": "There are several states that a container can be in at any time. The states are:   initialized - the state of the container before it is created  created - the container is built and ready for operation  up - the container is running  down - the container crashed or is stopped  destroyed - the container has been destroyed",
            "title": "Container States"
        },
        {
            "location": "/reference-guide/terms/#controller",
            "text": "The controller is the \"brain\" of the Deis platform. A controller manages Applications and their lifecycle.  The controller is in charge of:   Authenticating and authorizing clients  Processing client API calls  Managing containers that perform work for applications  Managing proxies that route traffic to containers  Managing users, keys and other base configuration   The Controller stack includes:   Django API Server for handling API calls",
            "title": "Controller"
        },
        {
            "location": "/reference-guide/terms/#key",
            "text": "Deis keys are SSH Keys used during the git push process. Each user can use the client to manage a list of keys on the Controller.",
            "title": "Key"
        },
        {
            "location": "/reference-guide/terms/#release",
            "text": "A Deis release is a combination of a Build with a Config. Each Application is associated with one release at a time. Deis releases are numbered and new releases always increment by one (e.g. v1, v2, v3).  Containers that host an application use these release versions to pull the correct code and configuration.",
            "title": "Release"
        },
        {
            "location": "/reference-guide/terms/#scheduler",
            "text": "The Scheduler is responsible for creating, starting, stopping, and destroying Containers. For example, a command such as  deis scale cmd=10  tells the Scheduler to run ten Containers from the Docker image for your Application.  The Scheduler must decide which machines are eligible to run these container jobs. Scheduler backends vary in the details of their job allocation policies and whether or not they are resource-aware, among other features.  The Deis scheduler client is implemented in the Controller component.",
            "title": "Scheduler"
        },
        {
            "location": "/reference-guide/terms/#service",
            "text": "A Kubernetes Service is an abstraction which defines a logical set of Pods and a policy by which to access them. In Workflow, a Service is used to load-balance an application's  Containers  internally through a virtual IP address.",
            "title": "Service"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/",
            "text": "Controller API v2.0\n\u00b6\n\n\nThis is the v2.0 REST API for the Controller.\n\n\nWhat's New\n\u00b6\n\n\nNew!\n format of \nPOST /v2/apps/<app id>/run\n has changed.\n\n\nAuthentication\n\u00b6\n\n\nRegister a New User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nLog in\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nCancel Account\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRegenerate Token\n\u00b6\n\n\n\n\nnote\n\n\nThis command could require administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nChange Password\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}\n\n\n\n\nOptional parameters:\n\n\n{\"username\": \"testuser\"}\n\n\n\n\n\n\nnote\n\n\nUsing the \nusername\n parameter requires administrative privileges and makes the \npassword\n parameter optional.\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nApplications\n\u00b6\n\n\nList all Applications\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate an Application\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\"id\": \"example-go\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDestroy an Application\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nList Application Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUpdate Application Details\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\n  \"owner\": \"test\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json\n\n\n\n\nRetrieve Application Logs\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional URL Query Parameters:\n\n\n?log_lines=\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"\n\n\n\n\nRun one-off Commands\n\u00b6\n\n\nPOST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}\n\n\n\n\nCertificates\n\u00b6\n\n\nList all Certificates\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}\n\n\n\n\nGet Certificate Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nCreate Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nDestroy a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nAttach a Domain to a Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove a Domain from a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nPods\n\u00b6\n\n\nList all Pods\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nList all Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nRestart All Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type and Name\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nScale Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nConfiguration\n\u00b6\n\n\nList Application Configuration\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nCreate new Config\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 3\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUnset Config Variable\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 4\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDomains\n\u00b6\n\n\nList Application Domains\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}\n\n\n\n\nAdd Domain\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}\n\n\n\n\nRemove Domain\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nBuilds\n\u00b6\n\n\nList Application Builds\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate Application Build\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 4\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nReleases\n\u00b6\n\n\nList Application Releases\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}\n\n\n\n\nList Release Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}\n\n\n\n\nRollback Release\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"version\": 5}\n\n\n\n\nKeys\n\u00b6\n\n\nList Keys\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nAdd Key to User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nRemove Key from User\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nPermissions\n\u00b6\n\n\nList Application Permissions\n\u00b6\n\n\n\n\nnote\n\n\nThis does not include the app owner.\n\n\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}\n\n\n\n\nCreate Application Permission\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove Application Permission\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nList Administrators\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}\n\n\n\n\nGrant User Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove User's Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nDELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nUsers\n\u00b6\n\n\nList all users\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nGET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "Controller API v2.0"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#controller-api-v20",
            "text": "This is the v2.0 REST API for the Controller.",
            "title": "Controller API v2.0"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#whats-new",
            "text": "New!  format of  POST /v2/apps/<app id>/run  has changed.",
            "title": "What's New"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#authentication",
            "text": "",
            "title": "Authentication"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#register-a-new-user",
            "text": "Example Request:  POST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}  Optional Parameters:  {\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Register a New User"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#log-in",
            "text": "Example Request:  POST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Log in"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#cancel-account",
            "text": "Example Request:  DELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Cancel Account"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#regenerate-token",
            "text": "note  This command could require administrative privileges   Example Request:  POST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional Parameters:  {\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Regenerate Token"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#change-password",
            "text": "Example Request:  POST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}  Optional parameters:  {\"username\": \"testuser\"}   note  Using the  username  parameter requires administrative privileges and makes the  password  parameter optional.   Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Change Password"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#applications",
            "text": "",
            "title": "Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-all-applications",
            "text": "Example Request:  GET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List all Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#create-an-application",
            "text": "Example Request:  POST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123  Optional parameters:  {\"id\": \"example-go\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#destroy-an-application",
            "text": "Example Request:  DELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Destroy an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-details",
            "text": "Example Request:  GET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#update-application-details",
            "text": "Example Request:  POST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional parameters:  {\n  \"owner\": \"test\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json",
            "title": "Update Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#retrieve-application-logs",
            "text": "Example Request:  GET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional URL Query Parameters:  ?log_lines=  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"",
            "title": "Retrieve Application Logs"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#run-one-off-commands",
            "text": "POST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}",
            "title": "Run one-off Commands"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#certificates",
            "text": "",
            "title": "Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-all-certificates",
            "text": "Example Request:  GET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}",
            "title": "List all Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#get-certificate-details",
            "text": "Example Request:  GET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Get Certificate Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#create-certificate",
            "text": "Example Request:  POST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Create Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#destroy-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Destroy a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#attach-a-domain-to-a-certificate",
            "text": "Example Request:  POST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Attach a Domain to a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#remove-a-domain-from-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove a Domain from a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#pods",
            "text": "",
            "title": "Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-all-pods",
            "text": "Example Request:  GET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-all-pods-by-type",
            "text": "Example Request:  GET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#restart-all-pods",
            "text": "Example Request:  POST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart All Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#restart-pods-by-type",
            "text": "Example Request:  POST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#restart-pods-by-type-and-name",
            "text": "Example Request:  POST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type and Name"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#scale-pods",
            "text": "Example Request:  POST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Scale Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#configuration",
            "text": "",
            "title": "Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-configuration",
            "text": "Example Request:  GET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#create-new-config",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 3\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create new Config"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#unset-config-variable",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 4\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Unset Config Variable"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#domains",
            "text": "",
            "title": "Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-domains",
            "text": "Example Request:  GET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}",
            "title": "List Application Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#add-domain",
            "text": "Example Request:  POST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}",
            "title": "Add Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#remove-domain",
            "text": "Example Request:  DELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#builds",
            "text": "",
            "title": "Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-builds",
            "text": "Example Request:  GET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Application Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#create-application-build",
            "text": "Example Request:  POST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}  Optional Parameters:  {\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\nX-Deis-Release: 4\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create Application Build"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#releases",
            "text": "",
            "title": "Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-releases",
            "text": "Example Request:  GET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}",
            "title": "List Application Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-release-details",
            "text": "Example Request:  GET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}",
            "title": "List Release Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#rollback-release",
            "text": "Example Request:  POST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"version\": 5}",
            "title": "Rollback Release"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#keys",
            "text": "",
            "title": "Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-keys",
            "text": "Example Request:  GET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#add-key-to-user",
            "text": "Example Request:  POST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Add Key to User"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#remove-key-from-user",
            "text": "Example Request:  DELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Key from User"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#permissions",
            "text": "",
            "title": "Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-application-permissions",
            "text": "note  This does not include the app owner.   Example Request:  GET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}",
            "title": "List Application Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#create-application-permission",
            "text": "Example Request:  POST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Create Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#remove-application-permission",
            "text": "Example Request:  DELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-administrators",
            "text": "Example Request:  GET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}",
            "title": "List Administrators"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#grant-user-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  POST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Grant User Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#remove-users-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  DELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove User's Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#users",
            "text": "",
            "title": "Users"
        },
        {
            "location": "/reference-guide/controller-api/v2.0/#list-all-users",
            "text": "note  This command requires administrative privileges   Example Request:  GET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.0\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "List all users"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/",
            "text": "Controller API v2.1\n\u00b6\n\n\nThis is the v2.1 REST API for the Controller.\n\n\nWhat's New\n\u00b6\n\n\nNew!\n \nhealthcheck\n field in configuration, deprecates the \nHEALTHCHECK_*\n environment variables.\n\n\nNew!\n Unsetting a configuration variable that does not exist will return a 422.\n\n\nNew!\n Creating an identical sequential release returns a 409 rather than create a no-op release.\n\n\nAuthentication\n\u00b6\n\n\nRegister a New User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nLog in\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nCancel Account\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRegenerate Token\n\u00b6\n\n\n\n\nnote\n\n\nThis command could require administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nChange Password\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}\n\n\n\n\nOptional parameters:\n\n\n{\"username\": \"testuser\"}\n\n\n\n\n\n\nnote\n\n\nUsing the \nusername\n parameter requires administrative privileges and makes the \npassword\n parameter optional.\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nApplications\n\u00b6\n\n\nList all Applications\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate an Application\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\"id\": \"example-go\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDestroy an Application\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nList Application Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUpdate Application Details\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\n  \"owner\": \"test\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json\n\n\n\n\nRetrieve Application Logs\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional URL Query Parameters:\n\n\n?log_lines=\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"\n\n\n\n\nRun one-off Commands\n\u00b6\n\n\nPOST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}\n\n\n\n\nCertificates\n\u00b6\n\n\nList all Certificates\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}\n\n\n\n\nGet Certificate Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nCreate Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nDestroy a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nAttach a Domain to a Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove a Domain from a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nPods\n\u00b6\n\n\nList all Pods\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nList all Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nRestart All Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type and Name\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nScale Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nConfiguration\n\u00b6\n\n\nList Application Configuration\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nCreate new Config\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUnset Config Variable\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDomains\n\u00b6\n\n\nList Application Domains\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}\n\n\n\n\nAdd Domain\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}\n\n\n\n\nRemove Domain\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nBuilds\n\u00b6\n\n\nList Application Builds\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate Application Build\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nReleases\n\u00b6\n\n\nList Application Releases\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}\n\n\n\n\nList Release Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}\n\n\n\n\nRollback Release\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"version\": 5}\n\n\n\n\nKeys\n\u00b6\n\n\nList Keys\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nAdd Key to User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nRemove Key from User\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nPermissions\n\u00b6\n\n\nList Application Permissions\n\u00b6\n\n\n\n\nnote\n\n\nThis does not include the app owner.\n\n\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}\n\n\n\n\nCreate Application Permission\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove Application Permission\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nList Administrators\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}\n\n\n\n\nGrant User Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nRemove User's Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nDELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\n\n\n\n\nUsers\n\u00b6\n\n\nList all users\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nGET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "Controller API v2.1"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#controller-api-v21",
            "text": "This is the v2.1 REST API for the Controller.",
            "title": "Controller API v2.1"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#whats-new",
            "text": "New!   healthcheck  field in configuration, deprecates the  HEALTHCHECK_*  environment variables.  New!  Unsetting a configuration variable that does not exist will return a 422.  New!  Creating an identical sequential release returns a 409 rather than create a no-op release.",
            "title": "What's New"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#authentication",
            "text": "",
            "title": "Authentication"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#register-a-new-user",
            "text": "Example Request:  POST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}  Optional Parameters:  {\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Register a New User"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#log-in",
            "text": "Example Request:  POST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Log in"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#cancel-account",
            "text": "Example Request:  DELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Cancel Account"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#regenerate-token",
            "text": "note  This command could require administrative privileges   Example Request:  POST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional Parameters:  {\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Regenerate Token"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#change-password",
            "text": "Example Request:  POST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}  Optional parameters:  {\"username\": \"testuser\"}   note  Using the  username  parameter requires administrative privileges and makes the  password  parameter optional.   Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Change Password"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#applications",
            "text": "",
            "title": "Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-all-applications",
            "text": "Example Request:  GET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List all Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#create-an-application",
            "text": "Example Request:  POST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123  Optional parameters:  {\"id\": \"example-go\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#destroy-an-application",
            "text": "Example Request:  DELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Destroy an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-details",
            "text": "Example Request:  GET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#update-application-details",
            "text": "Example Request:  POST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional parameters:  {\n  \"owner\": \"test\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json",
            "title": "Update Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#retrieve-application-logs",
            "text": "Example Request:  GET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional URL Query Parameters:  ?log_lines=  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"",
            "title": "Retrieve Application Logs"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#run-one-off-commands",
            "text": "POST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}",
            "title": "Run one-off Commands"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#certificates",
            "text": "",
            "title": "Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-all-certificates",
            "text": "Example Request:  GET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}",
            "title": "List all Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#get-certificate-details",
            "text": "Example Request:  GET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Get Certificate Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#create-certificate",
            "text": "Example Request:  POST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Create Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#destroy-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Destroy a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#attach-a-domain-to-a-certificate",
            "text": "Example Request:  POST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Attach a Domain to a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#remove-a-domain-from-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove a Domain from a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#pods",
            "text": "",
            "title": "Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-all-pods",
            "text": "Example Request:  GET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-all-pods-by-type",
            "text": "Example Request:  GET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#restart-all-pods",
            "text": "Example Request:  POST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart All Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#restart-pods-by-type",
            "text": "Example Request:  POST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#restart-pods-by-type-and-name",
            "text": "Example Request:  POST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type and Name"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#scale-pods",
            "text": "Example Request:  POST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Scale Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#configuration",
            "text": "",
            "title": "Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-configuration",
            "text": "Example Request:  GET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#create-new-config",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create new Config"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#unset-config-variable",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Unset Config Variable"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#domains",
            "text": "",
            "title": "Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-domains",
            "text": "Example Request:  GET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}",
            "title": "List Application Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#add-domain",
            "text": "Example Request:  POST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}",
            "title": "Add Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#remove-domain",
            "text": "Example Request:  DELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#builds",
            "text": "",
            "title": "Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-builds",
            "text": "Example Request:  GET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Application Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#create-application-build",
            "text": "Example Request:  POST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}  Optional Parameters:  {\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create Application Build"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#releases",
            "text": "",
            "title": "Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-releases",
            "text": "Example Request:  GET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}",
            "title": "List Application Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-release-details",
            "text": "Example Request:  GET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}",
            "title": "List Release Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#rollback-release",
            "text": "Example Request:  POST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\"version\": 5}",
            "title": "Rollback Release"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#keys",
            "text": "",
            "title": "Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-keys",
            "text": "Example Request:  GET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#add-key-to-user",
            "text": "Example Request:  POST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Add Key to User"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#remove-key-from-user",
            "text": "Example Request:  DELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Key from User"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#permissions",
            "text": "",
            "title": "Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-application-permissions",
            "text": "note  This does not include the app owner.   Example Request:  GET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}",
            "title": "List Application Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#create-application-permission",
            "text": "Example Request:  POST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Create Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#remove-application-permission",
            "text": "Example Request:  DELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-administrators",
            "text": "Example Request:  GET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}",
            "title": "List Administrators"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#grant-user-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  POST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Grant User Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#remove-users-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  DELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0",
            "title": "Remove User's Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#users",
            "text": "",
            "title": "Users"
        },
        {
            "location": "/reference-guide/controller-api/v2.1/#list-all-users",
            "text": "note  This command requires administrative privileges   Example Request:  GET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.1\nDEIS_PLATFORM_VERSION: 2.1.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "List all users"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/",
            "text": "Controller API v2.2\n\u00b6\n\n\nThis is the v2.2 REST API for the Controller.\n\n\nWhat's New\n\u00b6\n\n\nNew!\n \n/v2/auth/whoami\n endpoint\n\n\nAuthentication\n\u00b6\n\n\nRegister a New User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nLog in\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nCancel Account\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nWho Am I\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/auth/whoami/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nRegenerate Token\n\u00b6\n\n\n\n\nnote\n\n\nThis command could require administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nChange Password\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}\n\n\n\n\nOptional parameters:\n\n\n{\"username\": \"testuser\"}\n\n\n\n\n\n\nnote\n\n\nUsing the \nusername\n parameter requires administrative privileges and makes the \npassword\n parameter optional.\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nApplications\n\u00b6\n\n\nList all Applications\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate an Application\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\"id\": \"example-go\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDestroy an Application\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nList Application Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUpdate Application Details\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\n  \"owner\": \"test\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json\n\n\n\n\nRetrieve Application Logs\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional URL Query Parameters:\n\n\n?log_lines=\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"\n\n\n\n\nRun one-off Commands\n\u00b6\n\n\nPOST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}\n\n\n\n\nCertificates\n\u00b6\n\n\nList all Certificates\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}\n\n\n\n\nGet Certificate Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nCreate Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nDestroy a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nAttach a Domain to a Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nRemove a Domain from a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nPods\n\u00b6\n\n\nList all Pods\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nList all Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nRestart All Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type and Name\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nScale Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nConfiguration\n\u00b6\n\n\nList Application Configuration\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nCreate new Config\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUnset Config Variable\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDomains\n\u00b6\n\n\nList Application Domains\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}\n\n\n\n\nAdd Domain\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}\n\n\n\n\nRemove Domain\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nBuilds\n\u00b6\n\n\nList Application Builds\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate Application Build\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nReleases\n\u00b6\n\n\nList Application Releases\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}\n\n\n\n\nList Release Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}\n\n\n\n\nRollback Release\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"version\": 5}\n\n\n\n\nKeys\n\u00b6\n\n\nList Keys\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nAdd Key to User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nRemove Key from User\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nPermissions\n\u00b6\n\n\nList Application Permissions\n\u00b6\n\n\n\n\nnote\n\n\nThis does not include the app owner.\n\n\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}\n\n\n\n\nCreate Application Permission\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nRemove Application Permission\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nList Administrators\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}\n\n\n\n\nGrant User Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nRemove User's Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nDELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\n\n\n\n\nUsers\n\u00b6\n\n\nList all users\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nGET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "Controller API v2.2"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#controller-api-v22",
            "text": "This is the v2.2 REST API for the Controller.",
            "title": "Controller API v2.2"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#whats-new",
            "text": "New!   /v2/auth/whoami  endpoint",
            "title": "What's New"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#authentication",
            "text": "",
            "title": "Authentication"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#register-a-new-user",
            "text": "Example Request:  POST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}  Optional Parameters:  {\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Register a New User"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#log-in",
            "text": "Example Request:  POST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Log in"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#cancel-account",
            "text": "Example Request:  DELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Cancel Account"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#who-am-i",
            "text": "Example Request:  GET /v2/auth/whoami/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Who Am I"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#regenerate-token",
            "text": "note  This command could require administrative privileges   Example Request:  POST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional Parameters:  {\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Regenerate Token"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#change-password",
            "text": "Example Request:  POST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}  Optional parameters:  {\"username\": \"testuser\"}   note  Using the  username  parameter requires administrative privileges and makes the  password  parameter optional.   Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Change Password"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#applications",
            "text": "",
            "title": "Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-all-applications",
            "text": "Example Request:  GET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List all Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#create-an-application",
            "text": "Example Request:  POST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123  Optional parameters:  {\"id\": \"example-go\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#destroy-an-application",
            "text": "Example Request:  DELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Destroy an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-details",
            "text": "Example Request:  GET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#update-application-details",
            "text": "Example Request:  POST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional parameters:  {\n  \"owner\": \"test\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json",
            "title": "Update Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#retrieve-application-logs",
            "text": "Example Request:  GET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional URL Query Parameters:  ?log_lines=  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"",
            "title": "Retrieve Application Logs"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#run-one-off-commands",
            "text": "POST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}",
            "title": "Run one-off Commands"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#certificates",
            "text": "",
            "title": "Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-all-certificates",
            "text": "Example Request:  GET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22T22:24:20Z\",\n      \"updated\": \"2016-06-22T22:24:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}",
            "title": "List all Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#get-certificate-details",
            "text": "Example Request:  GET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Get Certificate Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#create-certificate",
            "text": "Example Request:  POST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22T22:24:20Z\",\n  \"updated\": \"2016-06-22T22:24:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Create Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#destroy-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Destroy a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#attach-a-domain-to-a-certificate",
            "text": "Example Request:  POST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Attach a Domain to a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#remove-a-domain-from-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Remove a Domain from a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#pods",
            "text": "",
            "title": "Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-all-pods",
            "text": "Example Request:  GET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-all-pods-by-type",
            "text": "Example Request:  GET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#restart-all-pods",
            "text": "Example Request:  POST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart All Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#restart-pods-by-type",
            "text": "Example Request:  POST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#restart-pods-by-type-and-name",
            "text": "Example Request:  POST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type and Name"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#scale-pods",
            "text": "Example Request:  POST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Scale Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#configuration",
            "text": "",
            "title": "Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-configuration",
            "text": "Example Request:  GET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#create-new-config",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create new Config"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#unset-config-variable",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Unset Config Variable"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#domains",
            "text": "",
            "title": "Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-domains",
            "text": "Example Request:  GET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}",
            "title": "List Application Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#add-domain",
            "text": "Example Request:  POST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}",
            "title": "Add Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#remove-domain",
            "text": "Example Request:  DELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Remove Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#builds",
            "text": "",
            "title": "Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-builds",
            "text": "Example Request:  GET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Application Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#create-application-build",
            "text": "Example Request:  POST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}  Optional Parameters:  {\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create Application Build"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#releases",
            "text": "",
            "title": "Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-releases",
            "text": "Example Request:  GET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"202d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}",
            "title": "List Application Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-release-details",
            "text": "Example Request:  GET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}",
            "title": "List Release Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#rollback-release",
            "text": "Example Request:  POST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\"version\": 5}",
            "title": "Rollback Release"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#keys",
            "text": "",
            "title": "Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-keys",
            "text": "Example Request:  GET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#add-key-to-user",
            "text": "Example Request:  POST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Add Key to User"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#remove-key-from-user",
            "text": "Example Request:  DELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Remove Key from User"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#permissions",
            "text": "",
            "title": "Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-application-permissions",
            "text": "note  This does not include the app owner.   Example Request:  GET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}",
            "title": "List Application Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#create-application-permission",
            "text": "Example Request:  POST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Create Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#remove-application-permission",
            "text": "Example Request:  DELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Remove Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-administrators",
            "text": "Example Request:  GET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}",
            "title": "List Administrators"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#grant-user-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  POST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Grant User Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#remove-users-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  DELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0",
            "title": "Remove User's Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#users",
            "text": "",
            "title": "Users"
        },
        {
            "location": "/reference-guide/controller-api/v2.2/#list-all-users",
            "text": "note  This command requires administrative privileges   Example Request:  GET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.2\nDEIS_PLATFORM_VERSION: 2.2.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "List all users"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/",
            "text": "Controller API v2.3\n\u00b6\n\n\nThis is the v2.3 REST API for the Controller.\n\n\nWhat's New\n\u00b6\n\n\nNew!\n \n/v2/apps/{name}/logs\n endpoint was fixed and no longer returns \nb'log data'\n and instead returns a normal string \nlog data\n\n\nAuthentication\n\u00b6\n\n\nRegister a New User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nLog in\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nCancel Account\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nWho Am I\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/auth/whoami/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}\n\n\n\n\nRegenerate Token\n\u00b6\n\n\n\n\nnote\n\n\nThis command could require administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}\n\n\n\n\nChange Password\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}\n\n\n\n\nOptional parameters:\n\n\n{\"username\": \"testuser\"}\n\n\n\n\n\n\nnote\n\n\nUsing the \nusername\n parameter requires administrative privileges and makes the \npassword\n parameter optional.\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nApplications\n\u00b6\n\n\nList all Applications\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate an Application\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\"id\": \"example-go\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDestroy an Application\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nList Application Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUpdate Application Details\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional parameters:\n\n\n{\n  \"owner\": \"test\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json\n\n\n\n\nRetrieve Application Logs\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nOptional URL Query Parameters:\n\n\n?log_lines=\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"\n\n\n\n\nRun one-off Commands\n\u00b6\n\n\nPOST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}\n\n\n\n\nCertificates\n\u00b6\n\n\nList all Certificates\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22.32.34:20Z\",\n      \"updated\": \"2016-06-22.32.34:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}\n\n\n\n\nGet Certificate Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22.32.34:20Z\",\n  \"updated\": \"2016-06-22.32.34:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nCreate Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22.32.34:20Z\",\n  \"updated\": \"2016-06-22.32.34:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}\n\n\n\n\nDestroy a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nAttach a Domain to a Certificate\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nRemove a Domain from a Certificate\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nEnable or disable TLS\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/tls/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n  \"https_enforced\": true\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"app\": \"example-go\",\n    \"owner\": \"test\",\n    \"https_enforced\": true,\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nGet TLS status\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/tls/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"app\": \"example-go\",\n    \"owner\": \"test\",\n    \"https_enforced\": false,\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nPods\n\u00b6\n\n\nList all Pods\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nList all Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}\n\n\n\n\nRestart All Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nRestart Pods by Type and Name\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]\n\n\n\n\nScale Pods\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nConfiguration\n\u00b6\n\n\nList Application Configuration\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nCreate new Config\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nUnset Config Variable\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nDomains\n\u00b6\n\n\nList Application Domains\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}\n\n\n\n\nAdd Domain\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}\n\n\n\n\nRemove Domain\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nBuilds\n\u00b6\n\n\nList Application Builds\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nCreate Application Build\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}\n\n\n\n\nOptional Parameters:\n\n\n{\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nReleases\n\u00b6\n\n\nList Application Releases\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"2.3d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"2.3d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}\n\n\n\n\nList Release Details\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}\n\n\n\n\nRollback Release\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"version\": 5}\n\n\n\n\nKeys\n\u00b6\n\n\nList Keys\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}\n\n\n\n\nAdd Key to User\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}\n\n\n\n\nRemove Key from User\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nPermissions\n\u00b6\n\n\nList Application Permissions\n\u00b6\n\n\n\n\nnote\n\n\nThis does not include the app owner.\n\n\n\n\nExample Request:\n\n\nGET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}\n\n\n\n\nCreate Application Permission\n\u00b6\n\n\nExample Request:\n\n\nPOST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nRemove Application Permission\n\u00b6\n\n\nExample Request:\n\n\nDELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nList Administrators\n\u00b6\n\n\nExample Request:\n\n\nGET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}\n\n\n\n\nGrant User Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nPOST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nRemove User's Administrative Privileges\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nDELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\n\n\n\n\nUsers\n\u00b6\n\n\nList all users\n\u00b6\n\n\n\n\nnote\n\n\nThis command requires administrative privileges\n\n\n\n\nExample Request:\n\n\nGET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n\n\n\nExample Response:\n\n\nHTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "Controller API v2.3"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#controller-api-v23",
            "text": "This is the v2.3 REST API for the Controller.",
            "title": "Controller API v2.3"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#whats-new",
            "text": "New!   /v2/apps/{name}/logs  endpoint was fixed and no longer returns  b'log data'  and instead returns a normal string  log data",
            "title": "What's New"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#authentication",
            "text": "",
            "title": "Authentication"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#register-a-new-user",
            "text": "Example Request:  POST /v2/auth/register/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\n    \"username\": \"test\",\n    \"password\": \"opensesame\",\n    \"email\": \"test@example.com\"\n}  Optional Parameters:  {\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Register a New User"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#log-in",
            "text": "Example Request:  POST /v2/auth/login/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\n\n{\"username\": \"test\", \"password\": \"opensesame\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Log in"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#cancel-account",
            "text": "Example Request:  DELETE /v2/auth/cancel/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Cancel Account"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#who-am-i",
            "text": "Example Request:  GET /v2/auth/whoami/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"id\": 1,\n    \"last_login\": \"2014-10-19T22:01:00.601Z\",\n    \"is_superuser\": true,\n    \"username\": \"test\",\n    \"first_name\": \"test\",\n    \"last_name\": \"testerson\",\n    \"email\": \"test@example.com\",\n    \"is_staff\": true,\n    \"is_active\": true,\n    \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n    \"groups\": [],\n    \"user_permissions\": []\n}",
            "title": "Who Am I"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#regenerate-token",
            "text": "note  This command could require administrative privileges   Example Request:  POST /v2/auth/tokens/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional Parameters:  {\n    \"username\" : \"test\"\n    \"all\" : \"true\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"token\": \"abc123\"}",
            "title": "Regenerate Token"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#change-password",
            "text": "Example Request:  POST /v2/auth/passwd/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"password\": \"foo\",\n    \"new_password\": \"bar\"\n}  Optional parameters:  {\"username\": \"testuser\"}   note  Using the  username  parameter requires administrative privileges and makes the  password  parameter optional.   Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Change Password"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#applications",
            "text": "",
            "title": "Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-all-applications",
            "text": "Example Request:  GET /v2/apps HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"example-go\",\n            \"owner\": \"test\",\n            \"structure\": {},\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"url\": \"example-go.example.com\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List all Applications"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#create-an-application",
            "text": "Example Request:  POST /v2/apps/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123  Optional parameters:  {\"id\": \"example-go\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#destroy-an-application",
            "text": "Example Request:  DELETE /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Destroy an Application"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-details",
            "text": "Example Request:  GET /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example-go\",\n    \"owner\": \"test\",\n    \"structure\": {},\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"url\": \"example-go.example.com\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#update-application-details",
            "text": "Example Request:  POST /v2/apps/example-go/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional parameters:  {\n  \"owner\": \"test\"\n}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 1.8.0\nContent-Type: application/json",
            "title": "Update Application Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#retrieve-application-logs",
            "text": "Example Request:  GET /v2/apps/example-go/logs/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Optional URL Query Parameters:  ?log_lines=  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: text/plain\n\n\"16:51:14 deis[api]: test created initial release\\n\"",
            "title": "Retrieve Application Logs"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#run-one-off-commands",
            "text": "POST /v2/apps/example-go/run/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"command\": \"echo hi\"}  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"exit_code\": 0, \"output\": \"hi\\n\"}",
            "title": "Run one-off Commands"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#certificates",
            "text": "",
            "title": "Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-all-certificates",
            "text": "Example Request:  GET /v2/certs HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 22,\n      \"owner\": \"test\",\n      \"san\": [],\n      \"domains\": [],\n      \"created\": \"2016-06-22.32.34:20Z\",\n      \"updated\": \"2016-06-22.32.34:20Z\",\n      \"name\": \"foo\",\n      \"common_name\": \"bar.com\",\n      \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n      \"expires\": \"2017-01-14T23:57:57Z\",\n      \"starts\": \"2016-01-15T23:57:57Z\",\n      \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n      \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n    }\n  ]\n}",
            "title": "List all Certificates"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#get-certificate-details",
            "text": "Example Request:  GET /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22.32.34:20Z\",\n  \"updated\": \"2016-06-22.32.34:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Get Certificate Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#create-certificate",
            "text": "Example Request:  POST /v2/certs/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n    \"name\": \"foo\"\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\",\n    \"key\": \"-----BEGIN RSA PRIVATE KEY-----\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n  \"id\": 22,\n  \"owner\": \"test\",\n  \"san\": [],\n  \"domains\": [],\n  \"created\": \"2016-06-22.32.34:20Z\",\n  \"updated\": \"2016-06-22.32.34:20Z\",\n  \"name\": \"foo\",\n  \"common_name\": \"bar.com\",\n  \"fingerprint\": \"7A:CA:B8:50:FF:8D:EB:03:3D:AC:AD:13:4F:EE:03:D5:5D:EB:5E:37:51:8C:E0:98:F8:1B:36:2B:20:83:0D:C0\",\n  \"expires\": \"2017-01-14T23:57:57Z\",\n  \"starts\": \"2016-01-15T23:57:57Z\",\n  \"issuer\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\",\n  \"subject\": \"/C=US/ST=CA/L=San Francisco/O=Deis/OU=Engineering/CN=bar.com/emailAddress=engineering@deis.com\"\n}",
            "title": "Create Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#destroy-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Destroy a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#attach-a-domain-to-a-certificate",
            "text": "Example Request:  POST /v2/certs/foo/domain/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"domain\": \"test.com\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Attach a Domain to a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#remove-a-domain-from-a-certificate",
            "text": "Example Request:  DELETE /v2/certs/foo/domain/test.com/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Remove a Domain from a Certificate"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#enable-or-disable-tls",
            "text": "Example Request:  POST /v2/apps/example-go/tls/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\n  \"https_enforced\": true\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"app\": \"example-go\",\n    \"owner\": \"test\",\n    \"https_enforced\": true,\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Enable or disable TLS"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#get-tls-status",
            "text": "Example Request:  GET /v2/apps/example-go/tls/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"app\": \"example-go\",\n    \"owner\": \"test\",\n    \"https_enforced\": false,\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Get TLS status"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#pods",
            "text": "",
            "title": "Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-all-pods",
            "text": "Example Request:  GET /v2/apps/example-go/pods/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-all-pods-by-type",
            "text": "Example Request:  GET /v2/apps/example-go/pods/web/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"results\": [\n        {\n            \"name\": \"go-v2-web-e7dej\",\n            \"release\": \"v2\",\n            \"started\": \"2014-01-01T00:00:00Z\",\n            \"state\": \"up\",\n            \"type\": \"web\"\n        }\n    ]\n}",
            "title": "List all Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#restart-all-pods",
            "text": "Example Request:  POST /v2/apps/example-go/pods/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart All Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#restart-pods-by-type",
            "text": "Example Request:  POST /v2/apps/example-go/pods/web/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#restart-pods-by-type-and-name",
            "text": "Example Request:  POST /v2/apps/example-go/pods/go-v2-web-atots/restart/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"go-v2-web-atots\",\n        \"release\": \"v2\",\n        \"started\": \"2016-04-11T21:07:54Z\",\n        \"state\": \"up\",\n        \"type\": \"web\"\n    }\n]",
            "title": "Restart Pods by Type and Name"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#scale-pods",
            "text": "Example Request:  POST /v2/apps/example-go/scale/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"web\": 3}  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Scale Pods"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#configuration",
            "text": "",
            "title": "Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-configuration",
            "text": "Example Request:  GET /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n      \"PLATFORM\": \"deis\"\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "List Application Configuration"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#create-new-config",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": \"world\", \"PLATFORM\": \"deis\"}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v3\",\n        \"HELLO\": \"world\",\n        \"PLATFORM\": \"deis\"\n\n    },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create new Config"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#unset-config-variable",
            "text": "Example Request:  POST /v2/apps/example-go/config/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"values\": {\"HELLO\": null}}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"owner\": \"test\",\n    \"app\": \"example-go\",\n    \"values\": {\n        \"DEIS_APP\": \"example-go\",\n        \"DEIS_RELEASE\": \"v4\",\n        \"PLATFORM\": \"deis\"\n   },\n    \"memory\": {},\n    \"cpu\": {},\n    \"tags\": {},\n    \"healthcheck\": {},\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Unset Config Variable"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#domains",
            "text": "",
            "title": "Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-domains",
            "text": "Example Request:  GET /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"domain\": \"example.example.com\",\n            \"owner\": \"test\",\n            \"updated\": \"2014-01-01T00:00:00UTC\"\n        }\n    ]\n}",
            "title": "List Application Domains"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#add-domain",
            "text": "Example Request:  POST /v2/apps/example-go/domains/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{'domain': 'example.example.com'}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"domain\": \"example.example.com\",\n    \"owner\": \"test\",\n    \"updated\": \"2014-01-01T00:00:00UTC\"\n}",
            "title": "Add Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#remove-domain",
            "text": "Example Request:  DELETE /v2/apps/example-go/domains/example.example.com HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Remove Domain"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#builds",
            "text": "",
            "title": "Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-builds",
            "text": "Example Request:  GET /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"dockerfile\": \"FROM deis/slugrunner RUN mkdir -p /app WORKDIR /app ENTRYPOINT [\\\"/runner/init\\\"] ADD slug.tgz /app ENV GIT_SHA 060da68f654e75fac06dbedd1995d5f8ad9084db\",\n            \"image\": \"example-go\",\n            \"owner\": \"test\",\n            \"procfile\": {\n                \"web\": \"example-go\"\n            },\n            \"sha\": \"060da68f\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Application Builds"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#create-application-build",
            "text": "Example Request:  POST /v2/apps/example-go/builds/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"image\": \"deis/example-go:latest\"}  Optional Parameters:  {\n    \"procfile\": {\n      \"web\": \"./cmd\"\n    }\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"dockerfile\": \"\",\n    \"image\": \"deis/example-go:latest\",\n    \"owner\": \"test\",\n    \"procfile\": {},\n    \"sha\": \"\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Create Application Build"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#releases",
            "text": "",
            "title": "Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-releases",
            "text": "Example Request:  GET /v2/apps/example-go/releases/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"app\": \"example-go\",\n            \"build\": \"2.3d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"ed637ceb-5d32-44bd-9406-d326a777a513\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test changed nothing\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 3\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": \"2.3d8e4b-600e-4425-a85c-ffc7ea607f61\",\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test deployed 060da68\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 2\n        },\n        {\n            \"app\": \"example-go\",\n            \"build\": null,\n            \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"owner\": \"test\",\n            \"summary\": \"test created initial release\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n            \"version\": 1\n        }\n    ]\n}",
            "title": "List Application Releases"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-release-details",
            "text": "Example Request:  GET /v2/apps/example-go/releases/v2/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"app\": \"example-go\",\n    \"build\": null,\n    \"config\": \"95bd6dea-1685-4f78-a03d-fd7270b058d1\",\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"owner\": \"test\",\n    \"summary\": \"test created initial release\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\",\n    \"version\": 1\n}",
            "title": "List Release Details"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#rollback-release",
            "text": "Example Request:  POST /v2/apps/example-go/releases/rollback/ HTTP/1.1\nHost: deis.example.com\nContent-Type: application/json\nAuthorization: token abc123\n\n{\"version\": 1}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\"version\": 5}",
            "title": "Rollback Release"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#keys",
            "text": "",
            "title": "Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-keys",
            "text": "Example Request:  GET /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"created\": \"2014-01-01T00:00:00UTC\",\n            \"id\": \"test@example.com\",\n            \"owner\": \"test\",\n            \"public\": \"ssh-rsa <...>\",\n            \"updated\": \"2014-01-01T00:00:00UTC\",\n            \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n        }\n    ]\n}",
            "title": "List Keys"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#add-key-to-user",
            "text": "Example Request:  POST /v2/keys/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\n    \"id\": \"example\",\n    \"public\": \"ssh-rsa <...>\"\n}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"created\": \"2014-01-01T00:00:00UTC\",\n    \"id\": \"example\",\n    \"owner\": \"example\",\n    \"public\": \"ssh-rsa <...>\",\n    \"updated\": \"2014-01-01T00:00:00UTC\",\n    \"uuid\": \"de1bf5b5-4a72-4f94-a10c-d2a3741cdf75\"\n}",
            "title": "Add Key to User"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#remove-key-from-user",
            "text": "Example Request:  DELETE /v2/keys/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Remove Key from User"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#permissions",
            "text": "",
            "title": "Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-application-permissions",
            "text": "note  This does not include the app owner.   Example Request:  GET /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"users\": [\n        \"test\",\n        \"foo\"\n    ]\n}",
            "title": "List Application Permissions"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#create-application-permission",
            "text": "Example Request:  POST /v2/apps/example-go/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Create Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#remove-application-permission",
            "text": "Example Request:  DELETE /v2/apps/example-go/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Remove Application Permission"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-administrators",
            "text": "Example Request:  GET /v2/admin/perms/ HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 2,\n    \"next\": null\n    \"previous\": null,\n    \"results\": [\n        {\n            \"username\": \"test\",\n            \"is_superuser\": true\n        },\n        {\n            \"username\": \"foo\",\n            \"is_superuser\": true\n        }\n    ]\n}",
            "title": "List Administrators"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#grant-user-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  POST /v2/admin/perms HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123\n\n{\"username\": \"example\"}  Example Response:  HTTP/1.1 201 CREATED\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Grant User Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#remove-users-administrative-privileges",
            "text": "note  This command requires administrative privileges   Example Request:  DELETE /v2/admin/perms/example HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 204 NO CONTENT\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0",
            "title": "Remove User's Administrative Privileges"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#users",
            "text": "",
            "title": "Users"
        },
        {
            "location": "/reference-guide/controller-api/v2.3/#list-all-users",
            "text": "note  This command requires administrative privileges   Example Request:  GET /v2/users HTTP/1.1\nHost: deis.example.com\nAuthorization: token abc123  Example Response:  HTTP/1.1 200 OK\nDEIS_API_VERSION: 2.3\nDEIS_PLATFORM_VERSION: 2.3.0\nContent-Type: application/json\n\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"last_login\": \"2014-10-19T22:01:00.601Z\",\n            \"is_superuser\": true,\n            \"username\": \"test\",\n            \"first_name\": \"test\",\n            \"last_name\": \"testerson\",\n            \"email\": \"test@example.com\",\n            \"is_staff\": true,\n            \"is_active\": true,\n            \"date_joined\": \"2014-10-19T22:01:00.601Z\",\n            \"groups\": [],\n            \"user_permissions\": []\n        }\n    ]\n}",
            "title": "List all users"
        },
        {
            "location": "/changelogs/v2.17.0/",
            "text": "Workflow v2.16.0 -> v2.17.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\ncontroller v2.16.0 -> v2.17.1\n\n\nrouter v2.13.0 -> v2.13.1\n\n\nslugbuilder v2.4.14 -> v2.5.0\n\n\nslugrunner v2.3.0 -> v2.4.0\n\n\nworkflow v2.16.0 -> v2.17.0\n\n\nworkflow-cli v2.16.0 -> v2.17.0\n\n\nworkflow-e2e v2.12.0 -> v2.12.1\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\n4e0c17c\n (slugbuilder) - normalize_storage: use \nMINIO_BUCKET\n env-var\n\n\n92ef1b7\n (slugrunner) - get_object: use \nMINIO_BUCKET\n env-var\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\nce0e082\n (slugrunner) - ci: remove travis; update badge\n\n\n7e85553\n (slugrunner) - LICENSE: switch to MIT license\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nc02eb51\n (controller) - api/models/app: Catch unhandled error (#1317)\n\n\nd5c70f4\n (workflow-e2e) - apps_test.go: temporarily disable spec that fails on GKE\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nf40f3cf\n (workflow) - changelogs: add builder release and workflow commit\n\n\n5c83dd2\n (workflow) - managing-app-processes: Fix 404 for HPA algorithm link (#846)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n435aa2b\n (controller) - requirements: update django-auth-ldap to 1.2.14\n\n\n76b1233\n (controller) - requirements: update pyldap to 2.4.37\n\n\nc17ad2c\n (controller) - requirements: update django-jsonfield to 2.0.2\n\n\n732d4f4\n (controller) - requirements: update django-guardian to 1.4.9\n\n\nf914d98\n (controller) - requirements: update pyOpenSSL to 17.2.0\n\n\n48b1be1\n (controller) - requirements: update requests to 2.18.2\n\n\nb79a32a\n (controller) - dev_requirements: update coverage lib to 4.4.1\n\n\nefefc5f\n (router) - Dockerfile: update nginx to 1.13.3\n\n\nc1364b3\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v70\n\n\ncb073da\n (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v22\n\n\nf82db90\n (slugbuilder) - buildpacks: update heroku-buildpack-java to v52\n\n\nc260552\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v106\n\n\nc4b586b\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v109\n\n\nef63934\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v164\n\n\n6ef590c\n (slugbuilder) - buildpacks: update heroku-buildpack-clojure to v77\n\n\n3f3e4b9\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v71\n\n\n8ded076\n (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v23\n\n\n04a1649\n (slugbuilder) - buildpacks: update heroku-buildpack-java to v53\n\n\n22e02d2\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v110\n\n\ne5ffff7\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v167\n\n\n1e3f424\n (slugbuilder) - buildpacks: update heroku-buildpack-scala to v77",
            "title": "v2.17.0"
        },
        {
            "location": "/changelogs/v2.17.0/#workflow-v2160-v2170",
            "text": "",
            "title": "Workflow v2.16.0 -&gt; v2.17.0"
        },
        {
            "location": "/changelogs/v2.17.0/#releases",
            "text": "controller v2.16.0 -> v2.17.1  router v2.13.0 -> v2.13.1  slugbuilder v2.4.14 -> v2.5.0  slugrunner v2.3.0 -> v2.4.0  workflow v2.16.0 -> v2.17.0  workflow-cli v2.16.0 -> v2.17.0  workflow-e2e v2.12.0 -> v2.12.1",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.17.0/#features",
            "text": "4e0c17c  (slugbuilder) - normalize_storage: use  MINIO_BUCKET  env-var  92ef1b7  (slugrunner) - get_object: use  MINIO_BUCKET  env-var",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.17.0/#refactors",
            "text": "ce0e082  (slugrunner) - ci: remove travis; update badge  7e85553  (slugrunner) - LICENSE: switch to MIT license",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.17.0/#fixes",
            "text": "c02eb51  (controller) - api/models/app: Catch unhandled error (#1317)  d5c70f4  (workflow-e2e) - apps_test.go: temporarily disable spec that fails on GKE",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.17.0/#documentation",
            "text": "f40f3cf  (workflow) - changelogs: add builder release and workflow commit  5c83dd2  (workflow) - managing-app-processes: Fix 404 for HPA algorithm link (#846)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.17.0/#maintenance",
            "text": "435aa2b  (controller) - requirements: update django-auth-ldap to 1.2.14  76b1233  (controller) - requirements: update pyldap to 2.4.37  c17ad2c  (controller) - requirements: update django-jsonfield to 2.0.2  732d4f4  (controller) - requirements: update django-guardian to 1.4.9  f914d98  (controller) - requirements: update pyOpenSSL to 17.2.0  48b1be1  (controller) - requirements: update requests to 2.18.2  b79a32a  (controller) - dev_requirements: update coverage lib to 4.4.1  efefc5f  (router) - Dockerfile: update nginx to 1.13.3  c1364b3  (slugbuilder) - buildpacks: update heroku-buildpack-go to v70  cb073da  (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v22  f82db90  (slugbuilder) - buildpacks: update heroku-buildpack-java to v52  c260552  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v106  c4b586b  (slugbuilder) - buildpacks: update heroku-buildpack-python to v109  ef63934  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v164  6ef590c  (slugbuilder) - buildpacks: update heroku-buildpack-clojure to v77  3f3e4b9  (slugbuilder) - buildpacks: update heroku-buildpack-go to v71  8ded076  (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v23  04a1649  (slugbuilder) - buildpacks: update heroku-buildpack-java to v53  22e02d2  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v110  e5ffff7  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v167  1e3f424  (slugbuilder) - buildpacks: update heroku-buildpack-scala to v77",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.16.0/",
            "text": "Workflow v2.15.0 -> v2.16.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.11.0 -> v2.12.0\n\n\ncontroller v2.15.0 -> v2.16.0\n\n\nmonitor v2.10.0 -> v2.10.1\n\n\nslugrunner v2.3.0 -> v2.3.1\n\n\nworkflow v2.15.0 -> v2.16.0\n\n\nworkflow-cli v2.15.0 -> v2.16.0\n\n\nworkflow-e2e v2.11.1 -> v2.12.0\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\n46002f4\n (workflow-cli) - cmd: Support Base64 encoded SSH_KEY\n\n\n88397a1\n (workflow-cli) - cmd: test SSH_KEY mangling in ConfigSet\n\n\nf9c6a4a\n (workflow-e2e) - chart: use upstream stable/spotify-docker-gc chart\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\nce0e082\n (slugrunner) - ci: remove travis; update badge\n\n\n7e85553\n (slugrunner) - LICENSE: switch to MIT license\n\n\n345d5ae\n (workflow) - mkdocs.yml: alphabetize cloud providers in quickstart\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n73f844b\n *: Remove RC4 based ciphers.\n\n\n344b43e\n *: Fix linter issues\n\n\nc81dbf9\n (controller) - controller: Persist ssl.enforce header on service creation\n\n\n1f5e242\n (workflow-cli) - cmd: fix(cmd) Fix proctype regex for setting limits\n\n\nf82cf83\n (workflow-cli) - cmd: fix(cmd) Fix proctype regex for scaling\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n25329be\n (workflow) - quickstart: update Azure ACS installation steps\n\n\n4cfa9d5\n (workflow) - *: rm no longer needed pipe to sed (#817)\n\n\n5145f12\n (workflow) - configuring-registry.md: add setup instructions for acr (#818)\n\n\nb456870\n (workflow) - installing-workflow: helm init upgrade note (#819)\n\n\n61a5cca\n (workflow) - chart-provenance.md: fix chart repo name (#830)\n\n\n2a7f756\n (workflow) - *: specify Helm v2.5.0 or later\n\n\nef4bc3e\n (workflow) - *: updates/changelog for v2.16.0 release\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nc2fd577\n (controller) - requirements: update Django to v1.11.2\n\n\nfe6e6e5\n (controller) - requirements: update pyldap to v2.4.35.1\n\n\ncac5e60\n (controller) - requirements: update jmespath to 0.9.3\n\n\n1fcf61b\n (controller) - requirements: update backoff to 1.4.3\n\n\n410e1d3\n (controller) - requirements: update Django to v1.11.3\n\n\n516a529\n (monitor) - Dockerfile: update Grafana to 4.3.2\n\n\n5cd8648\n (workflow-e2e) - Dockerfile: bump k8s version",
            "title": "v2.16.0"
        },
        {
            "location": "/changelogs/v2.16.0/#workflow-v2150-v2160",
            "text": "",
            "title": "Workflow v2.15.0 -&gt; v2.16.0"
        },
        {
            "location": "/changelogs/v2.16.0/#releases",
            "text": "builder v2.11.0 -> v2.12.0  controller v2.15.0 -> v2.16.0  monitor v2.10.0 -> v2.10.1  slugrunner v2.3.0 -> v2.3.1  workflow v2.15.0 -> v2.16.0  workflow-cli v2.15.0 -> v2.16.0  workflow-e2e v2.11.1 -> v2.12.0",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.16.0/#features",
            "text": "46002f4  (workflow-cli) - cmd: Support Base64 encoded SSH_KEY  88397a1  (workflow-cli) - cmd: test SSH_KEY mangling in ConfigSet  f9c6a4a  (workflow-e2e) - chart: use upstream stable/spotify-docker-gc chart",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.16.0/#refactors",
            "text": "ce0e082  (slugrunner) - ci: remove travis; update badge  7e85553  (slugrunner) - LICENSE: switch to MIT license  345d5ae  (workflow) - mkdocs.yml: alphabetize cloud providers in quickstart",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.16.0/#fixes",
            "text": "73f844b  *: Remove RC4 based ciphers.  344b43e  *: Fix linter issues  c81dbf9  (controller) - controller: Persist ssl.enforce header on service creation  1f5e242  (workflow-cli) - cmd: fix(cmd) Fix proctype regex for setting limits  f82cf83  (workflow-cli) - cmd: fix(cmd) Fix proctype regex for scaling",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.16.0/#documentation",
            "text": "25329be  (workflow) - quickstart: update Azure ACS installation steps  4cfa9d5  (workflow) - *: rm no longer needed pipe to sed (#817)  5145f12  (workflow) - configuring-registry.md: add setup instructions for acr (#818)  b456870  (workflow) - installing-workflow: helm init upgrade note (#819)  61a5cca  (workflow) - chart-provenance.md: fix chart repo name (#830)  2a7f756  (workflow) - *: specify Helm v2.5.0 or later  ef4bc3e  (workflow) - *: updates/changelog for v2.16.0 release",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.16.0/#maintenance",
            "text": "c2fd577  (controller) - requirements: update Django to v1.11.2  fe6e6e5  (controller) - requirements: update pyldap to v2.4.35.1  cac5e60  (controller) - requirements: update jmespath to 0.9.3  1fcf61b  (controller) - requirements: update backoff to 1.4.3  410e1d3  (controller) - requirements: update Django to v1.11.3  516a529  (monitor) - Dockerfile: update Grafana to 4.3.2  5cd8648  (workflow-e2e) - Dockerfile: bump k8s version",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.15.0/",
            "text": "Workflow v2.14.0 -> v2.15.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.10.1 -> v2.11.0\n\n\ncontroller v2.14.0 -> v2.15.0\n\n\ndockerbuilder v2.7.2 -> v2.7.3\n\n\nfluentd v2.9.0 -> v2.10.0\n\n\nlogger v2.4.3 -> v2.4.4\n\n\nminio v2.3.5 -> v2.3.6\n\n\nmonitor v2.9.0 -> v2.10.0\n\n\nnsq v2.2.7 -> v2.2.8\n\n\npostgres v2.5.3 -> v2.5.4\n\n\nredis v2.2.6 -> v2.2.7\n\n\nregistry v2.4.0 -> v2.4.2\n\n\nregistry-token-refresher v1.1.2 -> v1.1.3\n\n\nrouter v2.12.1 -> v2.13.0\n\n\nslugbuilder v2.4.12 -> v2.4.14\n\n\nslugrunner v2.3.0 -> v2.3.1\n\n\nworkflow v2.14.0 -> v2.15.0\n\n\nworkflow-cli v2.14.0 -> v2.15.0\n\n\nworkflow-e2e v2.11.1 -> v2.12.0\n\n\nworkflow-manager v2.5.0 -> v2.5.1\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\nc891804\n (builder) - RBAC support\n\n\nc321669\n (controller) - RBAC support\n\n\n464bbd9\n (fluentd) - RBAC support\n\n\n560b73d\n (fluentd) - fluentd: add gelf plugin\n\n\ne655622\n (fluentd) - charts: add rollingUpdate functionality\n\n\nff4058d\n (monitor) - RBAC support\n\n\nde49c15\n (monitor) - charts: add rollingUpdate functionality to telegraf daemonset\n\n\nccf1364\n (monitor) - deploy.mk: Add deploy.mk for using the chart to upgrade/install monitor\n\n\nc9769fe\n (router) - RBAC support\n\n\n356374f\n (workflow) - RBAC support\n\n\nf9c6a4a\n (workflow-e2e) - chart: use upstream stable/spotify-docker-gc chart\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n270f168\n (builder) - ci: remove travis, update build status\n\n\nf832ba3\n (builder) - LICENSE: switch to MIT license\n\n\n9af9322\n (controller) - LICENSE: switch to MIT license\n\n\n86e3a4a\n (dockerbuilder) - ci: remove travis; update badge\n\n\n6eb4387\n (dockerbuilder) - LICENSE: switch to MIT license\n\n\n502d8b2\n (fluentd) - LICENSE: switch to MIT license\n\n\n8e70aab\n (logger) - README: update link to deis graphic\n\n\nc54e4b4\n (logger) - ci: remove travis; update badge\n\n\n5ec9e6f\n (logger) - LICENSE: switch to MIT license\n\n\n40bfd95\n (minio) - ci: remove travis; update badge\n\n\nd9ba730\n (minio) - LICENSE: switch to MIT license\n\n\ncf5c393\n (monitor) - LICENSE: switch to MIT license\n\n\n9655620\n (nsq) - README: update deis graphic link\n\n\n71f9cc9\n (nsq) - LICENSE: switch to MIT license\n\n\nfc7d7a3\n (postgres) - ci: remove travis; update badge\n\n\ne751af6\n (postgres) - LICENSE: switch to MIT license\n\n\n2cec33f\n (redis) - LICENSE: switch to MIT license\n\n\na6894de\n (registry) - ci: remove travis; update badge\n\n\nfdfeb9b\n (registry) - LICENSE: switch to MIT license\n\n\nd494abf\n (registry-token-refresher) - ci: remove travis; update badge\n\n\nfe75c0d\n (registry-token-refresher) - LICENSE: switch to MIT license\n\n\n093863f\n (router) - LICENSE: switch to MIT license\n\n\na54877d\n (slugbuilder) - LICENSE: switch to MIT license\n\n\nce0e082\n (slugrunner) - ci: remove travis; update badge\n\n\n7e85553\n (slugrunner) - LICENSE: switch to MIT license\n\n\nffcd9b3\n (workflow) - LICENSE: switch to MIT license\n\n\na861b5e\n (workflow-cli) - LICENSE: switch to MIT license\n\n\n34d4a68\n (workflow-manager) - LICENSE: switch to MIT license\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nab68699\n (monitor) - telegraf/Dockerfile: Update telegraf download to 1.3.0\n\n\n35551af\n (postgres) - Dockerfile: pin azure-storage to version wal-e currently lusing\n\n\n067e622\n (registry) - boto: don't set AWS env vars when they're empty\n\n\n2dddbe1\n (workflow-cli) - .gitignore: ignore .DS_Store droppings\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n7cc5a82\n (router) - README: update charts link/reference\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nb4fe99e\n (controller) - requirements: update Django to v1.11.1\n\n\n47a9583\n (controller) - requirements: update DRF to v3.6.3\n\n\nd869595\n (controller) - requirements: update pyldap to v2.4.35\n\n\nac7baf2\n (controller) - requirements: update requests to v2.14.2\n\n\nd183306\n (controller) - requirements: update requests-toolbelt to 0.8.0\n\n\n989fe33\n (controller) - requirements: update django-auth-ldap to v1.2.12\n\n\n35ed09f\n (postgres) - Dockerfile: bump postgres-9.4 version, update azure storage import\n\n\nf0db059\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v65\n\n\nddeb83c\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v104\n\n\nd957649\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v103\n\n\n2cb83f2\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v163\n\n\n6575cb0\n (workflow) - remove the services url navigation\n\n\n5cd8648\n (workflow-e2e) - Dockerfile: bump k8s version",
            "title": "v2.15.0"
        },
        {
            "location": "/changelogs/v2.15.0/#workflow-v2140-v2150",
            "text": "",
            "title": "Workflow v2.14.0 -&gt; v2.15.0"
        },
        {
            "location": "/changelogs/v2.15.0/#releases",
            "text": "builder v2.10.1 -> v2.11.0  controller v2.14.0 -> v2.15.0  dockerbuilder v2.7.2 -> v2.7.3  fluentd v2.9.0 -> v2.10.0  logger v2.4.3 -> v2.4.4  minio v2.3.5 -> v2.3.6  monitor v2.9.0 -> v2.10.0  nsq v2.2.7 -> v2.2.8  postgres v2.5.3 -> v2.5.4  redis v2.2.6 -> v2.2.7  registry v2.4.0 -> v2.4.2  registry-token-refresher v1.1.2 -> v1.1.3  router v2.12.1 -> v2.13.0  slugbuilder v2.4.12 -> v2.4.14  slugrunner v2.3.0 -> v2.3.1  workflow v2.14.0 -> v2.15.0  workflow-cli v2.14.0 -> v2.15.0  workflow-e2e v2.11.1 -> v2.12.0  workflow-manager v2.5.0 -> v2.5.1",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.15.0/#features",
            "text": "c891804  (builder) - RBAC support  c321669  (controller) - RBAC support  464bbd9  (fluentd) - RBAC support  560b73d  (fluentd) - fluentd: add gelf plugin  e655622  (fluentd) - charts: add rollingUpdate functionality  ff4058d  (monitor) - RBAC support  de49c15  (monitor) - charts: add rollingUpdate functionality to telegraf daemonset  ccf1364  (monitor) - deploy.mk: Add deploy.mk for using the chart to upgrade/install monitor  c9769fe  (router) - RBAC support  356374f  (workflow) - RBAC support  f9c6a4a  (workflow-e2e) - chart: use upstream stable/spotify-docker-gc chart",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.15.0/#refactors",
            "text": "270f168  (builder) - ci: remove travis, update build status  f832ba3  (builder) - LICENSE: switch to MIT license  9af9322  (controller) - LICENSE: switch to MIT license  86e3a4a  (dockerbuilder) - ci: remove travis; update badge  6eb4387  (dockerbuilder) - LICENSE: switch to MIT license  502d8b2  (fluentd) - LICENSE: switch to MIT license  8e70aab  (logger) - README: update link to deis graphic  c54e4b4  (logger) - ci: remove travis; update badge  5ec9e6f  (logger) - LICENSE: switch to MIT license  40bfd95  (minio) - ci: remove travis; update badge  d9ba730  (minio) - LICENSE: switch to MIT license  cf5c393  (monitor) - LICENSE: switch to MIT license  9655620  (nsq) - README: update deis graphic link  71f9cc9  (nsq) - LICENSE: switch to MIT license  fc7d7a3  (postgres) - ci: remove travis; update badge  e751af6  (postgres) - LICENSE: switch to MIT license  2cec33f  (redis) - LICENSE: switch to MIT license  a6894de  (registry) - ci: remove travis; update badge  fdfeb9b  (registry) - LICENSE: switch to MIT license  d494abf  (registry-token-refresher) - ci: remove travis; update badge  fe75c0d  (registry-token-refresher) - LICENSE: switch to MIT license  093863f  (router) - LICENSE: switch to MIT license  a54877d  (slugbuilder) - LICENSE: switch to MIT license  ce0e082  (slugrunner) - ci: remove travis; update badge  7e85553  (slugrunner) - LICENSE: switch to MIT license  ffcd9b3  (workflow) - LICENSE: switch to MIT license  a861b5e  (workflow-cli) - LICENSE: switch to MIT license  34d4a68  (workflow-manager) - LICENSE: switch to MIT license",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.15.0/#fixes",
            "text": "ab68699  (monitor) - telegraf/Dockerfile: Update telegraf download to 1.3.0  35551af  (postgres) - Dockerfile: pin azure-storage to version wal-e currently lusing  067e622  (registry) - boto: don't set AWS env vars when they're empty  2dddbe1  (workflow-cli) - .gitignore: ignore .DS_Store droppings",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.15.0/#documentation",
            "text": "7cc5a82  (router) - README: update charts link/reference",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.15.0/#maintenance",
            "text": "b4fe99e  (controller) - requirements: update Django to v1.11.1  47a9583  (controller) - requirements: update DRF to v3.6.3  d869595  (controller) - requirements: update pyldap to v2.4.35  ac7baf2  (controller) - requirements: update requests to v2.14.2  d183306  (controller) - requirements: update requests-toolbelt to 0.8.0  989fe33  (controller) - requirements: update django-auth-ldap to v1.2.12  35ed09f  (postgres) - Dockerfile: bump postgres-9.4 version, update azure storage import  f0db059  (slugbuilder) - buildpacks: update heroku-buildpack-go to v65  ddeb83c  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v104  d957649  (slugbuilder) - buildpacks: update heroku-buildpack-python to v103  2cb83f2  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v163  6575cb0  (workflow) - remove the services url navigation  5cd8648  (workflow-e2e) - Dockerfile: bump k8s version",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.14.0/",
            "text": "Workflow v2.13.0 -> v2.14.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\ncontroller v2.13.0 -> v2.14.0\n\n\nfluentd v2.8.0 -> v2.9.0\n\n\nmonitor v2.8.1 -> v2.9.0\n\n\nredis v2.2.5 -> v2.2.6\n\n\nregistry-proxy v1.1.1 -> v1.3.0\n\n\nrouter v2.12.0 -> v2.12.1\n\n\nslugbuilder v2.4.11 -> v2.4.12\n\n\nworkflow v2.13.0 -> v2.14.0\n\n\nworkflow-cli v2.13.0 -> v2.14.0\n\n\nworkflow-e2e v2.10.0 -> v2.11.0\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\nc515df3\n (fluentd) - chart: Extend values.yaml file\n\n\naf04466\n (monitor) - grafana: Allow users to set signup flag in chart\n\n\na8c0fa7\n (registry-proxy) - Makefile: set docker build flags via environment variable\n\n\n292a3d4\n (workflow) - ingress: document deis-builder DNS records\n\n\n3750f53\n (workflow-e2e) - Makefile: add test target\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n08f4c69\n (controller) - ci: remove travis, update build status (#1287)\n\n\n59cce25\n (fluentd) - README: update link to deis graphic\n\n\n6b7d85a\n (fluentd) - makefile: Update makefile to work with new chart structure\n\n\nd59bedc\n (fluentd) - ci: remove _scripts; add badge\n\n\n0fcea4f\n (monitor) - _scripts: remove unused scripts\n\n\n511fa8c\n (redis) - README: switch to wabs container\n\n\n5c7624c\n (redis) - ci: remove travis; add badge\n\n\ncea7734\n (router) - ci: remove travis; add badge\n\n\ne8de27c\n (slugbuilder) - ci: remove travis; update badge\n\n\nbd0b1d9\n (workflow) - azure/boot: export AZURE_DNS_PREFIX and use $HOME\n\n\n8526e49\n (workflow) - ci: rm travis and unused scripts (#803)\n\n\n008615a\n (workflow-cli) - Jenkinsfile: disable win agent\n\n\n50ec2a2\n (workflow-e2e) - tests: update tests for new registration mode default\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n960e899\n (controller) - ingress-test: Fixing make test-style\n\n\na9674a3\n (fluentd) - charts: fix(charts) add quote around daemon_environment value\n\n\n73effea\n (monitor) - telegraf/rootfs/start-telegraf: address shellcheck/style err\n\n\n76134f7\n (redis) - rootfs/Dockerfile: force gunzip of copyright archive\n\n\ne559768\n (router) - charts: remove b64enc from dhparam\n\n\n05866f6\n (workflow) - hostname: Fixing hostname line\n\n\n140ded9\n (workflow-e2e) - tests/auth: no interactive register for admin\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n32cd737\n (controller) - api: update doc pointers for Django 1.11\n\n\n7d2c0ba\n (controller) - README: remove old testing prerequisites\n\n\naddf549\n (workflow) - gke/boot: Add info on obtaining credentials\n\n\n29a86b0\n (workflow) - system-requirements: warn users away from broken k8s versions\n\n\n8c223b5\n (workflow) - platform-logging: Add section on custom fluentd plugins\n\n\n218985f\n (workflow) - monitoring: Update docs to reflect monitor chart changes\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n1f93f21\n (controller) - requirements: update Django to 1.11 LTS\n\n\n88846bf\n (controller) - requirements: update pytz to 2017.2\n\n\n99061ff\n (controller) - requirements: update django-guardian to v1.4.8\n\n\n49e741e\n (controller) - ingress: Adding unit tests\n\n\n88bfcbd\n (controller) - requirements: update pyOpenSSL to v17.0.0\n\n\n7a9c3e6\n (controller) - dev_requirements: update codecov to v2.0.9\n\n\n8ed937d\n (controller) - requirements: update django-auth-ldap to v1.2.11\n\n\n51ac827\n (controller) - requirements: update backoff library to v1.4.2\n\n\nb8560e0\n (router) - Dockerfile: update nginx to 1.11.13\n\n\n21aa475\n (router) - Dockerfile: update nginx to 1.12.0 stable\n\n\n2f7705c\n (router) - Dockerfile: update nginx to 1.13.0\n\n\n4a802e4\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v101\n\n\nfb567ac\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v64\n\n\n3c14ac2\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v121\n\n\n32de3c1\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v159\n\n\n3e09799\n (workflow-e2e) - README.md: update build status badge",
            "title": "v2.14.0"
        },
        {
            "location": "/changelogs/v2.14.0/#workflow-v2130-v2140",
            "text": "",
            "title": "Workflow v2.13.0 -&gt; v2.14.0"
        },
        {
            "location": "/changelogs/v2.14.0/#releases",
            "text": "controller v2.13.0 -> v2.14.0  fluentd v2.8.0 -> v2.9.0  monitor v2.8.1 -> v2.9.0  redis v2.2.5 -> v2.2.6  registry-proxy v1.1.1 -> v1.3.0  router v2.12.0 -> v2.12.1  slugbuilder v2.4.11 -> v2.4.12  workflow v2.13.0 -> v2.14.0  workflow-cli v2.13.0 -> v2.14.0  workflow-e2e v2.10.0 -> v2.11.0",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.14.0/#features",
            "text": "c515df3  (fluentd) - chart: Extend values.yaml file  af04466  (monitor) - grafana: Allow users to set signup flag in chart  a8c0fa7  (registry-proxy) - Makefile: set docker build flags via environment variable  292a3d4  (workflow) - ingress: document deis-builder DNS records  3750f53  (workflow-e2e) - Makefile: add test target",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.14.0/#refactors",
            "text": "08f4c69  (controller) - ci: remove travis, update build status (#1287)  59cce25  (fluentd) - README: update link to deis graphic  6b7d85a  (fluentd) - makefile: Update makefile to work with new chart structure  d59bedc  (fluentd) - ci: remove _scripts; add badge  0fcea4f  (monitor) - _scripts: remove unused scripts  511fa8c  (redis) - README: switch to wabs container  5c7624c  (redis) - ci: remove travis; add badge  cea7734  (router) - ci: remove travis; add badge  e8de27c  (slugbuilder) - ci: remove travis; update badge  bd0b1d9  (workflow) - azure/boot: export AZURE_DNS_PREFIX and use $HOME  8526e49  (workflow) - ci: rm travis and unused scripts (#803)  008615a  (workflow-cli) - Jenkinsfile: disable win agent  50ec2a2  (workflow-e2e) - tests: update tests for new registration mode default",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.14.0/#fixes",
            "text": "960e899  (controller) - ingress-test: Fixing make test-style  a9674a3  (fluentd) - charts: fix(charts) add quote around daemon_environment value  73effea  (monitor) - telegraf/rootfs/start-telegraf: address shellcheck/style err  76134f7  (redis) - rootfs/Dockerfile: force gunzip of copyright archive  e559768  (router) - charts: remove b64enc from dhparam  05866f6  (workflow) - hostname: Fixing hostname line  140ded9  (workflow-e2e) - tests/auth: no interactive register for admin",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.14.0/#documentation",
            "text": "32cd737  (controller) - api: update doc pointers for Django 1.11  7d2c0ba  (controller) - README: remove old testing prerequisites  addf549  (workflow) - gke/boot: Add info on obtaining credentials  29a86b0  (workflow) - system-requirements: warn users away from broken k8s versions  8c223b5  (workflow) - platform-logging: Add section on custom fluentd plugins  218985f  (workflow) - monitoring: Update docs to reflect monitor chart changes",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.14.0/#maintenance",
            "text": "1f93f21  (controller) - requirements: update Django to 1.11 LTS  88846bf  (controller) - requirements: update pytz to 2017.2  99061ff  (controller) - requirements: update django-guardian to v1.4.8  49e741e  (controller) - ingress: Adding unit tests  88bfcbd  (controller) - requirements: update pyOpenSSL to v17.0.0  7a9c3e6  (controller) - dev_requirements: update codecov to v2.0.9  8ed937d  (controller) - requirements: update django-auth-ldap to v1.2.11  51ac827  (controller) - requirements: update backoff library to v1.4.2  b8560e0  (router) - Dockerfile: update nginx to 1.11.13  21aa475  (router) - Dockerfile: update nginx to 1.12.0 stable  2f7705c  (router) - Dockerfile: update nginx to 1.13.0  4a802e4  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v101  fb567ac  (slugbuilder) - buildpacks: update heroku-buildpack-go to v64  3c14ac2  (slugbuilder) - buildpacks: update heroku-buildpack-php to v121  32de3c1  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v159  3e09799  (workflow-e2e) - README.md: update build status badge",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.13.0/",
            "text": "Workflow v2.12.0 -> v2.13.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.8.0 -> v2.10.1\n\n\ncontroller v2.12.0 -> v2.13.0\n\n\ndockerbuilder v2.7.1 -> v2.7.2\n\n\nfluentd v2.7.0 -> v2.8.0\n\n\nlogger v2.4.2 -> v2.4.3\n\n\nmonitor v2.8.0 -> v2.8.1\n\n\nnsq v2.2.6 -> v2.2.7\n\n\npostgres v2.5.2 -> v2.5.3\n\n\nregistry v2.3.4 -> v2.4.0\n\n\nregistry-token-refresher v1.1.1 -> v1.1.2\n\n\nrouter v2.11.0 -> v2.12.0\n\n\nslugbuilder v2.4.10 -> v2.4.11\n\n\nworkflow v2.12.0 -> v2.13.0\n\n\nworkflow-cli v2.12.0 -> v2.13.0\n\n\nworkflow-e2e v2.10.0 -> v2.11.0\n\n\nworkflow-manager v2.4.5 -> v2.5.0\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\n7d928d8\n (builder) - podselector: add pod selector for builder job\n\n\n67cfd5d\n (builder) - podselector: update charts\n\n\nbf9747d\n (builder) - podselector: update parameter format to match other annotation\n\n\n01db893\n (builder) - ingress: Experimental Native Ingress\n\n\n50a1592\n (controller) - config.py: Add ability to setup default tags\n\n\n726a587\n (controller) - ingress: Feature work for experimental native ingress\n\n\n0e117b1\n (controller) - api: allow app names up to 63 characters in length (#1198)\n\n\n2e8ec75\n (controller) - Makefile,rootfs: run unit and style tests in container\n\n\na2bbd90\n (dockerbuilder) - Makefile: run style tests in container\n\n\n0325f2d\n (fluentd) - out_deis.rb: allow disabling deis logs and metrics to nsq\n\n\n451c846\n (nsq) - Makefile: add test target\n\n\nd39ea43\n (registry) - Makefile: add test-style target\n\n\na8c0fa7\n (registry-proxy) - Makefile: set docker build flags via environment variable\n\n\nbadc232\n (router) - ingress: Experimental Native Ingress\n\n\nbbf8dee\n (router) - chart: add aws-specific idle timeout annotation to router service\n\n\n9136b81\n (router) - ingress: Experimental Native Ingress\n\n\n23db7df\n (workflow) - controller: feat(controller) default tags\n\n\n259a3f8\n (workflow) - using_dockerfiles: document build args feature flag\n\n\n2692d66\n (workflow) - ingress: Experimental Native Ingress\n\n\neb1c025\n (workflow) - ingress: Support enable/disable conditions in Workflow chart\n\n\n89982ee\n (workflow-cli) - cmd: add config:list --diff\n\n\n3750f53\n (workflow-e2e) - Makefile: add test target\n\n\neaa74c7\n (workflow-manager) - clusters: added versions API route endpoints (#107)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\ne0765bf\n (builder) - ssh keys: remove support for DSA\n\n\n641f70d\n (builder) - k8s_util: make users opt into DOCKER_BUILD_ARGS\n\n\n807fe82\n (controller) - utils: use python 3.5 asyncio keywords\n\n\n3027766\n (monitor) - ci: refactor monitor ci\n\n\ndc7c247\n (nsq) - ci: remove manifests dir\n\n\nd5dd212\n (workflow) - quickstart: swap out Vagrant with Minikube\n\n\n50ec2a2\n (workflow-e2e) - tests: update tests for new registration mode default\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n9a2a1b4\n (builder) - ingress: Adding newline to builder-service.yaml\n\n\n56abf92\n (builder) - gitreceive: fix checkForEnv logic\n\n\n598f1a1\n (builder) - gitreceive/config.go: correct envconfig typo\n\n\n1ff9245\n (builder) - builder: truncate slugbuilder and dockerbuilder pod name length\n\n\n1156475\n (controller) - serializers.py: update PROCTYPE_MATCH to disallow uppercase characters (#1261)\n\n\na8002a2\n (controller) - api: split command arguments by space if entrypoint is not /bin/bash -c (#1264)\n\n\n2dce7cd\n (controller) - settings/production: convert \"false\" to boolean correctly\n\n\n2569391\n (logger) - log: fix panic error when building app log message\n\n\na1e3fef\n (monitor) - telegraf: fix(telegraf) ensure off-cluster influxdb url is quoted\n\n\n4ac5d56\n (monitor) - influx, grafana: Add logic around pvc storage class\n\n\n49a81f2\n (monitor) - charts/monitor/values.yaml: add logger_redis_location key/value\n\n\nf36f1e9\n (postgres) - contrib/ci/*: fix scripts\n\n\n0d5ad68\n (registry) - charts: Set sessionAffinity in registry service\n\n\n6771695\n (registry-token-refresher) - travis.yml: declare env vars on one line\n\n\n5f33f36\n (workflow) - managing-app-lifecycle: fix missing hyperlink\n\n\n91e7f76\n (workflow) - tuning-component-settings: convert toml to yaml\n\n\ne20215b\n (workflow) - ingress: Documentation touch ups\n\n\ndfdf7af\n (workflow-cli) - cmd: check for invalid probe types\n\n\n140ded9\n (workflow-e2e) - tests/auth: no interactive register for admin\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\ncd016e9\n (controller) - api,scheduler: fix \"timeout\" typos\n\n\n03a3e4c\n (monitor) - README.md: add build badge\n\n\nf0e1016\n (nsq) - README.md: add build badge\n\n\n3a99656\n (workflow) - upgrading-workflow: mention helm repo update\n\n\n916f200\n (workflow) - builder-nodeselector: add BUILDER_POD_NODE_SELECTOR document\n\n\n32a1493\n (workflow) - builder-nodeselector: correct grammar\n\n\nfdf76e4\n (workflow) - managing-app-processes.md: update proc type naming guidelines (#769)\n\n\n3df978c\n (workflow) - managing-app-configuration: update \"kubernetes-probes\" link\n\n\n722795b\n (workflow) - configuring-load-balancers.md: mention forthcoming default (#768)\n\n\n8980c62\n (workflow) - src/applications/inter-app-communication.md: docs(src/applications/inter-app-communication.md) Add first draft\n\n\ncc02dcd\n (workflow) - configuring-registry.md: add examples (#779)\n\n\ndc43777\n (workflow) - installing-workflow/index.md: update get pods output (#777)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n703c249\n (controller) - requirements: update idna to 2.4\n\n\n2224594\n (controller) - requirements: update psycopg2 to 2.7\n\n\n1aed9e2\n (controller) - requirements: update jsonfield to 2.0.0\n\n\n49ec35d\n (controller) - requirements: update Django to 1.10.6\n\n\n8d6126a\n (controller) - requirements: update gunicorn to 19.7.0\n\n\n2d071f4\n (controller) - requirements: update idna to 2.5\n\n\n53d34de\n (controller) - requirements: update jsonfield to 2.0.1\n\n\n0274973\n (controller) - rootfs/requirements.txt: add pyasn1\n\n\nfcae228\n (controller) - requirements: update django-auth-ldap to 1.2.10\n\n\n74372a5\n (controller) - requirements: update jmespath to 0.9.2\n\n\n530256c\n (controller) - requirements: update djangorestframework to 3.6.2\n\n\nf01b846\n (controller) - requirements: update psycopg2 to 2.7.1\n\n\n429a645\n (controller) - requirements: update gunicorn to 19.7.1\n\n\n0caeb81\n (controller) - Makefile: remove broken \"test-unit-quick\" target\n\n\ne8e6f58\n (controller) - dev_requirements: use deis/requests-mock fork\n\n\n7713ff3\n (postgres) - Makefile: remove test-unit target\n\n\n66b9f1c\n (registry) - Dockerfile: bump registry to v2.6.0\n\n\na795d72\n (router) - ingress: Experimental Native Ingress\n\n\nbece9d5\n (router) - ingress: Experimental Native Ingress\n\n\nea4a68c\n (router) - nginx: update nginx to 1.11.10\n\n\nbe3029c\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v102\n\n\nd802b84\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v155\n\n\n17cddde\n (workflow) - ingress: Remove extra spaces\n\n\n21fe9f9\n (workflow) - ingress: Fix example usage in docs to match new YAML\n\n\n33a6251\n (workflow) - ingress: Fix typo\n\n\n9f5bcea\n (workflow) - ingress: Revert to using if statements in router\n\n\nb8e404c\n (workflow) - ingress: Documentation updates from code review\n\n\ndcac309\n (workflow) - ingress: Typo in \nexperimental\n\n\n5d4866d\n (workflow) - upgrade: Upgrade kops to 1.5.3\n\n\n3e09799\n (workflow-e2e) - README.md: update build status badge",
            "title": "v2.13.0"
        },
        {
            "location": "/changelogs/v2.13.0/#workflow-v2120-v2130",
            "text": "",
            "title": "Workflow v2.12.0 -&gt; v2.13.0"
        },
        {
            "location": "/changelogs/v2.13.0/#releases",
            "text": "builder v2.8.0 -> v2.10.1  controller v2.12.0 -> v2.13.0  dockerbuilder v2.7.1 -> v2.7.2  fluentd v2.7.0 -> v2.8.0  logger v2.4.2 -> v2.4.3  monitor v2.8.0 -> v2.8.1  nsq v2.2.6 -> v2.2.7  postgres v2.5.2 -> v2.5.3  registry v2.3.4 -> v2.4.0  registry-token-refresher v1.1.1 -> v1.1.2  router v2.11.0 -> v2.12.0  slugbuilder v2.4.10 -> v2.4.11  workflow v2.12.0 -> v2.13.0  workflow-cli v2.12.0 -> v2.13.0  workflow-e2e v2.10.0 -> v2.11.0  workflow-manager v2.4.5 -> v2.5.0",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.13.0/#features",
            "text": "7d928d8  (builder) - podselector: add pod selector for builder job  67cfd5d  (builder) - podselector: update charts  bf9747d  (builder) - podselector: update parameter format to match other annotation  01db893  (builder) - ingress: Experimental Native Ingress  50a1592  (controller) - config.py: Add ability to setup default tags  726a587  (controller) - ingress: Feature work for experimental native ingress  0e117b1  (controller) - api: allow app names up to 63 characters in length (#1198)  2e8ec75  (controller) - Makefile,rootfs: run unit and style tests in container  a2bbd90  (dockerbuilder) - Makefile: run style tests in container  0325f2d  (fluentd) - out_deis.rb: allow disabling deis logs and metrics to nsq  451c846  (nsq) - Makefile: add test target  d39ea43  (registry) - Makefile: add test-style target  a8c0fa7  (registry-proxy) - Makefile: set docker build flags via environment variable  badc232  (router) - ingress: Experimental Native Ingress  bbf8dee  (router) - chart: add aws-specific idle timeout annotation to router service  9136b81  (router) - ingress: Experimental Native Ingress  23db7df  (workflow) - controller: feat(controller) default tags  259a3f8  (workflow) - using_dockerfiles: document build args feature flag  2692d66  (workflow) - ingress: Experimental Native Ingress  eb1c025  (workflow) - ingress: Support enable/disable conditions in Workflow chart  89982ee  (workflow-cli) - cmd: add config:list --diff  3750f53  (workflow-e2e) - Makefile: add test target  eaa74c7  (workflow-manager) - clusters: added versions API route endpoints (#107)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.13.0/#refactors",
            "text": "e0765bf  (builder) - ssh keys: remove support for DSA  641f70d  (builder) - k8s_util: make users opt into DOCKER_BUILD_ARGS  807fe82  (controller) - utils: use python 3.5 asyncio keywords  3027766  (monitor) - ci: refactor monitor ci  dc7c247  (nsq) - ci: remove manifests dir  d5dd212  (workflow) - quickstart: swap out Vagrant with Minikube  50ec2a2  (workflow-e2e) - tests: update tests for new registration mode default",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.13.0/#fixes",
            "text": "9a2a1b4  (builder) - ingress: Adding newline to builder-service.yaml  56abf92  (builder) - gitreceive: fix checkForEnv logic  598f1a1  (builder) - gitreceive/config.go: correct envconfig typo  1ff9245  (builder) - builder: truncate slugbuilder and dockerbuilder pod name length  1156475  (controller) - serializers.py: update PROCTYPE_MATCH to disallow uppercase characters (#1261)  a8002a2  (controller) - api: split command arguments by space if entrypoint is not /bin/bash -c (#1264)  2dce7cd  (controller) - settings/production: convert \"false\" to boolean correctly  2569391  (logger) - log: fix panic error when building app log message  a1e3fef  (monitor) - telegraf: fix(telegraf) ensure off-cluster influxdb url is quoted  4ac5d56  (monitor) - influx, grafana: Add logic around pvc storage class  49a81f2  (monitor) - charts/monitor/values.yaml: add logger_redis_location key/value  f36f1e9  (postgres) - contrib/ci/*: fix scripts  0d5ad68  (registry) - charts: Set sessionAffinity in registry service  6771695  (registry-token-refresher) - travis.yml: declare env vars on one line  5f33f36  (workflow) - managing-app-lifecycle: fix missing hyperlink  91e7f76  (workflow) - tuning-component-settings: convert toml to yaml  e20215b  (workflow) - ingress: Documentation touch ups  dfdf7af  (workflow-cli) - cmd: check for invalid probe types  140ded9  (workflow-e2e) - tests/auth: no interactive register for admin",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.13.0/#documentation",
            "text": "cd016e9  (controller) - api,scheduler: fix \"timeout\" typos  03a3e4c  (monitor) - README.md: add build badge  f0e1016  (nsq) - README.md: add build badge  3a99656  (workflow) - upgrading-workflow: mention helm repo update  916f200  (workflow) - builder-nodeselector: add BUILDER_POD_NODE_SELECTOR document  32a1493  (workflow) - builder-nodeselector: correct grammar  fdf76e4  (workflow) - managing-app-processes.md: update proc type naming guidelines (#769)  3df978c  (workflow) - managing-app-configuration: update \"kubernetes-probes\" link  722795b  (workflow) - configuring-load-balancers.md: mention forthcoming default (#768)  8980c62  (workflow) - src/applications/inter-app-communication.md: docs(src/applications/inter-app-communication.md) Add first draft  cc02dcd  (workflow) - configuring-registry.md: add examples (#779)  dc43777  (workflow) - installing-workflow/index.md: update get pods output (#777)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.13.0/#maintenance",
            "text": "703c249  (controller) - requirements: update idna to 2.4  2224594  (controller) - requirements: update psycopg2 to 2.7  1aed9e2  (controller) - requirements: update jsonfield to 2.0.0  49ec35d  (controller) - requirements: update Django to 1.10.6  8d6126a  (controller) - requirements: update gunicorn to 19.7.0  2d071f4  (controller) - requirements: update idna to 2.5  53d34de  (controller) - requirements: update jsonfield to 2.0.1  0274973  (controller) - rootfs/requirements.txt: add pyasn1  fcae228  (controller) - requirements: update django-auth-ldap to 1.2.10  74372a5  (controller) - requirements: update jmespath to 0.9.2  530256c  (controller) - requirements: update djangorestframework to 3.6.2  f01b846  (controller) - requirements: update psycopg2 to 2.7.1  429a645  (controller) - requirements: update gunicorn to 19.7.1  0caeb81  (controller) - Makefile: remove broken \"test-unit-quick\" target  e8e6f58  (controller) - dev_requirements: use deis/requests-mock fork  7713ff3  (postgres) - Makefile: remove test-unit target  66b9f1c  (registry) - Dockerfile: bump registry to v2.6.0  a795d72  (router) - ingress: Experimental Native Ingress  bece9d5  (router) - ingress: Experimental Native Ingress  ea4a68c  (router) - nginx: update nginx to 1.11.10  be3029c  (slugbuilder) - buildpacks: update heroku-buildpack-python to v102  d802b84  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v155  17cddde  (workflow) - ingress: Remove extra spaces  21fe9f9  (workflow) - ingress: Fix example usage in docs to match new YAML  33a6251  (workflow) - ingress: Fix typo  9f5bcea  (workflow) - ingress: Revert to using if statements in router  b8e404c  (workflow) - ingress: Documentation updates from code review  dcac309  (workflow) - ingress: Typo in  experimental  5d4866d  (workflow) - upgrade: Upgrade kops to 1.5.3  3e09799  (workflow-e2e) - README.md: update build status badge",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.12.0/",
            "text": "Workflow v2.11.0 -> v2.12.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.7.1 -> v2.8.0\n\n\ncontroller v2.11.0 -> v2.12.0\n\n\ndockerbuilder v2.6.0 -> v2.7.1\n\n\nfluentd v2.6.1 -> v2.7.0\n\n\nmonitor v2.7.1 -> v2.8.0\n\n\npostgres v2.5.1 -> v2.5.2\n\n\nregistry v2.3.3 -> v2.3.4\n\n\nrouter v2.9.0 -> v2.11.0\n\n\nslugbuilder v2.4.9 -> v2.4.10\n\n\nslugrunner v2.2.4 -> v2.3.0\n\n\nworkflow v2.11.0 -> v2.12.0\n\n\nworkflow-cli v2.11.0 -> v2.12.0\n\n\nworkflow-e2e v2.9.0 -> v2.10.0\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\nb91c8a0\n (builder) - gitreceive: add app envvars to DOCKER_BUILD_ARGS\n\n\n357f9a1\n (builder) - gitreceive: fix type of dockerBuildArgs\n\n\n2c1316a\n (dockerbuilder) - deploy: support DOCKER_BUILD_ARGS envvar\n\n\n0681d7e\n (dockerbuilder) - deploy: Use empty default if DOCKER_BUILD_ARGS env var is not set\n\n\na3ed520\n (fluentd) - elasticsearch: add support for \"reload_connections\" option\n\n\n503ca0e\n (monitor) - grafana: allow user to install plugins\n\n\n74449a6\n (router) - charts: add resource requests to chart\n\n\nd241b74\n (router) - proxyBuffers: Add app-level proxy buffer config options\n\n\n2b9074f\n (router) - proxyBuffers: Set at global level; override at app level\n\n\n98796f8\n (slugrunner) - Makefile: set docker build flags via environment variable\n\n\nd3e0d74\n (workflow-e2e) - tests: add config:set spec with dockerfile app\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n3b7fcef\n (builder) - pkg: placate new go metalinter warnings\n\n\n84753d2\n (router) - charts: disable host_port/enabled by default\n\n\n9ecea1f\n (workflow) - chart: remove upgrade-job.yaml (#748)\n\n\nf5e7199\n (workflow) - router: disable router hostPort usage by default\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nb3b1d20\n (builder) - Dockerfile: force gunzip of license files\n\n\ne1e3452\n (builder) - gitreceive/build.go: watch pods in the appropriate namespace\n\n\n7f121a4\n (builder) - .travis.yml: declare env vars on one line\n\n\n98f50c5\n (controller) - models/app: recreate proc types on switch from Dockerfile to buildpack\n\n\n8480f69\n (controller) - app.py: use current namespace instead of \"deis\"\n\n\nbfadce8\n (controller) - charts: default registration mode to \"admin_only\"\n\n\n13b2463\n (dockerbuilder) - deploy: inject DOCKER_BUILD_ARGS into the Dockerfile\n\n\n861100b\n (fluentd) - Dockerfile: force gunzip of license files\n\n\n5188f77\n (postgres) - create_bucket: avoid S3 InvalidLocationConstraint error\n\n\n2ada84f\n (postgres) - .travis.yml: declare env vars on one line\n\n\n86a30d7\n (registry) - .travis.yml: declare env vars on one line\n\n\na885078\n (registry) - create-bucket: avoid S3 InvalidLocationConstraint error\n\n\n5df84f1\n (router) - Dockerfile: force gunzip of license files\n\n\nfa9c217\n (router) - style: Apply mandatory formatting fixes\n\n\nf2d7ee5\n (router) - .travis.yml: Make travis apply style checks\n\n\n65b7487\n (router) - charts: quote annotation values\n\n\ne7bb879\n (workflow) - quickstart: fix kops typo\n\n\n1c506d7\n (workflow) - quickstart: update azure quickstart docs\n\n\n7d63d07\n (workflow) - charts: default registration mode to \"admin_only\" (#758)\n\n\n02e9437\n (workflow) - quickstart: prepend Azure envvars with AZURE_\n\n\n6f5d0ca\n (workflow) - aws/boot: don't overwrite kops with kubectl\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n3e8ff74\n (router) - README: Reflect newer install/hack/deploy processes\n\n\n67d5d8b\n (workflow) - src/quickstart/provider/aws: Use kops instead of kube-up.sh for workflow clusters on AWs\n\n\n2217993\n (workflow) - src/quickstart/provider/aws: docs(src/quickstart/provider/aws) Changes from code review.\n\n\n18d24d9\n (workflow) - platform-monitoring.md: update grafana un/pw set instructions\n\n\n5c16b82\n (workflow) - src/quickstart/provider/aws: docs(src/quickstart/provider/aws) Changes from code review.\n\n\nea8c7a6\n (workflow) - src/quickstart/provider/aws: Changes from code review.\n\n\ne6d36a6\n (workflow) - src/roadmap/releases.md: simplify docs in global changelog step (#722)\n\n\n2511d0a\n (workflow) - managing-workflow: docs(managing-workflow) Document k8s annotation for AWS ELB idle timeout\n\n\n427e49a\n (workflow) - tuning-component-settings: elaborate with practical examples (#749)\n\n\ndf70aa5\n (workflow) - installing: specify helm v2.1.3 as minimum everywhere\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\ne7eafb9\n (builder) - Makefile: update docker-go-dev to v0.22.0\n\n\nf3e13b3\n (builder) - glide: bump golang.org/x/crypto to 453249f\n\n\ne69a9a4\n (controller) - requirements: update jmespath to 0.9.1\n\n\n99c11d9\n (controller) - requirements: update requests to 2.13.0\n\n\n74d16af\n (controller) - requirements: update backoff library\n\n\nafbca0d\n (controller) - requirements: update jsonschema library\n\n\n5174fea\n (controller) - dev_requirements: update flake8 linter library\n\n\n96576dd\n (controller) - requirements: update django-auth-ldap to 1.2.9\n\n\n8c8261d\n (controller) - requirements: update djangorestframework to 3.5.4\n\n\n894a324\n (controller) - requirements: update requests-toolbelt to 0.7.1\n\n\n52a7650\n (dockerbuilder) - dev_requirements: update flake8 linter library\n\n\n6997f06\n (dockerbuilder) - .travis.yml: update python to 3.5.x\n\n\n23d2da2\n (fluentd) - Dockerfile: update fluentd to 0.14.13\n\n\n614fd40\n (postgres) - Dockerfile: bump PG_VERSION to 9.4.11-1.pgdg16.04+1\n\n\n46f6e1d\n (router) - Makefile: update docker-go-dev to v0.22.0\n\n\n8de0045\n (router) - nginx: update nginx to 1.11.9\n\n\n1cde072\n (router) - Makefile: Modernize dev/hack deployment\n\n\nf7a202e\n (router) - Makefile: Remove minimally useful clean targets\n\n\nabb7a8e\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v98\n\n\nd255d7b\n (slugbuilder) - buildpacks: update heroku-buildpack-clojure to v76\n\n\n97218ad\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v60\n\n\n1f35b41\n (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v21\n\n\n327d2bb\n (slugbuilder) - buildpacks: update heroku-buildpack-java to v50\n\n\nb3844cb\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v119\n\n\ne392787\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v153\n\n\n0798cd6\n (slugbuilder) - buildpacks: update heroku-buildpack-scala to v75\n\n\n6abe59d\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v62\n\n\nd453264\n (slugbuilder) - buildpacks: update heroku-buildpack-java to v51\n\n\n4d92580\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v99\n\n\nead5bbb\n (slugbuilder) - buildpacks: update heroku-buildpack-scala to v76\n\n\na8b2844\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v120\n\n\n8aff8c6\n (workflow-cli) - Dockerfile: update go-dev to v0.22.0",
            "title": "v2.12.0"
        },
        {
            "location": "/changelogs/v2.12.0/#workflow-v2110-v2120",
            "text": "",
            "title": "Workflow v2.11.0 -&gt; v2.12.0"
        },
        {
            "location": "/changelogs/v2.12.0/#releases",
            "text": "builder v2.7.1 -> v2.8.0  controller v2.11.0 -> v2.12.0  dockerbuilder v2.6.0 -> v2.7.1  fluentd v2.6.1 -> v2.7.0  monitor v2.7.1 -> v2.8.0  postgres v2.5.1 -> v2.5.2  registry v2.3.3 -> v2.3.4  router v2.9.0 -> v2.11.0  slugbuilder v2.4.9 -> v2.4.10  slugrunner v2.2.4 -> v2.3.0  workflow v2.11.0 -> v2.12.0  workflow-cli v2.11.0 -> v2.12.0  workflow-e2e v2.9.0 -> v2.10.0",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.12.0/#features",
            "text": "b91c8a0  (builder) - gitreceive: add app envvars to DOCKER_BUILD_ARGS  357f9a1  (builder) - gitreceive: fix type of dockerBuildArgs  2c1316a  (dockerbuilder) - deploy: support DOCKER_BUILD_ARGS envvar  0681d7e  (dockerbuilder) - deploy: Use empty default if DOCKER_BUILD_ARGS env var is not set  a3ed520  (fluentd) - elasticsearch: add support for \"reload_connections\" option  503ca0e  (monitor) - grafana: allow user to install plugins  74449a6  (router) - charts: add resource requests to chart  d241b74  (router) - proxyBuffers: Add app-level proxy buffer config options  2b9074f  (router) - proxyBuffers: Set at global level; override at app level  98796f8  (slugrunner) - Makefile: set docker build flags via environment variable  d3e0d74  (workflow-e2e) - tests: add config:set spec with dockerfile app",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.12.0/#refactors",
            "text": "3b7fcef  (builder) - pkg: placate new go metalinter warnings  84753d2  (router) - charts: disable host_port/enabled by default  9ecea1f  (workflow) - chart: remove upgrade-job.yaml (#748)  f5e7199  (workflow) - router: disable router hostPort usage by default",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.12.0/#fixes",
            "text": "b3b1d20  (builder) - Dockerfile: force gunzip of license files  e1e3452  (builder) - gitreceive/build.go: watch pods in the appropriate namespace  7f121a4  (builder) - .travis.yml: declare env vars on one line  98f50c5  (controller) - models/app: recreate proc types on switch from Dockerfile to buildpack  8480f69  (controller) - app.py: use current namespace instead of \"deis\"  bfadce8  (controller) - charts: default registration mode to \"admin_only\"  13b2463  (dockerbuilder) - deploy: inject DOCKER_BUILD_ARGS into the Dockerfile  861100b  (fluentd) - Dockerfile: force gunzip of license files  5188f77  (postgres) - create_bucket: avoid S3 InvalidLocationConstraint error  2ada84f  (postgres) - .travis.yml: declare env vars on one line  86a30d7  (registry) - .travis.yml: declare env vars on one line  a885078  (registry) - create-bucket: avoid S3 InvalidLocationConstraint error  5df84f1  (router) - Dockerfile: force gunzip of license files  fa9c217  (router) - style: Apply mandatory formatting fixes  f2d7ee5  (router) - .travis.yml: Make travis apply style checks  65b7487  (router) - charts: quote annotation values  e7bb879  (workflow) - quickstart: fix kops typo  1c506d7  (workflow) - quickstart: update azure quickstart docs  7d63d07  (workflow) - charts: default registration mode to \"admin_only\" (#758)  02e9437  (workflow) - quickstart: prepend Azure envvars with AZURE_  6f5d0ca  (workflow) - aws/boot: don't overwrite kops with kubectl",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.12.0/#documentation",
            "text": "3e8ff74  (router) - README: Reflect newer install/hack/deploy processes  67d5d8b  (workflow) - src/quickstart/provider/aws: Use kops instead of kube-up.sh for workflow clusters on AWs  2217993  (workflow) - src/quickstart/provider/aws: docs(src/quickstart/provider/aws) Changes from code review.  18d24d9  (workflow) - platform-monitoring.md: update grafana un/pw set instructions  5c16b82  (workflow) - src/quickstart/provider/aws: docs(src/quickstart/provider/aws) Changes from code review.  ea8c7a6  (workflow) - src/quickstart/provider/aws: Changes from code review.  e6d36a6  (workflow) - src/roadmap/releases.md: simplify docs in global changelog step (#722)  2511d0a  (workflow) - managing-workflow: docs(managing-workflow) Document k8s annotation for AWS ELB idle timeout  427e49a  (workflow) - tuning-component-settings: elaborate with practical examples (#749)  df70aa5  (workflow) - installing: specify helm v2.1.3 as minimum everywhere",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.12.0/#maintenance",
            "text": "e7eafb9  (builder) - Makefile: update docker-go-dev to v0.22.0  f3e13b3  (builder) - glide: bump golang.org/x/crypto to 453249f  e69a9a4  (controller) - requirements: update jmespath to 0.9.1  99c11d9  (controller) - requirements: update requests to 2.13.0  74d16af  (controller) - requirements: update backoff library  afbca0d  (controller) - requirements: update jsonschema library  5174fea  (controller) - dev_requirements: update flake8 linter library  96576dd  (controller) - requirements: update django-auth-ldap to 1.2.9  8c8261d  (controller) - requirements: update djangorestframework to 3.5.4  894a324  (controller) - requirements: update requests-toolbelt to 0.7.1  52a7650  (dockerbuilder) - dev_requirements: update flake8 linter library  6997f06  (dockerbuilder) - .travis.yml: update python to 3.5.x  23d2da2  (fluentd) - Dockerfile: update fluentd to 0.14.13  614fd40  (postgres) - Dockerfile: bump PG_VERSION to 9.4.11-1.pgdg16.04+1  46f6e1d  (router) - Makefile: update docker-go-dev to v0.22.0  8de0045  (router) - nginx: update nginx to 1.11.9  1cde072  (router) - Makefile: Modernize dev/hack deployment  f7a202e  (router) - Makefile: Remove minimally useful clean targets  abb7a8e  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v98  d255d7b  (slugbuilder) - buildpacks: update heroku-buildpack-clojure to v76  97218ad  (slugbuilder) - buildpacks: update heroku-buildpack-go to v60  1f35b41  (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v21  327d2bb  (slugbuilder) - buildpacks: update heroku-buildpack-java to v50  b3844cb  (slugbuilder) - buildpacks: update heroku-buildpack-php to v119  e392787  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v153  0798cd6  (slugbuilder) - buildpacks: update heroku-buildpack-scala to v75  6abe59d  (slugbuilder) - buildpacks: update heroku-buildpack-go to v62  d453264  (slugbuilder) - buildpacks: update heroku-buildpack-java to v51  4d92580  (slugbuilder) - buildpacks: update heroku-buildpack-python to v99  ead5bbb  (slugbuilder) - buildpacks: update heroku-buildpack-scala to v76  a8b2844  (slugbuilder) - buildpacks: update heroku-buildpack-php to v120  8aff8c6  (workflow-cli) - Dockerfile: update go-dev to v0.22.0",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.11.0/",
            "text": "Workflow v2.10.0 -> v2.11.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.6.1 -> v2.7.1\n\n\ncontroller v2.10.0 -> v2.11.0\n\n\ndockerbuilder v2.5.2 -> v2.6.0\n\n\nfluentd v2.6.0 -> v2.6.1\n\n\nlogger v2.4.1 -> v2.4.2\n\n\nminio v2.3.4 -> v2.3.5\n\n\nmonitor v2.7.0 -> v2.7.1\n\n\nnsq v2.2.5 -> v2.2.6\n\n\npostgres v2.5.0 -> v2.5.1\n\n\nredis v2.2.4 -> v2.2.5\n\n\nregistry v2.3.2 -> v2.3.3\n\n\nregistry-token-refresher v1.1.0 -> v1.1.1\n\n\nrouter v2.8.1 -> v2.9.0\n\n\nslugbuilder v2.4.8 -> v2.4.9\n\n\nworkflow v2.10.0 -> v2.11.0\n\n\nworkflow-cli v2.10.0 -> v2.11.0\n\n\nworkflow-e2e v2.8.0 -> v2.9.0\n\n\nworkflow-manager v2.4.4 -> v2.4.5\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\nbd97e3e\n (builder) - cleaner: delete from object store\n\n\nfcc5bb0\n (builder) - Makefile: set docker build flags via environment variable\n\n\nae03152\n (controller) - settings: Get timezone from environment variable (#1196)\n\n\n48cd872\n (controller) - Makefile: set docker build flags via environment variable\n\n\n003e8dd\n (dockerbuilder) - Makefile: set docker build flags via environment variable\n\n\na1e28c8\n (fluentd) - Makefile: set docker build flags via environment variable\n\n\n8ce9845\n (logger) - Makefile: set docker build flags via environment variable\n\n\nb2fc347\n (minio) - Makefile: set docker build flags via environment variable\n\n\nbfdf091\n (monitor) - charts: add optional persistence storage to influxdb and grafana\n\n\n138fb11\n (monitor) - charts: add optional persistence storage to influxdb and grafana\n\n\nc58fde6\n (monitor) - Makefile: set docker build flags via environment variable\n\n\nb32fe54\n (nsq) - Makefile: set docker build flags via environment variable\n\n\n524fdf5\n (postgres) - Makefile: set docker build flags via environment variable\n\n\n0cf0deb\n (redis) - Makefile: set docker build flags via environment variable\n\n\n4f46069\n (registry) - Makefile: set docker build flags via environment variable\n\n\nfaf2eb2\n (registry-token-refresher) - Makefile: set docker build flags via environment variable\n\n\n4ca3a74\n (router) - router: make default app configurable\n\n\n5dba76c\n (router) - router: make server_token flag configurable\n\n\ncf87e27\n (router) - Makefile: set docker build flags via environment variable\n\n\n30d2caa\n (slugbuilder) - Makefile: set docker build flags via environment variable\n\n\n3ef0a86\n (workflow) Makefile: set docker build flags via environment variable\n\n\n6307677\n (workflow) charts: add optional persistence storage to influxdb and grafana (#699)\n\n\n9b09080\n (workflow-manager) - Makefile: set docker build flags via environment variable\n\n\ncc60fa0\n (workflow-cli) Makefile: set docker build flags via environment variable\n\n\n70797cb\n (workflow-e2e) limits-cmd: accept new limits:set value type\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n7bb769f\n (dockerbuilder) - deploy.py: placate new flake8 linter checks\n\n\n88f7007\n (workflow) upgrading-workflow: use -w 0 flag when base64 encoding\n\n\n3e65eba\n (workflow) quickstart: use markdown-include to de-duplicate quickstart info\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n634bfe9\n (builder) - charts: reference registry-proxy on 127.0.0.1\n\n\n84b6342\n (controller) - charts: pipeline time_zone value to quote func\n\n\n3f860bf\n (controller) - Dockerfile: force gunzip of copyright archive\n\n\ne8f0284\n (controller) - Makefile: build docker image with --no-cache by default\n\n\nbdb5acd\n (controller) - api: add certificate private key validator migration (#1199)\n\n\nda408b3\n (controller) - charts: reference registry-proxy on 127.0.0.1 (#1239)\n\n\nf14a6db\n (dockerbuilder) - Dockerfile: fix gunzip -f\n\n\nc9f6e01\n (postgres) - 001_setup_envdir.sh: inspect actual var instead of literal string\n\n\n5aafbac\n (registry) - create-bucket: set BUCKET_NAME for swift\n\n\n96f0c61\n (router) - charts: remove deployment and service annotations\n\n\n6d0d344\n (slugbuilder) - download_buildpack: define name of buildpack\n\n\n2817dbc\n (workflow) azure: use regular storage instead of premium\n\n\n8691955\n (workflow) azure/quickstart: fix Azure link in the menu\n\n\n0d647e5\n (workflow) applications: fixup --headers usage\n\n\ne6c9e23\n (workflow) tuning-component-settings: move LDAP settings under Controller\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n6cbd175\n (builder) - *: Fix typo in README.md\n\n\n7911fac\n (builder) - *: update main README.md\n\n\n51879b2\n (controller) - README: specify correct python version\n\n\n1345f2c\n (controller) - README: update database usage in tests (#1233)\n\n\n64eeff1\n (logger) - README.md: update Deis Workflow reference\n\n\n9bcbcfd\n (monitor) - README.md: update Deis Workflow reference\n\n\n963c100\n (nsq) - README.md: update Deis Workflow reference\n\n\nd9882fa\n (redis) - README.md: update Deis Workflow reference\n\n\n9293f37\n (workflow-cli) README: add latest stable release URL\n\n\n16034cc\n (workflow) releases: omit obsolete requirement for a charts PR\n\n\nc61eedb\n (workflow) releases: move workflow docs release after changelog PR\n\n\nd430e42\n (workflow) azure: streamline azure boot process\n\n\na71c0da\n (workflow) installing-workflow: no periods in S3 bucket names\n\n\n7cc8b2f\n (workflow) production-deployments: recommend disabling grafana signups\n\n\na5f92eb\n (workflow) monitoring: document grafana and influxdb persistence (#713)\n\n\nc0410c6\n (workflow) components: document the monitoring stack\n\n\n4eea426\n (workflow) Azure: remove service principal steps\n\n\nc65fae6\n (workflow) Azure: note for kubernetes get-credentials\n\n\na5d71e2\n (workflow) Azure: Fix storage key and add note\n\n\ncccde15\n (workflow) api/v2.3: add TLS API examples and index v2.3 API\n\n\n5a37885\n (workflow) managing-workflow: Add scaling the routers to the production deployment notes.\n\n\nc0285ed\n (workflow) aws: update for latest k8s version available\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n0ed0404\n (builder) - Dockerfile: update deis/base to v0.3.6\n\n\nd7f5ff0\n (builder) - glide: bump golang.org/x/crypto to b822463\n\n\n22106d2\n (controller) - requirements: update Django to 1.10.5\n\n\n1c12587\n (controller) - Dockerfile: update deis/base to v0.3.6 (#1197)\n\n\n4e45ef5\n (controller) - requirements: update requests to 2.12.5\n\n\n9faa4b2\n (controller) - dev_requirements: update coverage to 4.3.4\n\n\n4b7db76\n (controller) - requirements: update pyldap to 2.4.28\n\n\nd6b188d\n (dockerbuilder) - dev_requirements: upgrade flake8 to 3.2.1\n\n\n82f77c3\n (dockerbuilder) - Dockerfile: update deis/base to v0.3.6\n\n\n40f647e\n (fluentd) - Dockerfile: update deis/base to v0.3.6\n\n\nf7afeb7\n (logger) - Dockerfile: update deis/base to v0.3.6\n\n\n14342eb\n (minio) - Dockerfile: update deis/base to v0.3.6\n\n\n8969f32\n (monitor) - Dockerfile: update Grafana to 4.0.2\n\n\nacb12e7\n (monitor) - Dockerfile: update deis/base to v0.3.6\n\n\nca8a140\n (monitor) - Dockerfile: update Influxdb to 1.1.1\n\n\n287dd60\n (monitor) - Dockerfile: update Influxdb to 1.1.1\n\n\n7c3ca4b\n (nsq) - Dockerfile: update deis/base to v0.3.6\n\n\nd04a77b\n (postgres) - Dockerfile: update deis/base to v0.3.6\n\n\n9f2e1b1\n (redis) - Dockerfile: update deis/base to v0.3.6\n\n\nbb6bba4\n (registry-token-refresher) - Dockerfile: update deis/base to v0.3.6\n\n\ndfb2cae\n (router) - Dockerfile: update deis/base to v0.3.6\n\n\n7638ca7\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v93\n\n\nac0192f\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v150\n\n\n3f4ccc4\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v97\n\n\nc40c6a0\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v117\n\n\n2df92c0\n (workflow) roadmap: update product roadmap\n\n\n1d12348\n (workflow) vagrant: update kubernetes release tarball to v1.5.1(workflow)\n\n\nf50916b\n (workflow-manager) - Dockerfile: update deis/base to v0.3.6\n\n\n7960130\n (workflow-cli) glide: update controller sdk to 9520b6c\n\n\nba0d452\n (workflow-e2e) glide: run glide up to get latest packages (#347)",
            "title": "v2.11.0"
        },
        {
            "location": "/changelogs/v2.11.0/#workflow-v2100-v2110",
            "text": "",
            "title": "Workflow v2.10.0 -&gt; v2.11.0"
        },
        {
            "location": "/changelogs/v2.11.0/#releases",
            "text": "builder v2.6.1 -> v2.7.1  controller v2.10.0 -> v2.11.0  dockerbuilder v2.5.2 -> v2.6.0  fluentd v2.6.0 -> v2.6.1  logger v2.4.1 -> v2.4.2  minio v2.3.4 -> v2.3.5  monitor v2.7.0 -> v2.7.1  nsq v2.2.5 -> v2.2.6  postgres v2.5.0 -> v2.5.1  redis v2.2.4 -> v2.2.5  registry v2.3.2 -> v2.3.3  registry-token-refresher v1.1.0 -> v1.1.1  router v2.8.1 -> v2.9.0  slugbuilder v2.4.8 -> v2.4.9  workflow v2.10.0 -> v2.11.0  workflow-cli v2.10.0 -> v2.11.0  workflow-e2e v2.8.0 -> v2.9.0  workflow-manager v2.4.4 -> v2.4.5",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.11.0/#features",
            "text": "bd97e3e  (builder) - cleaner: delete from object store  fcc5bb0  (builder) - Makefile: set docker build flags via environment variable  ae03152  (controller) - settings: Get timezone from environment variable (#1196)  48cd872  (controller) - Makefile: set docker build flags via environment variable  003e8dd  (dockerbuilder) - Makefile: set docker build flags via environment variable  a1e28c8  (fluentd) - Makefile: set docker build flags via environment variable  8ce9845  (logger) - Makefile: set docker build flags via environment variable  b2fc347  (minio) - Makefile: set docker build flags via environment variable  bfdf091  (monitor) - charts: add optional persistence storage to influxdb and grafana  138fb11  (monitor) - charts: add optional persistence storage to influxdb and grafana  c58fde6  (monitor) - Makefile: set docker build flags via environment variable  b32fe54  (nsq) - Makefile: set docker build flags via environment variable  524fdf5  (postgres) - Makefile: set docker build flags via environment variable  0cf0deb  (redis) - Makefile: set docker build flags via environment variable  4f46069  (registry) - Makefile: set docker build flags via environment variable  faf2eb2  (registry-token-refresher) - Makefile: set docker build flags via environment variable  4ca3a74  (router) - router: make default app configurable  5dba76c  (router) - router: make server_token flag configurable  cf87e27  (router) - Makefile: set docker build flags via environment variable  30d2caa  (slugbuilder) - Makefile: set docker build flags via environment variable  3ef0a86  (workflow) Makefile: set docker build flags via environment variable  6307677  (workflow) charts: add optional persistence storage to influxdb and grafana (#699)  9b09080  (workflow-manager) - Makefile: set docker build flags via environment variable  cc60fa0  (workflow-cli) Makefile: set docker build flags via environment variable  70797cb  (workflow-e2e) limits-cmd: accept new limits:set value type",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.11.0/#refactors",
            "text": "7bb769f  (dockerbuilder) - deploy.py: placate new flake8 linter checks  88f7007  (workflow) upgrading-workflow: use -w 0 flag when base64 encoding  3e65eba  (workflow) quickstart: use markdown-include to de-duplicate quickstart info",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.11.0/#fixes",
            "text": "634bfe9  (builder) - charts: reference registry-proxy on 127.0.0.1  84b6342  (controller) - charts: pipeline time_zone value to quote func  3f860bf  (controller) - Dockerfile: force gunzip of copyright archive  e8f0284  (controller) - Makefile: build docker image with --no-cache by default  bdb5acd  (controller) - api: add certificate private key validator migration (#1199)  da408b3  (controller) - charts: reference registry-proxy on 127.0.0.1 (#1239)  f14a6db  (dockerbuilder) - Dockerfile: fix gunzip -f  c9f6e01  (postgres) - 001_setup_envdir.sh: inspect actual var instead of literal string  5aafbac  (registry) - create-bucket: set BUCKET_NAME for swift  96f0c61  (router) - charts: remove deployment and service annotations  6d0d344  (slugbuilder) - download_buildpack: define name of buildpack  2817dbc  (workflow) azure: use regular storage instead of premium  8691955  (workflow) azure/quickstart: fix Azure link in the menu  0d647e5  (workflow) applications: fixup --headers usage  e6c9e23  (workflow) tuning-component-settings: move LDAP settings under Controller",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.11.0/#documentation",
            "text": "6cbd175  (builder) - *: Fix typo in README.md  7911fac  (builder) - *: update main README.md  51879b2  (controller) - README: specify correct python version  1345f2c  (controller) - README: update database usage in tests (#1233)  64eeff1  (logger) - README.md: update Deis Workflow reference  9bcbcfd  (monitor) - README.md: update Deis Workflow reference  963c100  (nsq) - README.md: update Deis Workflow reference  d9882fa  (redis) - README.md: update Deis Workflow reference  9293f37  (workflow-cli) README: add latest stable release URL  16034cc  (workflow) releases: omit obsolete requirement for a charts PR  c61eedb  (workflow) releases: move workflow docs release after changelog PR  d430e42  (workflow) azure: streamline azure boot process  a71c0da  (workflow) installing-workflow: no periods in S3 bucket names  7cc8b2f  (workflow) production-deployments: recommend disabling grafana signups  a5f92eb  (workflow) monitoring: document grafana and influxdb persistence (#713)  c0410c6  (workflow) components: document the monitoring stack  4eea426  (workflow) Azure: remove service principal steps  c65fae6  (workflow) Azure: note for kubernetes get-credentials  a5d71e2  (workflow) Azure: Fix storage key and add note  cccde15  (workflow) api/v2.3: add TLS API examples and index v2.3 API  5a37885  (workflow) managing-workflow: Add scaling the routers to the production deployment notes.  c0285ed  (workflow) aws: update for latest k8s version available",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.11.0/#maintenance",
            "text": "0ed0404  (builder) - Dockerfile: update deis/base to v0.3.6  d7f5ff0  (builder) - glide: bump golang.org/x/crypto to b822463  22106d2  (controller) - requirements: update Django to 1.10.5  1c12587  (controller) - Dockerfile: update deis/base to v0.3.6 (#1197)  4e45ef5  (controller) - requirements: update requests to 2.12.5  9faa4b2  (controller) - dev_requirements: update coverage to 4.3.4  4b7db76  (controller) - requirements: update pyldap to 2.4.28  d6b188d  (dockerbuilder) - dev_requirements: upgrade flake8 to 3.2.1  82f77c3  (dockerbuilder) - Dockerfile: update deis/base to v0.3.6  40f647e  (fluentd) - Dockerfile: update deis/base to v0.3.6  f7afeb7  (logger) - Dockerfile: update deis/base to v0.3.6  14342eb  (minio) - Dockerfile: update deis/base to v0.3.6  8969f32  (monitor) - Dockerfile: update Grafana to 4.0.2  acb12e7  (monitor) - Dockerfile: update deis/base to v0.3.6  ca8a140  (monitor) - Dockerfile: update Influxdb to 1.1.1  287dd60  (monitor) - Dockerfile: update Influxdb to 1.1.1  7c3ca4b  (nsq) - Dockerfile: update deis/base to v0.3.6  d04a77b  (postgres) - Dockerfile: update deis/base to v0.3.6  9f2e1b1  (redis) - Dockerfile: update deis/base to v0.3.6  bb6bba4  (registry-token-refresher) - Dockerfile: update deis/base to v0.3.6  dfb2cae  (router) - Dockerfile: update deis/base to v0.3.6  7638ca7  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v93  ac0192f  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v150  3f4ccc4  (slugbuilder) - buildpacks: update heroku-buildpack-python to v97  c40c6a0  (slugbuilder) - buildpacks: update heroku-buildpack-php to v117  2df92c0  (workflow) roadmap: update product roadmap  1d12348  (workflow) vagrant: update kubernetes release tarball to v1.5.1(workflow)  f50916b  (workflow-manager) - Dockerfile: update deis/base to v0.3.6  7960130  (workflow-cli) glide: update controller sdk to 9520b6c  ba0d452  (workflow-e2e) glide: run glide up to get latest packages (#347)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.10.0/",
            "text": "Workflow v2.9.1 -> v2.10.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\ncontroller v2.9.1 -> v2.10.0\n\n\nfluentd v2.5.0 -> v2.6.0\n\n\nlogger v2.4.0 -> v2.4.1\n\n\npostgres v2.4.4 -> v2.5.0\n\n\nregistry v2.3.1 -> v2.3.2\n\n\nregistry-token-refresher v1.0.4 -> v1.1.0\n\n\nrouter v2.7.0 -> v2.8.1\n\n\nworkflow v2.9.1 -> v2.10.0\n\n\nworkflow-cli v2.9.1 -> v2.10.0\n\n\nworkflow-e2e v2.7.1 -> v2.8.0\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\n38275ea\n (controller) - controller: add LDAP authentication\n\n\n51cab9d\n (controller) - api: add deploy hooks (#1168)\n\n\n805a455\n (controller) - api: validate a certificate's private key (#1157)\n\n\n5bed284\n (fluentd) - charts: add optional syslog endpoint setting\n\n\n830cee8\n (postgres) - charts: Add support to specify creds for in cluster db through values file\n\n\nf7df62a\n (workflow-e2e) - auth_test.go: add interactive register spec\n\n\n67b658f\n (workflow) - charts: Add optional syslog endpoint setting to fluentd\n\n\n4a5b895\n (workflow) - azure: Add docs to specify support for the azure container registry\n\n\n19b9ec1\n (workflow) - azure: skeleton for Azure Container Service quickstart\n\n\nf344230\n (workflow) - Dockerfile: make the Dockerfile more functional\n\n\nde4564f\n (workflow) - managing-deis: add docs for deploy hooks\n\n\ne255775\n (workflow) - charts: Add support to specify creds for in cluster db through values file\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\nffa66e7\n (controller) - api: placate new flake8 linter checks\n\n\ne470052\n (controller) - codecov: add 0.2% failure threshold to codecov (#1192)\n\n\nf2bc3ae\n (registry) - update docs and Makefile\n\n\nba06288\n (workflow-cli) - placate gometalinter checks\n\n\n91dda51\n (workflow-e2e) - adjust error message expectations\n\n\n1c05adb\n (workflow) - require key_json chart value to be base64-encoded\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n1609d89\n (controller) - apiserver: Add an option to skip ssl verification when interacting with the k8s api\n\n\nd2ee40f\n (controller) - boot: Don't change group ownership of docker socket\n\n\n62f081a\n (controller) - scheduler: use pypa packaging to compare server version (#1167)\n\n\n9f4543b\n (controller) - domain: remove the annotation when domain is deleted\n\n\n27a59d1\n (controller) - service-config: Don't add annotations if the value is empty\n\n\n890a263\n (controller) - api: account for NoneType when resource is gone (#1178)\n\n\nf132b25\n (controller) - api: validate app name against k8s service regex (#1163)\n\n\n9098331\n (controller) - perms: Use the same regex for perms as auth endpoint (#1181)\n\n\n30ab1d3\n (controller) - settings: disable LDAP by default (#1191)\n\n\n4c36791\n (controller) - management: display error when connecting to the database (#1190)\n\n\n78ad61f\n (fluentd) - logger: show error message and backtrace\n\n\n107b2e1\n (fluentd) - logger: utf-8 encoding\n\n\n34da2e2\n (router) - charts: enable hostports by default\n\n\n4284483\n (workflow-cli) - healthcheck: Parse arguments properly for httpheaders\n\n\n958a3ab\n (workflow-cli) - Jenkinsfile: update downstream test job\n\n\n2b7700d\n (workflow-cli) - glide: update the controller sdk go version in the glide\n\n\n388fd97\n (workflow-cli) - Jenkinsfile: set git_branch to env.BRANCH_NAME\n\n\n6d644a1\n (workflow-e2e) - docker-test-integration.sh: explicit DEBUG_MODE check\n\n\nf81df33\n (workflow-e2e) - chart: s/ginko/ginkgo\n\n\na686dfd\n (workflow) - values: redis params are in the redis chart\n\n\nb3a9db1\n (workflow) - upgrade: Use a random generated name for upgrade job so it be upgraded multiple times using helm\n\n\n5b7b98d\n (workflow) - releases: remove reference to deis/charts in release notes\n\n\n233b630\n (workflow) - managing-workflow: update logging and monitoring docs to reflect helm v2\n\n\n6989718\n (workflow) - charts: enable hostports by default\n\n\n2a96baf\n (workflow) - upgrading-workflow: fix helm upgrade usage\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nee93ec4\n (controller) - README.md: update badge to use deis-bot's account\n\n\nb4a86c8\n (controller) - README: remove helmc mention\n\n\n1e90453\n (registry-token-refresher) - update key_json value\n\n\n29492e5\n (workflow) - managing-workflow: Add docs about resource quota for application namespace\n\n\nc9539d0\n (workflow) - src/roadmap/releases.md: update to use k/helm\n\n\n48b875e\n (workflow) - gke/boot: Update command to auth to kubernetes host\n\n\n3c6cb1c\n (workflow) - azure-acs: style and typo fixes\n\n\n42f99cf\n (workflow) - managing-workflow: Add LDAP configuration\n\n\n3773830\n (workflow) - releases.md: update to reference workflow-chart-stage job\n\n\n6fa3f37\n (workflow) - system-requirements: add warning for k8s 1.5\n\n\n057cbe6\n (workflow) - azure-acs: more info and spell fixes\n\n\n5bbc137\n (workflow) - installing-workflow: deprecate support for v1.2 clusters\n\n\nc5d4d46\n (workflow) - update versions to v2.9.1 and add changelog\n\n\n0a8e44e\n (workflow) - remove need for echo after helm fetch verify; update sha256\n\n\n0cc5dfb\n (workflow) - releases.md: add patch release notes\n\n\nf16816e\n (workflow) - README.md: add temporary holiday notice\n\n\n3406eac\n (workflow) - applications: fix broken links for SSH keys\n\n\n70f50a5\n (workflow) - add upgrade note for gcs/gcr\n\n\n5f6dd73\n (workflow) - upgrading-workflow: add note about using single quotes around base64 encoded string\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n22288eb\n (controller) - requirements: update requests lib to 2.12.3\n\n\nf3d71c0\n (controller) - requirements: update Django to 1.10.4\n\n\ncfc08d6\n (controller) - dev_requirements: upgrade flake8 to 3.2.1\n\n\nf3d9c1b\n (controller) - requirements: update pytz to 2016.10\n\n\n6d13723\n (controller) - Makefile: remove pyvenv script (#1161)\n\n\n0566131\n (controller) - dev_requirements: update coverage to 4.3.1\n\n\nb3056f0\n (controller) - requirements: update requests to 2.12.4\n\n\nf478ee9\n (controller) - requirements: update idna to 2.2\n\n\nb6d19d5\n (logger) - manifests: remove manifests\n\n\n50307cc\n (logger) - glide: update envconfig\n\n\na0e22a7\n (router) - nginx: update nginx to 1.11.7\n\n\n8622f48\n (router) - nginx: update nginx to 1.11.8\n\n\n0fd3251\n (workflow-cli) Dockerfile: update go-dev to v0.21.0\n\n\n62c2e65\n (workflow-cli) glide: bump controller-sdk-go to 50747d7\n\n\nbf269d2\n (workflow) azure: add Azure section to sidebar\n\n\na4a589e\n (workflow) docs: add images for ui steps\n\n\nbf61fd6\n (workflow) docs: flesh out steps for azure acs through UI\n\n\nddfe3a0\n (workflow) chart: update values file description\n\n\n1fb84dc\n (workflow) controller: disable tls verification on acs",
            "title": "v2.10.0"
        },
        {
            "location": "/changelogs/v2.10.0/#workflow-v291-v2100",
            "text": "",
            "title": "Workflow v2.9.1 -&gt; v2.10.0"
        },
        {
            "location": "/changelogs/v2.10.0/#releases",
            "text": "controller v2.9.1 -> v2.10.0  fluentd v2.5.0 -> v2.6.0  logger v2.4.0 -> v2.4.1  postgres v2.4.4 -> v2.5.0  registry v2.3.1 -> v2.3.2  registry-token-refresher v1.0.4 -> v1.1.0  router v2.7.0 -> v2.8.1  workflow v2.9.1 -> v2.10.0  workflow-cli v2.9.1 -> v2.10.0  workflow-e2e v2.7.1 -> v2.8.0",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.10.0/#features",
            "text": "38275ea  (controller) - controller: add LDAP authentication  51cab9d  (controller) - api: add deploy hooks (#1168)  805a455  (controller) - api: validate a certificate's private key (#1157)  5bed284  (fluentd) - charts: add optional syslog endpoint setting  830cee8  (postgres) - charts: Add support to specify creds for in cluster db through values file  f7df62a  (workflow-e2e) - auth_test.go: add interactive register spec  67b658f  (workflow) - charts: Add optional syslog endpoint setting to fluentd  4a5b895  (workflow) - azure: Add docs to specify support for the azure container registry  19b9ec1  (workflow) - azure: skeleton for Azure Container Service quickstart  f344230  (workflow) - Dockerfile: make the Dockerfile more functional  de4564f  (workflow) - managing-deis: add docs for deploy hooks  e255775  (workflow) - charts: Add support to specify creds for in cluster db through values file",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.10.0/#refactors",
            "text": "ffa66e7  (controller) - api: placate new flake8 linter checks  e470052  (controller) - codecov: add 0.2% failure threshold to codecov (#1192)  f2bc3ae  (registry) - update docs and Makefile  ba06288  (workflow-cli) - placate gometalinter checks  91dda51  (workflow-e2e) - adjust error message expectations  1c05adb  (workflow) - require key_json chart value to be base64-encoded",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.10.0/#fixes",
            "text": "1609d89  (controller) - apiserver: Add an option to skip ssl verification when interacting with the k8s api  d2ee40f  (controller) - boot: Don't change group ownership of docker socket  62f081a  (controller) - scheduler: use pypa packaging to compare server version (#1167)  9f4543b  (controller) - domain: remove the annotation when domain is deleted  27a59d1  (controller) - service-config: Don't add annotations if the value is empty  890a263  (controller) - api: account for NoneType when resource is gone (#1178)  f132b25  (controller) - api: validate app name against k8s service regex (#1163)  9098331  (controller) - perms: Use the same regex for perms as auth endpoint (#1181)  30ab1d3  (controller) - settings: disable LDAP by default (#1191)  4c36791  (controller) - management: display error when connecting to the database (#1190)  78ad61f  (fluentd) - logger: show error message and backtrace  107b2e1  (fluentd) - logger: utf-8 encoding  34da2e2  (router) - charts: enable hostports by default  4284483  (workflow-cli) - healthcheck: Parse arguments properly for httpheaders  958a3ab  (workflow-cli) - Jenkinsfile: update downstream test job  2b7700d  (workflow-cli) - glide: update the controller sdk go version in the glide  388fd97  (workflow-cli) - Jenkinsfile: set git_branch to env.BRANCH_NAME  6d644a1  (workflow-e2e) - docker-test-integration.sh: explicit DEBUG_MODE check  f81df33  (workflow-e2e) - chart: s/ginko/ginkgo  a686dfd  (workflow) - values: redis params are in the redis chart  b3a9db1  (workflow) - upgrade: Use a random generated name for upgrade job so it be upgraded multiple times using helm  5b7b98d  (workflow) - releases: remove reference to deis/charts in release notes  233b630  (workflow) - managing-workflow: update logging and monitoring docs to reflect helm v2  6989718  (workflow) - charts: enable hostports by default  2a96baf  (workflow) - upgrading-workflow: fix helm upgrade usage",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.10.0/#documentation",
            "text": "ee93ec4  (controller) - README.md: update badge to use deis-bot's account  b4a86c8  (controller) - README: remove helmc mention  1e90453  (registry-token-refresher) - update key_json value  29492e5  (workflow) - managing-workflow: Add docs about resource quota for application namespace  c9539d0  (workflow) - src/roadmap/releases.md: update to use k/helm  48b875e  (workflow) - gke/boot: Update command to auth to kubernetes host  3c6cb1c  (workflow) - azure-acs: style and typo fixes  42f99cf  (workflow) - managing-workflow: Add LDAP configuration  3773830  (workflow) - releases.md: update to reference workflow-chart-stage job  6fa3f37  (workflow) - system-requirements: add warning for k8s 1.5  057cbe6  (workflow) - azure-acs: more info and spell fixes  5bbc137  (workflow) - installing-workflow: deprecate support for v1.2 clusters  c5d4d46  (workflow) - update versions to v2.9.1 and add changelog  0a8e44e  (workflow) - remove need for echo after helm fetch verify; update sha256  0cc5dfb  (workflow) - releases.md: add patch release notes  f16816e  (workflow) - README.md: add temporary holiday notice  3406eac  (workflow) - applications: fix broken links for SSH keys  70f50a5  (workflow) - add upgrade note for gcs/gcr  5f6dd73  (workflow) - upgrading-workflow: add note about using single quotes around base64 encoded string",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.10.0/#maintenance",
            "text": "22288eb  (controller) - requirements: update requests lib to 2.12.3  f3d71c0  (controller) - requirements: update Django to 1.10.4  cfc08d6  (controller) - dev_requirements: upgrade flake8 to 3.2.1  f3d9c1b  (controller) - requirements: update pytz to 2016.10  6d13723  (controller) - Makefile: remove pyvenv script (#1161)  0566131  (controller) - dev_requirements: update coverage to 4.3.1  b3056f0  (controller) - requirements: update requests to 2.12.4  f478ee9  (controller) - requirements: update idna to 2.2  b6d19d5  (logger) - manifests: remove manifests  50307cc  (logger) - glide: update envconfig  a0e22a7  (router) - nginx: update nginx to 1.11.7  8622f48  (router) - nginx: update nginx to 1.11.8  0fd3251  (workflow-cli) Dockerfile: update go-dev to v0.21.0  62c2e65  (workflow-cli) glide: bump controller-sdk-go to 50747d7  bf269d2  (workflow) azure: add Azure section to sidebar  a4a589e  (workflow) docs: add images for ui steps  bf61fd6  (workflow) docs: flesh out steps for azure acs through UI  ddfe3a0  (workflow) chart: update values file description  1fb84dc  (workflow) controller: disable tls verification on acs",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.9.1/",
            "text": "Workflow v2.9.0 -> v2.9.1\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\ncontroller v2.9.0 -> v2.9.1\n\n\nslugbuilder v2.4.7 -> v2.4.8\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nd723de6\n (controller) - api: account for NoneType when resource is gone (#1178)\n\n\nebeb922\n (slugbuilder) - env_dir: Remove directories from the env dir passed to the compile\n\n\ne058fa2\n (slugbuilder) - ssh: read the ssh key from dir instead of environment\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n673ce82\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v115\n\n\n998b7ce\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v149\n\n\n195c4f2\n (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v19\n\n\n03ab39a\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v116\n\n\n51514b1\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v54",
            "title": "v2.9.1"
        },
        {
            "location": "/changelogs/v2.9.1/#workflow-v290-v291",
            "text": "",
            "title": "Workflow v2.9.0 -&gt; v2.9.1"
        },
        {
            "location": "/changelogs/v2.9.1/#releases",
            "text": "controller v2.9.0 -> v2.9.1  slugbuilder v2.4.7 -> v2.4.8",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.9.1/#fixes",
            "text": "d723de6  (controller) - api: account for NoneType when resource is gone (#1178)  ebeb922  (slugbuilder) - env_dir: Remove directories from the env dir passed to the compile  e058fa2  (slugbuilder) - ssh: read the ssh key from dir instead of environment",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.9.1/#maintenance",
            "text": "673ce82  (slugbuilder) - buildpacks: update heroku-buildpack-php to v115  998b7ce  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v149  195c4f2  (slugbuilder) - buildpacks: update heroku-buildpack-gradle to v19  03ab39a  (slugbuilder) - buildpacks: update heroku-buildpack-php to v116  51514b1  (slugbuilder) - buildpacks: update heroku-buildpack-go to v54",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.9.0/",
            "text": "Workflow v2.8.0 -> v2.9.0\n\u00b6\n\n\nReleases\n\u00b6\n\n\n\n\nbuilder v2.5.4 -> v2.6.1\n\n\ncharts v2.8.0 -> v2.9.0\n\n\ncontroller v2.8.1 -> v2.9.0\n\n\ndockerbuilder v2.5.0 -> v2.5.2\n\n\nfluentd v2.4.3 -> v2.5.0\n\n\nlogger v2.3.2 -> v2.4.0\n\n\nminio v2.3.3 -> v2.3.4\n\n\nmonitor v2.6.2 -> v2.7.0\n\n\nnsq v2.2.4 -> v2.2.5\n\n\npostgres v2.2.5 -> v2.4.4\n\n\nredis v2.2.3 -> v2.2.4\n\n\nregistry v2.2.3 -> v2.3.1\n\n\nregistry-token-refresher v1.0.3 -> v1.0.4\n\n\nrouter v2.6.5 -> v2.7.0\n\n\nslugbuilder v2.4.5 -> v2.4.7\n\n\nslugrunner v2.2.3 -> v2.2.4\n\n\nworkflow-cli v2.8.0 -> v2.9.1\n\n\nworkflow-e2e v2.6.1 -> v2.7.1\n\n\nworkflow-manager v2.4.3 -> v2.4.4\n\n\n\n\nFeatures\n\u00b6\n\n\n\n\nea9e648\n (charts) - workflow-dev: add preStop hook to postgres\n\n\n26c78ee\n (controller) - limits-cmd: accept new limits:set value type\n\n\nbc4f452\n (controller) - label-cmd: support new label cmd\n\n\na01c455\n (fluentd) - deis_out: Add time to record when publishing to nsq\n\n\n7498fe5\n (logger) - model/message_handler: Add time to log message output\n\n\nc105495\n (minio) - travis: add codecov\n\n\n444838e\n (postgres) - charts: add backup to preStop hook\n\n\n19466c5\n (router) - charts: Add support to add annotations during install\n\n\n07747dd\n (workflow-cli) - cmd: allow config:set FOO=\"\"\n\n\n029f39e\n (workflow-cli) - label-cmd: add Label cmd\n\n\n8ab113f\n (workflow-cli) - label-cmd: update controller-sdk-go dependency\n\n\n8955e7e\n (workflow-cli) - cmd/labels.go: sort labels when listing\n\n\n874c9e0\n (workflow-e2e) - label-cmd: add Label cmd\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n67c0a3f\n (charts) - workflow-dev: make PGCTLTIMEOUT tunable\n\n\na026223\n (postgres) - rootfs: remove timeout to pg_ctl start\n\n\nfe9364e\n (postgres) - backup: bump default base backup interval to 4h\n\n\n3af1129\n (registry) - Dockerfile: use upstream registry image\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n4745179\n (builder) - charts: Use the common storage secret\n\n\n5460be8\n (builder) - slugbuilder: Dont expose the conifg as env vars during build\n\n\nc960478\n (builder) - gitreceive: clarify the error message when release failed\n\n\nfcd7edd\n (builder) - charts: Don't use caps in the configmap keys\n\n\n92f7751\n (charts) - workflow-dev/tpl/deis-database-deployment.yaml: rename env var\n\n\n5bc0305\n (charts) - workflow-dev: rewrite to avoid whitespace errors\n\n\n615b834\n (controller) - boot: Ensure DEIS_DEBUG==true for debug output\n\n\nf3daff7\n (controller) - proctype: Change the regex used for validating proctypes\n\n\n828c13b\n (controller) - port: Port can be made optional for non-routable apps\n\n\n4dd1a6c\n (controller) - timeout-debug-msg: unresolved variable (#1148)\n\n\nffeb14a\n (controller) - api: ensure a 409 is raised when cancelling a user with downstream objects (#1147)\n\n\n06211a2\n (controller) - api: transfer all downstream resources along with app (#1146)\n\n\n87ef21d\n (dockerbuilder) - charts: Don't use caps in the configmap keys\n\n\n0b6d8a9\n (dockerbuilder) - move to python3\n\n\nf113aac\n (fluentd) - elastic search: Allow the elastic search plugin to index via namespace\n\n\n4c72d59\n (minio) - codecov: add test-cover target\n\n\n4bb00a1\n (postgres) - charts: Use the common storage secret\n\n\n414c534\n (postgres) - test-swift: remove reliance on local swift client\n\n\nb63909a\n (postgres) - test-minio: change DNS entry to minio\n\n\nb7a2d5b\n (postgres) - setup_envdir: remove AWS_REGION from WALE_S3_ENDPOINT\n\n\nd1744d5\n (postgres) - setup_envdir: do not set AWS_ACCESS_KEY_ID if empty\n\n\n3984d62\n (postgres) - gcs: Use correct env variable for the gcs service account file path\n\n\n7458672\n (postgres) - charts: fix typo and stanza location\n\n\n388c593\n (postgres) - boto: specify the region while getting s3 connection\n\n\n758632d\n (postgres) - setup-envdir: convert AWS_REGION to WALE_S3_ENDPOINT\n\n\nbc77951\n (postgres) - create_bucket: try default s3 region on create error\n\n\n8bf4c52\n (postgres) - create_bucket: propagate us-east-1 to wal-e\n\n\n76bf6d8\n (redis) - charts: Use proper values for offcluster redis\n\n\ne4bbb57\n (registry) - charts: Use the common storage secret\n\n\n6e27041\n (registry) - boto: specify the region while getting s3 connection\n\n\n384bf31\n (slugbuilder) - charts: Don't use caps in the configmap keys\n\n\n5b053c8\n (workflow-cli) - login: User should login by default when he registers\n\n\n5b06f6b\n (workflow-e2e) - tests/labels_test.go: adjust spacing\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nbd1a6f1\n (charts) - README: remove dead Travis CI badge\n\n\nde94939\n (charts) - add note about Helm classic deprecation\n\n\n1f60736\n (workflow-e2e) - README: swap out helmc for helm installation instructions\n\n\n\n\nTests\n\u00b6\n\n\n\n\na5666f1\n (controller) - scheduler: confirm \"network unreachable\" raises KubeHTTPException (#1142)\n\n\n92a0f8e\n (controller) - label-cmd: add new label cmd test\n\n\nd2ab260\n (workflow-cli) - label-cmd: add Label cmd test\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nd08070e\n (builder) - Dockerfile: update deis/base to 0.3.5\n\n\n3fb031a\n (builder) - Makefile: update deis/go-dev to 0.20.0\n\n\na5d9525\n (builder) - glide.yaml: update controller-sdk-go\n\n\n0fbd407\n (charts) - workflow-v2.9.0: releasing workflow-v2.9.0(-e2e)\n\n\n46c72dd\n (controller) - requirements: update Django to 1.10.3\n\n\ne81be7a\n (controller) - requirements: update docker-py to 1.10.6\n\n\ne3d66aa\n (controller) - Dockerfile: update deis/base to 0.3.5\n\n\n6cb0dd1\n (controller) - requirements: update DRF to 3.5.2\n\n\ndb9d44c\n (controller) - requirements: update DRF to 3.5.3\n\n\n5921ff1\n (controller) - requirements: update requests lib to 2.12.1\n\n\n11d0e4b\n (controller) - requirements: update backoff library\n\n\n2ba4e2e\n (dockerbuilder) - Dockerfile: update docker-py to 1.10.6\n\n\n04ad320\n (dockerbuilder) - Dockerfile: update deis/base to 0.3.5\n\n\ne5d8a25\n (fluentd) - Dockerfile: update deis/base to 0.3.5\n\n\na756744\n (logger) - tests: Add more tests to increase coverage\n\n\nbcf8bb4\n (logger) - Dockerfile: update deis/base to 0.3.5\n\n\n65c2d14\n (logger) - Makefile: update deis/go-dev to 0.20.0\n\n\n9d496b4\n (minio) - Dockerfile: update deis/base to 0.3.5\n\n\nd230c2b\n (minio) - Makefile: update deis/go-dev to 0.20.0\n\n\n0369d15\n (monitor) - grafana: Add improved kubernetes health dashboard\n\n\n8c44281\n (monitor) - grafana: Update to 3.1.1\n\n\n7a730d9\n (monitor) - Dockerfiles: update deis/base to 0.3.5\n\n\na35ed28\n (nsq) - Dockerfile: update deis/base to 0.3.5\n\n\n42225fd\n (postgres) - Dockerfile: bump to wal-e v1.0.1\n\n\n99e5254\n (postgres) - Dockerfile: bump PG_VERSION to 9.4.10-1.pgdg16.04+1\n\n\nc8f3d28\n (postgres) - Dockerfile: bump boto to 2.43.0\n\n\n3f80837\n (postgres) - Dockerfile: update deis/base to 0.3.5\n\n\n8c85530\n (postgres) - Makefile: update deis/go-dev to 0.20.0\n\n\n6d8f6b4\n (redis) - Dockerfile: update deis/base to 0.3.5\n\n\n9f3e88f\n (registry) - Dockerfile: update deis/base to v0.3.5\n\n\nedb65d5\n (registry) - Makefile: update docker-go-dev to 0.20.0\n\n\n5ef240b\n (registry-token-refresher) - Dockerfile: update deis/base to v0.3.5\n\n\n1380b20\n (registry-token-refresher) - Makefile: update deis/docker-go-dev to 0.20.0\n\n\nee40fe5\n (router) - Makefile: bump docker-go-dev to 0.20.0\n\n\nfd563fe\n (router) - Dockerfile: update deis/base to v0.3.5\n\n\n99316f6\n (router) - nginx: update nginx to 1.11.6\n\n\n7960638\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v113\n\n\n44f1194\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v52\n\n\nf749395\n (slugbuilder) - Makefile: bump deis/docker-go-dev to 0.20.0\n\n\n8a62e05\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v83\n\n\nbf8cd6d\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v114\n\n\naefdf03\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v85\n\n\n920815c\n (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v148\n\n\n2bed510\n (slugbuilder) - buildpacks: update heroku-buildpack-java to v48\n\n\n3d308c8\n (slugbuilder) - buildpacks: update heroku-buildpack-grails to v21\n\n\nba9a77d\n (slugrunner) - Makefile: update deis/docker-go-dev to 0.20.0\n\n\nf290693\n (workflow-cli) - glide: update controller-sdk-go package\n\n\n5ed663b\n (workflow-e2e) - apps_test: Fix up logger tests for new log format\n\n\n96c5779\n (workflow-e2e) - Dockerfile: bump deis/docker-go-dev to 0.19.0 (#336)\n\n\nf9cbec4\n (workflow-e2e) - Dockerfile: bump kubectl version\n\n\ndf3684f\n (workflow-manager) - Dockerfile: bump deis/base to v0.3.5\n\n\ne267d45\n (workflow-manager) - Makefile: bump deis/docker-go-dev to 0.20.0\n\n\ndea4480\n (workflow-manager) - Makefile: update goswagger/swagger to 0.7.3",
            "title": "v2.9.0"
        },
        {
            "location": "/changelogs/v2.9.0/#workflow-v280-v290",
            "text": "",
            "title": "Workflow v2.8.0 -&gt; v2.9.0"
        },
        {
            "location": "/changelogs/v2.9.0/#releases",
            "text": "builder v2.5.4 -> v2.6.1  charts v2.8.0 -> v2.9.0  controller v2.8.1 -> v2.9.0  dockerbuilder v2.5.0 -> v2.5.2  fluentd v2.4.3 -> v2.5.0  logger v2.3.2 -> v2.4.0  minio v2.3.3 -> v2.3.4  monitor v2.6.2 -> v2.7.0  nsq v2.2.4 -> v2.2.5  postgres v2.2.5 -> v2.4.4  redis v2.2.3 -> v2.2.4  registry v2.2.3 -> v2.3.1  registry-token-refresher v1.0.3 -> v1.0.4  router v2.6.5 -> v2.7.0  slugbuilder v2.4.5 -> v2.4.7  slugrunner v2.2.3 -> v2.2.4  workflow-cli v2.8.0 -> v2.9.1  workflow-e2e v2.6.1 -> v2.7.1  workflow-manager v2.4.3 -> v2.4.4",
            "title": "Releases"
        },
        {
            "location": "/changelogs/v2.9.0/#features",
            "text": "ea9e648  (charts) - workflow-dev: add preStop hook to postgres  26c78ee  (controller) - limits-cmd: accept new limits:set value type  bc4f452  (controller) - label-cmd: support new label cmd  a01c455  (fluentd) - deis_out: Add time to record when publishing to nsq  7498fe5  (logger) - model/message_handler: Add time to log message output  c105495  (minio) - travis: add codecov  444838e  (postgres) - charts: add backup to preStop hook  19466c5  (router) - charts: Add support to add annotations during install  07747dd  (workflow-cli) - cmd: allow config:set FOO=\"\"  029f39e  (workflow-cli) - label-cmd: add Label cmd  8ab113f  (workflow-cli) - label-cmd: update controller-sdk-go dependency  8955e7e  (workflow-cli) - cmd/labels.go: sort labels when listing  874c9e0  (workflow-e2e) - label-cmd: add Label cmd",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.9.0/#refactors",
            "text": "67c0a3f  (charts) - workflow-dev: make PGCTLTIMEOUT tunable  a026223  (postgres) - rootfs: remove timeout to pg_ctl start  fe9364e  (postgres) - backup: bump default base backup interval to 4h  3af1129  (registry) - Dockerfile: use upstream registry image",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.9.0/#fixes",
            "text": "4745179  (builder) - charts: Use the common storage secret  5460be8  (builder) - slugbuilder: Dont expose the conifg as env vars during build  c960478  (builder) - gitreceive: clarify the error message when release failed  fcd7edd  (builder) - charts: Don't use caps in the configmap keys  92f7751  (charts) - workflow-dev/tpl/deis-database-deployment.yaml: rename env var  5bc0305  (charts) - workflow-dev: rewrite to avoid whitespace errors  615b834  (controller) - boot: Ensure DEIS_DEBUG==true for debug output  f3daff7  (controller) - proctype: Change the regex used for validating proctypes  828c13b  (controller) - port: Port can be made optional for non-routable apps  4dd1a6c  (controller) - timeout-debug-msg: unresolved variable (#1148)  ffeb14a  (controller) - api: ensure a 409 is raised when cancelling a user with downstream objects (#1147)  06211a2  (controller) - api: transfer all downstream resources along with app (#1146)  87ef21d  (dockerbuilder) - charts: Don't use caps in the configmap keys  0b6d8a9  (dockerbuilder) - move to python3  f113aac  (fluentd) - elastic search: Allow the elastic search plugin to index via namespace  4c72d59  (minio) - codecov: add test-cover target  4bb00a1  (postgres) - charts: Use the common storage secret  414c534  (postgres) - test-swift: remove reliance on local swift client  b63909a  (postgres) - test-minio: change DNS entry to minio  b7a2d5b  (postgres) - setup_envdir: remove AWS_REGION from WALE_S3_ENDPOINT  d1744d5  (postgres) - setup_envdir: do not set AWS_ACCESS_KEY_ID if empty  3984d62  (postgres) - gcs: Use correct env variable for the gcs service account file path  7458672  (postgres) - charts: fix typo and stanza location  388c593  (postgres) - boto: specify the region while getting s3 connection  758632d  (postgres) - setup-envdir: convert AWS_REGION to WALE_S3_ENDPOINT  bc77951  (postgres) - create_bucket: try default s3 region on create error  8bf4c52  (postgres) - create_bucket: propagate us-east-1 to wal-e  76bf6d8  (redis) - charts: Use proper values for offcluster redis  e4bbb57  (registry) - charts: Use the common storage secret  6e27041  (registry) - boto: specify the region while getting s3 connection  384bf31  (slugbuilder) - charts: Don't use caps in the configmap keys  5b053c8  (workflow-cli) - login: User should login by default when he registers  5b06f6b  (workflow-e2e) - tests/labels_test.go: adjust spacing",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.9.0/#documentation",
            "text": "bd1a6f1  (charts) - README: remove dead Travis CI badge  de94939  (charts) - add note about Helm classic deprecation  1f60736  (workflow-e2e) - README: swap out helmc for helm installation instructions",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.9.0/#tests",
            "text": "a5666f1  (controller) - scheduler: confirm \"network unreachable\" raises KubeHTTPException (#1142)  92a0f8e  (controller) - label-cmd: add new label cmd test  d2ab260  (workflow-cli) - label-cmd: add Label cmd test",
            "title": "Tests"
        },
        {
            "location": "/changelogs/v2.9.0/#maintenance",
            "text": "d08070e  (builder) - Dockerfile: update deis/base to 0.3.5  3fb031a  (builder) - Makefile: update deis/go-dev to 0.20.0  a5d9525  (builder) - glide.yaml: update controller-sdk-go  0fbd407  (charts) - workflow-v2.9.0: releasing workflow-v2.9.0(-e2e)  46c72dd  (controller) - requirements: update Django to 1.10.3  e81be7a  (controller) - requirements: update docker-py to 1.10.6  e3d66aa  (controller) - Dockerfile: update deis/base to 0.3.5  6cb0dd1  (controller) - requirements: update DRF to 3.5.2  db9d44c  (controller) - requirements: update DRF to 3.5.3  5921ff1  (controller) - requirements: update requests lib to 2.12.1  11d0e4b  (controller) - requirements: update backoff library  2ba4e2e  (dockerbuilder) - Dockerfile: update docker-py to 1.10.6  04ad320  (dockerbuilder) - Dockerfile: update deis/base to 0.3.5  e5d8a25  (fluentd) - Dockerfile: update deis/base to 0.3.5  a756744  (logger) - tests: Add more tests to increase coverage  bcf8bb4  (logger) - Dockerfile: update deis/base to 0.3.5  65c2d14  (logger) - Makefile: update deis/go-dev to 0.20.0  9d496b4  (minio) - Dockerfile: update deis/base to 0.3.5  d230c2b  (minio) - Makefile: update deis/go-dev to 0.20.0  0369d15  (monitor) - grafana: Add improved kubernetes health dashboard  8c44281  (monitor) - grafana: Update to 3.1.1  7a730d9  (monitor) - Dockerfiles: update deis/base to 0.3.5  a35ed28  (nsq) - Dockerfile: update deis/base to 0.3.5  42225fd  (postgres) - Dockerfile: bump to wal-e v1.0.1  99e5254  (postgres) - Dockerfile: bump PG_VERSION to 9.4.10-1.pgdg16.04+1  c8f3d28  (postgres) - Dockerfile: bump boto to 2.43.0  3f80837  (postgres) - Dockerfile: update deis/base to 0.3.5  8c85530  (postgres) - Makefile: update deis/go-dev to 0.20.0  6d8f6b4  (redis) - Dockerfile: update deis/base to 0.3.5  9f3e88f  (registry) - Dockerfile: update deis/base to v0.3.5  edb65d5  (registry) - Makefile: update docker-go-dev to 0.20.0  5ef240b  (registry-token-refresher) - Dockerfile: update deis/base to v0.3.5  1380b20  (registry-token-refresher) - Makefile: update deis/docker-go-dev to 0.20.0  ee40fe5  (router) - Makefile: bump docker-go-dev to 0.20.0  fd563fe  (router) - Dockerfile: update deis/base to v0.3.5  99316f6  (router) - nginx: update nginx to 1.11.6  7960638  (slugbuilder) - buildpacks: update heroku-buildpack-php to v113  44f1194  (slugbuilder) - buildpacks: update heroku-buildpack-go to v52  f749395  (slugbuilder) - Makefile: bump deis/docker-go-dev to 0.20.0  8a62e05  (slugbuilder) - buildpacks: update heroku-buildpack-python to v83  bf8cd6d  (slugbuilder) - buildpacks: update heroku-buildpack-php to v114  aefdf03  (slugbuilder) - buildpacks: update heroku-buildpack-python to v85  920815c  (slugbuilder) - buildpacks: update heroku-buildpack-ruby to v148  2bed510  (slugbuilder) - buildpacks: update heroku-buildpack-java to v48  3d308c8  (slugbuilder) - buildpacks: update heroku-buildpack-grails to v21  ba9a77d  (slugrunner) - Makefile: update deis/docker-go-dev to 0.20.0  f290693  (workflow-cli) - glide: update controller-sdk-go package  5ed663b  (workflow-e2e) - apps_test: Fix up logger tests for new log format  96c5779  (workflow-e2e) - Dockerfile: bump deis/docker-go-dev to 0.19.0 (#336)  f9cbec4  (workflow-e2e) - Dockerfile: bump kubectl version  df3684f  (workflow-manager) - Dockerfile: bump deis/base to v0.3.5  e267d45  (workflow-manager) - Makefile: bump deis/docker-go-dev to 0.20.0  dea4480  (workflow-manager) - Makefile: update goswagger/swagger to 0.7.3",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/",
            "text": "Workflow v2.7.0 -> v2.8.0\n\u00b6\n\n\nBuilder v2.5.4 -> v2.5.5\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n4745179\n charts: Use the common storage secret\n\n\n\n\nController v2.7.1 -> v2.8.1\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n0d83024\n deploy: add a global / per-app setting called PROCFILE_REMOVE_PROCS_ON_DEPLOY to allow turning off / on removal of processes on deploys (#1099)\n\n\n1c0350a\n registration: allow admin user registration when the mode is admin_only\n\n\n172d91b\n registration: Add support to change the default regsitration mode\n\n\neb2104a\n release: Don't rollback if there is no build\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\na230913\n readme: fix links to virtualenv docs\n\n\n946de66\n readme: fix links to virtualenv docs\n\n\n40e8be1\n README: docs(README) Refer to postgres setup in Makefile\n\n\nf0fea19\n README: Recommend installing python via pyenv\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n70a6853\n tests: add test for ed25519 SSH keys\n\n\nd2ff507\n tests: add hook tests for ECDSA and ED25519 SSH keys\n\n\n796668a\n requirements: update PyOpenSSL to 16.2.0 (#1114)\n\n\n58d5ae7\n requirements: update docker-py to 1.10.4 (#1115)\n\n\n1dd4093\n requirements: update to DRF 3.5.1 (#1120)\n\n\n\n\nDockerbuilder v2.4.1 -> v2.5.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n1df9223\n deploy.py: add pull option\n\n\n\n\nFluentd v2.4.2 -> v2.4.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nceaa347\n elasticsearch: Add support for dropping fluentd's own logs to stop an infinite death spiral\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nd3523b3\n boot/deis: Fix conditional for disabling deis output\n\n\n\n\nLogging v2.3.1 -> v2.3.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n9bf8520\n charts: Add helm charts for logger\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n2c838b3\n server_test: skip TestServerClose\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\ne36fe0f\n CHANGELOG: remove CHANGELOG\n\n\n\n\nLogger-Redis v2.2.2 -> v2.2.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nbf58552\n charts: Add helm charts for redis\n\n\n\n\nMinio v2.3.1 -> v2.3.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n1f63beb\n charts: Add helm charts for minio\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n7b1db94\n docs: fix link location to deis documentation (#121)\n\n\n\n\nMonitoring v2.6.1 -> v2.6.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nadedd69\n monitor: Allow for off cluster influxdb\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nc177c70\n grafana,telegraf: make curl fail on unsuccessful HTTP codes\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\ne008741\n grafana: Update dashboards for new telegraf\n\n\n\n\nNSQ v2.2.3 -> v2.2.4\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n6d01e7e\n charts: Add helm charts for nsq\n\n\n\n\nPostgres v2.2.5 -> v2.2.6\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n4bb00a1\n charts: Use the common storage secret\n\n\n\n\nRegistry v2.2.2 -> v2.2.4\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n5614cf7\n charts: Add helm charts for registry\n\n\n\n\nFixes\n\u00b6\n\n\n\n\ne4bbb57\n charts: Use the common storage secret\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\na46404c\n CHANGELOG: remove CHANGELOG\n\n\n\n\nRegistry Proxy v1.1.0 -> v1.1.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\na9e1d48\n charts: Add helm charts for registry proxy\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n62ad655\n rootfs: bump version to v1.2.0-dev\n\n\n\n\nRegistry Token Refresher v1.0.2 -> v1.0.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nec09ac2\n charts: Add helm charts for registry token refresher\n\n\n\n\nRouter v2.6.3 -> v2.6.5\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n0241013\n charts: Add helm charts for the router\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n646b1c6\n charts: bump router's livenessProbe initial delay\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nfbdc2c6\n nginx: update nginx to 1.11.5\n\n\n\n\nSlugbuilder v2.4.4 -> v2.4.5\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n844021a\n charts: Add helm charts for slugbuilder\n\n\n\n\nSlugrunner v2.2.2 -> v2.2.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\ne4dc4ae\n charts: Add helm charts for slugrunner\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nd45accb\n CHANGELOG: remove CHANGELOG\n\n\n\n\nWorkflow Documentation v2.7.0 -> v2.8.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n4196ca3\n deploys: Add new configuration options to Controller introduced in controller/#1099 (#551)\n\n\n659116d\n charts: Add helm charts for workflow\n\n\nbef1728\n helm: Add instruction to install workflow using the new helm\n\n\nd793606\n charts: Add support for external influxdb and changing registration mode\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n330945d\n troubleshooting: remove reference to Workflow version\n\n\n34d96c5\n charts: Add workflow manager production urls for the release charts\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n8c48e28\n object-storage: document the required STORAGE_TYPE env var (#547)\n\n\ndf70784\n readme: adding workflow-manager to list of components (#549)\n\n\n43ff1b6\n installing/platform-logging: Update docs for off-cluster installs\n\n\ne1b6b0b\n Documentation changes, suggestions, fixes (#548)\n\n\n8d8b7ec\n readme: add nsq to list of deis components (#550)\n\n\n297307c\n upgrading-workflow: Add instructions to preserve platform SSL credentials (#561)\n\n\nf8841b7\n Update boot.md\n\n\n3c57d88\n Fix minor typo (#572)\n\n\n\n\nWorkflow CLI v2.7.0 -> v2.7.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n950e1ad\n Jenkinsfile: send slack channel to downstream test job\n\n\n\n\nTests\n\u00b6\n\n\n\n\n6c9c935\n auth: add test for whoami --all (#261)\n\n\n\n\nWorkflow E2E Tests v2.6.0 -> v2.6.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nbf3a560\n charts: Add helm charts for workflow-e2e\n\n\n\n\nWorkflow Manager v2.4.2 -> v2.4.3\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n80af9c3\n charts: Add helm charts for workflow-manager\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n43f1251\n CHANGELOG: remove CHANGELOG",
            "title": "v2.8.0"
        },
        {
            "location": "/changelogs/v2.8.0/#workflow-v270-v280",
            "text": "",
            "title": "Workflow v2.7.0 -&gt; v2.8.0"
        },
        {
            "location": "/changelogs/v2.8.0/#builder-v254-v255",
            "text": "",
            "title": "Builder v2.5.4 -&gt; v2.5.5"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes",
            "text": "4745179  charts: Use the common storage secret",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#controller-v271-v281",
            "text": "",
            "title": "Controller v2.7.1 -&gt; v2.8.1"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_1",
            "text": "0d83024  deploy: add a global / per-app setting called PROCFILE_REMOVE_PROCS_ON_DEPLOY to allow turning off / on removal of processes on deploys (#1099)  1c0350a  registration: allow admin user registration when the mode is admin_only  172d91b  registration: Add support to change the default regsitration mode  eb2104a  release: Don't rollback if there is no build",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#documentation",
            "text": "a230913  readme: fix links to virtualenv docs  946de66  readme: fix links to virtualenv docs  40e8be1  README: docs(README) Refer to postgres setup in Makefile  f0fea19  README: Recommend installing python via pyenv",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance",
            "text": "70a6853  tests: add test for ed25519 SSH keys  d2ff507  tests: add hook tests for ECDSA and ED25519 SSH keys  796668a  requirements: update PyOpenSSL to 16.2.0 (#1114)  58d5ae7  requirements: update docker-py to 1.10.4 (#1115)  1dd4093  requirements: update to DRF 3.5.1 (#1120)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#dockerbuilder-v241-v250",
            "text": "",
            "title": "Dockerbuilder v2.4.1 -&gt; v2.5.0"
        },
        {
            "location": "/changelogs/v2.8.0/#features",
            "text": "1df9223  deploy.py: add pull option",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fluentd-v242-v243",
            "text": "",
            "title": "Fluentd v2.4.2 -&gt; v2.4.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_1",
            "text": "ceaa347  elasticsearch: Add support for dropping fluentd's own logs to stop an infinite death spiral",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_2",
            "text": "d3523b3  boot/deis: Fix conditional for disabling deis output",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#logging-v231-v232",
            "text": "",
            "title": "Logging v2.3.1 -&gt; v2.3.2"
        },
        {
            "location": "/changelogs/v2.8.0/#features_2",
            "text": "9bf8520  charts: Add helm charts for logger",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_3",
            "text": "2c838b3  server_test: skip TestServerClose",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_1",
            "text": "e36fe0f  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#logger-redis-v222-v223",
            "text": "",
            "title": "Logger-Redis v2.2.2 -&gt; v2.2.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_3",
            "text": "bf58552  charts: Add helm charts for redis",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#minio-v231-v233",
            "text": "",
            "title": "Minio v2.3.1 -&gt; v2.3.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_4",
            "text": "1f63beb  charts: Add helm charts for minio",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_4",
            "text": "7b1db94  docs: fix link location to deis documentation (#121)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#monitoring-v261-v262",
            "text": "",
            "title": "Monitoring v2.6.1 -&gt; v2.6.2"
        },
        {
            "location": "/changelogs/v2.8.0/#features_5",
            "text": "adedd69  monitor: Allow for off cluster influxdb",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_5",
            "text": "c177c70  grafana,telegraf: make curl fail on unsuccessful HTTP codes",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_2",
            "text": "e008741  grafana: Update dashboards for new telegraf",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#nsq-v223-v224",
            "text": "",
            "title": "NSQ v2.2.3 -&gt; v2.2.4"
        },
        {
            "location": "/changelogs/v2.8.0/#features_6",
            "text": "6d01e7e  charts: Add helm charts for nsq",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#postgres-v225-v226",
            "text": "",
            "title": "Postgres v2.2.5 -&gt; v2.2.6"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_6",
            "text": "4bb00a1  charts: Use the common storage secret",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#registry-v222-v224",
            "text": "",
            "title": "Registry v2.2.2 -&gt; v2.2.4"
        },
        {
            "location": "/changelogs/v2.8.0/#features_7",
            "text": "5614cf7  charts: Add helm charts for registry",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_7",
            "text": "e4bbb57  charts: Use the common storage secret",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_3",
            "text": "a46404c  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#registry-proxy-v110-v111",
            "text": "",
            "title": "Registry Proxy v1.1.0 -&gt; v1.1.1"
        },
        {
            "location": "/changelogs/v2.8.0/#features_8",
            "text": "a9e1d48  charts: Add helm charts for registry proxy",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_4",
            "text": "62ad655  rootfs: bump version to v1.2.0-dev",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#registry-token-refresher-v102-v103",
            "text": "",
            "title": "Registry Token Refresher v1.0.2 -&gt; v1.0.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_9",
            "text": "ec09ac2  charts: Add helm charts for registry token refresher",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#router-v263-v265",
            "text": "",
            "title": "Router v2.6.3 -&gt; v2.6.5"
        },
        {
            "location": "/changelogs/v2.8.0/#features_10",
            "text": "0241013  charts: Add helm charts for the router",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_8",
            "text": "646b1c6  charts: bump router's livenessProbe initial delay",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_5",
            "text": "fbdc2c6  nginx: update nginx to 1.11.5",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#slugbuilder-v244-v245",
            "text": "",
            "title": "Slugbuilder v2.4.4 -&gt; v2.4.5"
        },
        {
            "location": "/changelogs/v2.8.0/#features_11",
            "text": "844021a  charts: Add helm charts for slugbuilder",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#slugrunner-v222-v223",
            "text": "",
            "title": "Slugrunner v2.2.2 -&gt; v2.2.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_12",
            "text": "e4dc4ae  charts: Add helm charts for slugrunner",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_6",
            "text": "d45accb  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.8.0/#workflow-documentation-v270-v280",
            "text": "",
            "title": "Workflow Documentation v2.7.0 -&gt; v2.8.0"
        },
        {
            "location": "/changelogs/v2.8.0/#features_13",
            "text": "4196ca3  deploys: Add new configuration options to Controller introduced in controller/#1099 (#551)  659116d  charts: Add helm charts for workflow  bef1728  helm: Add instruction to install workflow using the new helm  d793606  charts: Add support for external influxdb and changing registration mode",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#fixes_9",
            "text": "330945d  troubleshooting: remove reference to Workflow version  34d96c5  charts: Add workflow manager production urls for the release charts",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.8.0/#documentation_1",
            "text": "8c48e28  object-storage: document the required STORAGE_TYPE env var (#547)  df70784  readme: adding workflow-manager to list of components (#549)  43ff1b6  installing/platform-logging: Update docs for off-cluster installs  e1b6b0b  Documentation changes, suggestions, fixes (#548)  8d8b7ec  readme: add nsq to list of deis components (#550)  297307c  upgrading-workflow: Add instructions to preserve platform SSL credentials (#561)  f8841b7  Update boot.md  3c57d88  Fix minor typo (#572)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.8.0/#workflow-cli-v270-v271",
            "text": "",
            "title": "Workflow CLI v2.7.0 -&gt; v2.7.1"
        },
        {
            "location": "/changelogs/v2.8.0/#features_14",
            "text": "950e1ad  Jenkinsfile: send slack channel to downstream test job",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#tests",
            "text": "6c9c935  auth: add test for whoami --all (#261)",
            "title": "Tests"
        },
        {
            "location": "/changelogs/v2.8.0/#workflow-e2e-tests-v260-v261",
            "text": "",
            "title": "Workflow E2E Tests v2.6.0 -&gt; v2.6.1"
        },
        {
            "location": "/changelogs/v2.8.0/#features_15",
            "text": "bf3a560  charts: Add helm charts for workflow-e2e",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#workflow-manager-v242-v243",
            "text": "",
            "title": "Workflow Manager v2.4.2 -&gt; v2.4.3"
        },
        {
            "location": "/changelogs/v2.8.0/#features_16",
            "text": "80af9c3  charts: Add helm charts for workflow-manager",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.8.0/#maintenance_7",
            "text": "43f1251  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/",
            "text": "Workflow v2.6.0 -> v2.7.0\n\u00b6\n\n\nBuilder v2.5.1 -> v2.5.2\n\u00b6\n\n\nRefactors\n\u00b6\n\n\n\n\n3a6c891\n controller: use the env config instead of directly getting from environment\n\n\n\n\nFixes\n\u00b6\n\n\n\n\ndd4f1b0\n travis: remove vendor dir from cache\n\n\n4a4044e\n sshd: Typo in the timeout message.\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n1196719\n CHANGELOG: remove changelog\n\n\n\n\nController v2.6.0 -> v2.7.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nd63fe7f\n errors: give more context on what model is involved when 404 Not Found is involved (#1096)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n9baa3d3\n registry: remove simpleflock and depend on Docker 1.9 minimum (#1090)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n12b5bfd\n key: ssh key name has to be unique now - migration included that appends a number (#1098)\n\n\n8f943d9\n version: Use a different version number for each release\n\n\n451622b\n app: an app can now be removed from the database even if the namespace for it was already deleted (#1101)\n\n\n9f6cb94\n urls: terminate url regex with $ so that there is no cascading attempts at URLs (#1103)\n\n\naa6e0f3\n secret: create objectstore  secret before calling scheduler deploy\n\n\n53e118e\n procfile: validate the proctypes during build itself\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n67c5471\n scheduler: move lower level deploy helpers into their respective resources (#1092)\n\n\n7ba556b\n CHANGELOG: remove changelog (#1091)\n\n\nf724afe\n requirements: update Django to 1.10.2\n\n\n9582496\n requirements: update pytz to 2016.7 (#1102)\n\n\n\n\nDockerbuilder v2.3.3 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\ne8763ba\n registry: Allow FROM to refer to the off-cluster docker registry.\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\naa183bf\n Dockerfile: remove musl and musl-dev\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nb980335\n CHANGELOG: remove changelog\n\n\n\n\nMinio v2.3.0 -> v2.3.1\n\u00b6\n\n\nRefactors\n\u00b6\n\n\n\n\n56e25fb\n boot: remove unused template and POD_IP references\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nb233465\n CHANGELOG: remove CHANGELOG\n\n\n\n\nMonitoring v2.5.1 -> v2.6.0\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n08e8bae\n CHANGELOG: remove CHANGELOG\n\n\n31f9a9e\n telegraf: Use the new kubernetes input plugin\n\n\n\n\nNSQ v2.2.2 -> v2.2.3\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\nf675e23\n Removing unneeded node address information.\n\n\n\n\nRouter v2.6.2 -> v2.6.3\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\ne77deec\n nginx: allow setting ErrorLogLevel to 'debug'\n\n\n85d4a96\n docs: correct annotation key for maxWorkerConnections\n\n\n5efc248\n nginx: known model shouldn't be refreshed if Nginx reload failed.\n\n\n7c1f99d\n model: check if CertMapping exists\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n60bf8c1\n readme: remove reference to \nmake dev-registry\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n2fc5d77\n CHANGELOG: remove CHANGELOG\n\n\n\n\nSlugbuilder v2.4.3 -> v2.4.4\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n6186982\n CHANGELOG: remove CHANGELOG\n\n\n4ef1326\n buildpacks: update heroku-buildpack-go to v50\n\n\n\n\nWorkflow Charts v2.6.0 -> v2.7.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n00ec320\n scripts: automate some of workflow release\n\n\n37de884\n telegraf: Use kubernetes telegraf plugin\n\n\n\n\nFixes\n\u00b6\n\n\n\n\ne22104e\n router,e2e: normalize strings for automation\n\n\n9225708\n charts: make grafana creds configurable and remove unused minio POD_IP env\n\n\n16784ef\n workflow-dev: bump router's livenessProbe initial delay\n\n\n1cac30b\n helm-keep: Add helm-keep annotations to all the services\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n091edb4\n CHANGELOG: remove CHANGELOG\n\n\n9581bd6\n workflow-v2.6.0: releasing workflow-v2.6.0(-e2e)\n\n\n19e5e35\n workflow-v2.7.0: releasing workflow-v2.7.0(-e2e)\n\n\n\n\nWorkflow CLI v2.6.1 -> v2.7.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n0391c6c\n keys: add an optional name support for keys:add (#257)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n1622cf6\n deis.go: do not add top level command to cmdArgs\n\n\n4aa36eb\n healthcheck: show all the healthchecks set when no proctype is specified\n\n\n785a6b6\n ssh: support ed25519 SSH keys\n\n\n9c73132\n ssh: please the gofmt gods\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\ndcdddaf\n readme: use just \nmake\n for building binary on unix / darwin\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n427f8ee\n CHANGELOG: remove CHANGELOG\n\n\n\n\nWorkflow Documentation v2.6.0 -> v2.7.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\ne5bc58d\n reference-guide: add Deis v1 Migration Guide\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n53f5134\n docs: correct docs for limits:set --cpu flag (#537)\n\n\n3ad28eb\n docs: update gke screenshot and text. (#540)\n\n\n468f277\n docs: minor spelling corrections (#543)\n\n\n1ce3489\n docs: minor spelling corrections (#541)\n\n\n7259932\n docs: minor spelling correction (#542)\n\n\nc362ecc\n docs: minor spelling corrections (#544)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n5553649\n src/roadmap/releases.md: add registry-token-refresher to deisrel .json\n\n\n5d87e32\n relases: simplify Workflow release step 4\n\n\n3139333\n installing-workflow: add followup link to register a user\n\n\n\n\nWorkflow E2E Tests v2.5.3 -> v2.6.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nb0f0e69\n tests(config): add tests for config push/pull with LF and CRLF line endings. (#328)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n0722699\n tests/git_push_test.go: bump deis run timeout\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n723cbae\n README: update e2e chart name/installation\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n0183165\n CHANGELOG: remove CHANGELOG (#327)",
            "title": "v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#workflow-v260-v270",
            "text": "",
            "title": "Workflow v2.6.0 -&gt; v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#builder-v251-v252",
            "text": "",
            "title": "Builder v2.5.1 -&gt; v2.5.2"
        },
        {
            "location": "/changelogs/v2.7.0/#refactors",
            "text": "3a6c891  controller: use the env config instead of directly getting from environment",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes",
            "text": "dd4f1b0  travis: remove vendor dir from cache  4a4044e  sshd: Typo in the timeout message.",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance",
            "text": "1196719  CHANGELOG: remove changelog",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#controller-v260-v270",
            "text": "",
            "title": "Controller v2.6.0 -&gt; v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features",
            "text": "d63fe7f  errors: give more context on what model is involved when 404 Not Found is involved (#1096)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#refactors_1",
            "text": "9baa3d3  registry: remove simpleflock and depend on Docker 1.9 minimum (#1090)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_1",
            "text": "12b5bfd  key: ssh key name has to be unique now - migration included that appends a number (#1098)  8f943d9  version: Use a different version number for each release  451622b  app: an app can now be removed from the database even if the namespace for it was already deleted (#1101)  9f6cb94  urls: terminate url regex with $ so that there is no cascading attempts at URLs (#1103)  aa6e0f3  secret: create objectstore  secret before calling scheduler deploy  53e118e  procfile: validate the proctypes during build itself",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_1",
            "text": "67c5471  scheduler: move lower level deploy helpers into their respective resources (#1092)  7ba556b  CHANGELOG: remove changelog (#1091)  f724afe  requirements: update Django to 1.10.2  9582496  requirements: update pytz to 2016.7 (#1102)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#dockerbuilder-v233-v240",
            "text": "",
            "title": "Dockerbuilder v2.3.3 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features_1",
            "text": "e8763ba  registry: Allow FROM to refer to the off-cluster docker registry.",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#refactors_2",
            "text": "aa183bf  Dockerfile: remove musl and musl-dev",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_2",
            "text": "b980335  CHANGELOG: remove changelog",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#minio-v230-v231",
            "text": "",
            "title": "Minio v2.3.0 -&gt; v2.3.1"
        },
        {
            "location": "/changelogs/v2.7.0/#refactors_3",
            "text": "56e25fb  boot: remove unused template and POD_IP references",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_3",
            "text": "b233465  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#monitoring-v251-v260",
            "text": "",
            "title": "Monitoring v2.5.1 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_4",
            "text": "08e8bae  CHANGELOG: remove CHANGELOG  31f9a9e  telegraf: Use the new kubernetes input plugin",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#nsq-v222-v223",
            "text": "",
            "title": "NSQ v2.2.2 -&gt; v2.2.3"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_2",
            "text": "f675e23  Removing unneeded node address information.",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#router-v262-v263",
            "text": "",
            "title": "Router v2.6.2 -&gt; v2.6.3"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_3",
            "text": "e77deec  nginx: allow setting ErrorLogLevel to 'debug'  85d4a96  docs: correct annotation key for maxWorkerConnections  5efc248  nginx: known model shouldn't be refreshed if Nginx reload failed.  7c1f99d  model: check if CertMapping exists",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#documentation",
            "text": "60bf8c1  readme: remove reference to  make dev-registry",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_5",
            "text": "2fc5d77  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#slugbuilder-v243-v244",
            "text": "",
            "title": "Slugbuilder v2.4.3 -&gt; v2.4.4"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_6",
            "text": "6186982  CHANGELOG: remove CHANGELOG  4ef1326  buildpacks: update heroku-buildpack-go to v50",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#workflow-charts-v260-v270",
            "text": "",
            "title": "Workflow Charts v2.6.0 -&gt; v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features_2",
            "text": "00ec320  scripts: automate some of workflow release  37de884  telegraf: Use kubernetes telegraf plugin",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_4",
            "text": "e22104e  router,e2e: normalize strings for automation  9225708  charts: make grafana creds configurable and remove unused minio POD_IP env  16784ef  workflow-dev: bump router's livenessProbe initial delay  1cac30b  helm-keep: Add helm-keep annotations to all the services",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_7",
            "text": "091edb4  CHANGELOG: remove CHANGELOG  9581bd6  workflow-v2.6.0: releasing workflow-v2.6.0(-e2e)  19e5e35  workflow-v2.7.0: releasing workflow-v2.7.0(-e2e)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#workflow-cli-v261-v270",
            "text": "",
            "title": "Workflow CLI v2.6.1 -&gt; v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features_3",
            "text": "0391c6c  keys: add an optional name support for keys:add (#257)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_5",
            "text": "1622cf6  deis.go: do not add top level command to cmdArgs  4aa36eb  healthcheck: show all the healthchecks set when no proctype is specified  785a6b6  ssh: support ed25519 SSH keys  9c73132  ssh: please the gofmt gods",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#documentation_1",
            "text": "dcdddaf  readme: use just  make  for building binary on unix / darwin",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_8",
            "text": "427f8ee  CHANGELOG: remove CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.7.0/#workflow-documentation-v260-v270",
            "text": "",
            "title": "Workflow Documentation v2.6.0 -&gt; v2.7.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features_4",
            "text": "e5bc58d  reference-guide: add Deis v1 Migration Guide",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_6",
            "text": "53f5134  docs: correct docs for limits:set --cpu flag (#537)  3ad28eb  docs: update gke screenshot and text. (#540)  468f277  docs: minor spelling corrections (#543)  1ce3489  docs: minor spelling corrections (#541)  7259932  docs: minor spelling correction (#542)  c362ecc  docs: minor spelling corrections (#544)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#documentation_2",
            "text": "5553649  src/roadmap/releases.md: add registry-token-refresher to deisrel .json  5d87e32  relases: simplify Workflow release step 4  3139333  installing-workflow: add followup link to register a user",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.7.0/#workflow-e2e-tests-v253-v260",
            "text": "",
            "title": "Workflow E2E Tests v2.5.3 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.7.0/#features_5",
            "text": "b0f0e69  tests(config): add tests for config push/pull with LF and CRLF line endings. (#328)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.7.0/#fixes_7",
            "text": "0722699  tests/git_push_test.go: bump deis run timeout",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.7.0/#documentation_3",
            "text": "723cbae  README: update e2e chart name/installation",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.7.0/#maintenance_9",
            "text": "0183165  CHANGELOG: remove CHANGELOG (#327)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/",
            "text": "Workflow v2.5.0 -> v2.6.0\n\u00b6\n\n\nBuilder v2.5.0 -> v2.5.1\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n392ef7d\n Makefile: update deploy target to use deployments (#424)\n\n\n933c124\n conf: strip newlines from builder key (#425)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nb1a0ef6\n Dockerfile: update base image to v0.3.4\n\n\nac829c0\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#434)\n\n\n\n\nController v2.5.2 -> v2.6.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nf5d1454\n api: inject release metadata into application (#1080)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n13de6e6\n Dockerfile: ditch the pip cache for a slightly smaller image (#1051)\n\n\n3e1f9d6\n scheduler: add HTTP functions in KubeHTTPClient (#1019)\n\n\n8d287b9\n scheduler: move image pull policy settings from scheduler to App model and remove SLUG_RUNNER_IMAGE_PULL_POLICY (#1053)\n\n\n02718a3\n app: centralise all application configuration handling in App model to be used by run, deploy and scale (#1061)\n\n\n22f96eb\n scheduler: add more Pod tests in scheduler and add create() to Pod resource (#1079)\n\n\n13c1711\n Dockerfile: use base 0.3.2, smaller packages and better cleanup (#1088)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n4f5f944\n views: make sure domain is set it in cert attach operation (#1046)\n\n\n29d51d9\n scheduler: show more information when there is a HTTP error in Kubernetes (#1041)\n\n\n3d3676b\n release: call proper RC scale instead of a missing (old) method (#1055)\n\n\n60c6a5f\n procfile: route the traffic to web proctype always if its present in procfile\n\n\nd7e626c\n whitelist: remove the whitelist from annoations if its empty\n\n\nb8aa206\n api: check if release.build is NoneType (#1078)\n\n\nad182b2\n api: cast DEPLOY_BATCHES and DEPLOY_TIMEOUT to int (#1076)\n\n\n7aaee55\n Makefile: remove double usage of --noinput (#1083)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n667ba1f\n requirements: update django-guardian to 1.4.6 (#1050)\n\n\n640d220\n requirements: chore(requirements) Update to docker-py 1.10.2 (#1056)\n\n\n8559fb0\n tests: port app logs test from deis/deis#5005 (#1064)\n\n\n06c7695\n scheduler: move log lines to before a raise so DEBUG info is actually caught (#1067)\n\n\naaccdf7\n tests: improve test coverage for HPA (#1081)\n\n\n4d7591c\n requirements: update docker-py to 1.10.3 (#1086)\n\n\ne9a9e7a\n tests: improve Pod scheduler tests (#1085)\n\n\n260b1e4\n requirements: update DRF to 3.4.7 (#1087)\n\n\n\n\nDockerbuilder v2.3.2 -> v2.3.3\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n1bd4727\n requirements: chore(requirements) Update to docker-py 1.10.2\n\n\n28c31d4\n requirements: update docker-py to 1.10.3 (#94)\n\n\nf013504\n Dockerfile: update base image to v0.3.4\n\n\n070d5cb\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#96)\n\n\n\n\nFluentd v2.2.0 -> v2.4.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n900a31b\n Dockerfile: upgrade fluentd and pin versions\n\n\n1529614\n config: Allows for building custom plugins\n\n\nc9a3d8f\n Allow configuring custom plugins/stores/filters for fluentd\n\n\n\n\nFixes\n\u00b6\n\n\n\n\needa904\n conf: Remove time_format from sources\n\n\nd5b8580\n sources: allow users to specify what logs they want to capture\n\n\n56f4d67\n boot: fix missing container symlinks\n\n\needa904\n conf: Remove time_format from sources\n\n\nd5b8580\n sources: allow users to specify what logs they want to capture\n\n\n56f4d67\n boot: fix missing container symlinks\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nbf242e2\n deis: Allow users to disable the deis output plugin\n\n\n30911be\n Dockerfile: update base image to v0.3.4\n\n\n36f90ae\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#54)\n\n\nbf242e2\n deis: Allow users to disable the deis output plugin\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n49d8d29\n Document custom plugin environment variables.\n\n\n\n\nLogger v2.3.0 -> v2.3.1\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n9bd19a3\n weblog: fix up CPU issues\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n9eb022d\n README: docs(README) update docs\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n6a865ee\n Dockerfile: update base image to v0.3.4\n\n\n\n\nMinio v2.2.1 -> v2.3.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n430d6d2\n pkg: update the pkg to latest and get ip using downward api\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nac80262\n Dockerfile: update base image to v0.3.4\n\n\n\n\nMonitoring v2.4.0 -> v2.5.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nab1d467\n influxdb: upgrade influxdb and telegraph to 1.0\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n1a10082\n telegraf,grafana,influx: Update to 0.3.4 base\n\n\nd596b08\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#144)\n\n\n3aea2a7\n config: Remove calls to quote\n\n\n\n\nNSQ v2.2.0 -> v2.2.2\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n8e1e208\n Adding set -eo pipefail to start up script\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nef2bb5d\n Dockerfile: update base image to v0.3.4\n\n\n\n\nRedis v2.2.0 -> v2.2.2\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n3659efb\n Dockerfile: missing && in Dockerfile makes apt not so happy (#5)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n7e62f08\n Makefile: remove obsolete \"docker tag -f\" flag\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n545c46b\n Dockerfile: update base image to v0.3.4\n\n\n21c376d\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#4)\n\n\n\n\nRegistry v2.2.1 -> v2.2.2\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\nc9150b9\n Dockerfile: update base image to v0.3.4\n\n\n32a7400\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#67)\n\n\n\n\nRegistry Proxy v1.0.0 -> v1.1.0\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n5f69fe0\n nginx: set worker_processes to auto\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n89687b0\n rootfs: bump version to v1.1.0-dev\n\n\n70a8a8b\n rootfs: bump version to v1.1.0\n\n\n\n\nRouter v2.5.0 -> v2.6.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n151916e\n nginx: Allow sending nginx X-Request-Id and X-Correlation-Id headers.\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\nb33c18c\n glide: use the official kubernetes client (#259)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\na729799\n nginx: Enable builder PROXY PROTOCOL support\n\n\n0d9b119\n ngnix: handle X-Forwarded-Port and X-Forwarded-Proto properly\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nb20eba0\n README: Correct errant references to RC in annotations table\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n4afbcc6\n Dockerfile: update base image to v0.3.4\n\n\n5a6b004\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#262)\n\n\ne38a69b\n nginx: update nginx to 1.11.4 (#252)\n\n\n246bdc5\n Dockerfile: bump deis/base to v0.3.2\n\n\n\n\nSlugbuilder v2.4.1 -> v2.4.3\n\u00b6\n\n\nRefactors\n\u00b6\n\n\n\n\n24e0ce9\n Dockerfile: simplify chown commands\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n37c5109\n build.sh: switch to build_root before running hooks\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n2a7769d\n Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#113)\n\n\n0ff387f\n buildpacks: update heroku-buildpack-go to v48\n\n\n4eada8d\n buildpacks: update heroku-buildpack-php to v110\n\n\nfcb645b\n buildpacks: update heroku-buildpack-python to v82\n\n\n69abae5\n buildpacks: update heroku-buildpack-gradle to v18\n\n\nd6445a6\n buildpacks: update heroku-buildpack-java to v46\n\n\n30ce52f\n buildpacks: update heroku-buildpack-go to v49\n\n\n7e4e9cc\n buildpacks: update heroku-buildpack-php to v112\n\n\n\n\nSlugbuilder v2.2.1 -> v2.2.2\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n098d05a\n Dockerfile: consolidate a few chmod and chown into one layer (#54)\n\n\n\n\nWorkflow CLI v2.5.1 -> v2.6.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nc760eb1\n cmd: only print version mismatch warning once (#223)\n\n\na330059\n git: clean up git package and write tests (#227)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n85f2df2\n Dockerfile: remove deprecated --strip-vcs flag\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n6b13756\n CI: explicitly set codecov git SHA (#221)\n\n\n2bb4cde\n Jenkinsfile: un-parallelize lint and test tasks\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nc04610d\n README.md: update bucket location\n\n\n8745328\n readme: adding codecov badge (#249)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n1041d9e\n Dockerfile: update go-dev and go toolchain\n\n\n\n\nWorkflow Documentation v2.5.0 -> v2.6.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\na3a25c0\n scripts: build every tagged version of workflow docs\n\n\n9ae8f9c\n apps: add information about IMAGE_PULL_POLICY globally and per app (#504)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n495e1a1\n configuring-registry: clarify ECR registry variables\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nfb5d378\n releases: deisrel no longer requires $OLD_SHA and $OLD_RELEASE\n\n\ncb23b43\n components: link to architecture, not itself (#499)\n\n\nc95c24b\n configuring-registry: add missing IAM link\n\n\n6509c41\n docs: add documentation on resetting a password using the cli. (#507)\n\n\n7b88723\n docs: change the references from RC's to deploments\n\n\n54df10a\n deisrel: update the deisrel command to generate changelog\n\n\n0e56d8a\n gutenbuild: do not build any pre-release tags\n\n\n80f0551\n gutenbuild: ensure we are on master before building\n\n\n1e87307\n gutenbuild: prepend grep string with --\n\n\n26d8a40\n gutenbuild: use dev_build_dest for second build\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n8b542a1\n upgrade: reminder to upgrade deis client\n\n\n0ef84bc\n slugbuilder-cache: add CACHE_PATH variable\n\n\na349d20\n slugbuilder-cache: add usage documentation\n\n\n1f09a8c\n slugbuilder-cache: add application tuning variable\n\n\nec42f7b\n src/roadmap/releases.md: remove publish component release step\n\n\na971a25\n CONTRIBUTING: update contributing documentation (#498)\n\n\nd0a43b5\n tuning: update storage default for logger\n\n\n5720dce\n src/managing-workflow/upgrading-workflow.md: document nodes >= 2 for upgrade\n\n\n5705489\n src/roadmap/releases.md: link to pipeline flow diagrams\n\n\n0da5297\n managing-workflow: Document PROXY protocol configuration\n\n\nb5f2d99\n releases: add missing details and reword CI flow reference\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n7faaaa7\n release: update roadmap for 2.5\n\n\ne8c5d3f\n src/roadmap/releases.md: update jenkins-jobs var name\n\n\n2655c90\n scripts: remove old release tools and CHANGELOG\n\n\n\n\nWorkflow E2E Tests v2.5.2 -> v2.5.3\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n4f00c8b\n tests: re-enable tls tests (#326)\n\n\n\n\nWorklfow Manager v2.4.1 -> v2.4.2\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n350f7c3\n Dockerfile: update base image to v0.3.4",
            "title": "v2.6.0"
        },
        {
            "location": "/changelogs/v2.6.0/#workflow-v250-v260",
            "text": "",
            "title": "Workflow v2.5.0 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.6.0/#builder-v250-v251",
            "text": "",
            "title": "Builder v2.5.0 -&gt; v2.5.1"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes",
            "text": "392ef7d  Makefile: update deploy target to use deployments (#424)  933c124  conf: strip newlines from builder key (#425)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance",
            "text": "b1a0ef6  Dockerfile: update base image to v0.3.4  ac829c0  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#434)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#controller-v252-v260",
            "text": "",
            "title": "Controller v2.5.2 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.6.0/#features",
            "text": "f5d1454  api: inject release metadata into application (#1080)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors",
            "text": "13de6e6  Dockerfile: ditch the pip cache for a slightly smaller image (#1051)  3e1f9d6  scheduler: add HTTP functions in KubeHTTPClient (#1019)  8d287b9  scheduler: move image pull policy settings from scheduler to App model and remove SLUG_RUNNER_IMAGE_PULL_POLICY (#1053)  02718a3  app: centralise all application configuration handling in App model to be used by run, deploy and scale (#1061)  22f96eb  scheduler: add more Pod tests in scheduler and add create() to Pod resource (#1079)  13c1711  Dockerfile: use base 0.3.2, smaller packages and better cleanup (#1088)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_1",
            "text": "4f5f944  views: make sure domain is set it in cert attach operation (#1046)  29d51d9  scheduler: show more information when there is a HTTP error in Kubernetes (#1041)  3d3676b  release: call proper RC scale instead of a missing (old) method (#1055)  60c6a5f  procfile: route the traffic to web proctype always if its present in procfile  d7e626c  whitelist: remove the whitelist from annoations if its empty  b8aa206  api: check if release.build is NoneType (#1078)  ad182b2  api: cast DEPLOY_BATCHES and DEPLOY_TIMEOUT to int (#1076)  7aaee55  Makefile: remove double usage of --noinput (#1083)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_1",
            "text": "667ba1f  requirements: update django-guardian to 1.4.6 (#1050)  640d220  requirements: chore(requirements) Update to docker-py 1.10.2 (#1056)  8559fb0  tests: port app logs test from deis/deis#5005 (#1064)  06c7695  scheduler: move log lines to before a raise so DEBUG info is actually caught (#1067)  aaccdf7  tests: improve test coverage for HPA (#1081)  4d7591c  requirements: update docker-py to 1.10.3 (#1086)  e9a9e7a  tests: improve Pod scheduler tests (#1085)  260b1e4  requirements: update DRF to 3.4.7 (#1087)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#dockerbuilder-v232-v233",
            "text": "",
            "title": "Dockerbuilder v2.3.2 -&gt; v2.3.3"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_2",
            "text": "1bd4727  requirements: chore(requirements) Update to docker-py 1.10.2  28c31d4  requirements: update docker-py to 1.10.3 (#94)  f013504  Dockerfile: update base image to v0.3.4  070d5cb  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#96)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#fluentd-v220-v241",
            "text": "",
            "title": "Fluentd v2.2.0 -&gt; v2.4.1"
        },
        {
            "location": "/changelogs/v2.6.0/#features_1",
            "text": "900a31b  Dockerfile: upgrade fluentd and pin versions  1529614  config: Allows for building custom plugins  c9a3d8f  Allow configuring custom plugins/stores/filters for fluentd",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_2",
            "text": "eeda904  conf: Remove time_format from sources  d5b8580  sources: allow users to specify what logs they want to capture  56f4d67  boot: fix missing container symlinks  eeda904  conf: Remove time_format from sources  d5b8580  sources: allow users to specify what logs they want to capture  56f4d67  boot: fix missing container symlinks",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_3",
            "text": "bf242e2  deis: Allow users to disable the deis output plugin  30911be  Dockerfile: update base image to v0.3.4  36f90ae  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#54)  bf242e2  deis: Allow users to disable the deis output plugin",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#documentation",
            "text": "49d8d29  Document custom plugin environment variables.",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.6.0/#logger-v230-v231",
            "text": "",
            "title": "Logger v2.3.0 -&gt; v2.3.1"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_3",
            "text": "9bd19a3  weblog: fix up CPU issues",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#documentation_1",
            "text": "9eb022d  README: docs(README) update docs",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_4",
            "text": "6a865ee  Dockerfile: update base image to v0.3.4",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#minio-v221-v230",
            "text": "",
            "title": "Minio v2.2.1 -&gt; v2.3.0"
        },
        {
            "location": "/changelogs/v2.6.0/#features_2",
            "text": "430d6d2  pkg: update the pkg to latest and get ip using downward api",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_5",
            "text": "ac80262  Dockerfile: update base image to v0.3.4",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#monitoring-v240-v251",
            "text": "",
            "title": "Monitoring v2.4.0 -&gt; v2.5.1"
        },
        {
            "location": "/changelogs/v2.6.0/#features_3",
            "text": "ab1d467  influxdb: upgrade influxdb and telegraph to 1.0",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_6",
            "text": "1a10082  telegraf,grafana,influx: Update to 0.3.4 base  d596b08  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#144)  3aea2a7  config: Remove calls to quote",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#nsq-v220-v222",
            "text": "",
            "title": "NSQ v2.2.0 -&gt; v2.2.2"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_4",
            "text": "8e1e208  Adding set -eo pipefail to start up script",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_7",
            "text": "ef2bb5d  Dockerfile: update base image to v0.3.4",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#redis-v220-v222",
            "text": "",
            "title": "Redis v2.2.0 -&gt; v2.2.2"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_5",
            "text": "3659efb  Dockerfile: missing && in Dockerfile makes apt not so happy (#5)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors_1",
            "text": "7e62f08  Makefile: remove obsolete \"docker tag -f\" flag",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_8",
            "text": "545c46b  Dockerfile: update base image to v0.3.4  21c376d  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#4)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#registry-v221-v222",
            "text": "",
            "title": "Registry v2.2.1 -&gt; v2.2.2"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_9",
            "text": "c9150b9  Dockerfile: update base image to v0.3.4  32a7400  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#67)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#registry-proxy-v100-v110",
            "text": "",
            "title": "Registry Proxy v1.0.0 -&gt; v1.1.0"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_6",
            "text": "5f69fe0  nginx: set worker_processes to auto",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_10",
            "text": "89687b0  rootfs: bump version to v1.1.0-dev  70a8a8b  rootfs: bump version to v1.1.0",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#router-v250-v262",
            "text": "",
            "title": "Router v2.5.0 -&gt; v2.6.2"
        },
        {
            "location": "/changelogs/v2.6.0/#features_4",
            "text": "151916e  nginx: Allow sending nginx X-Request-Id and X-Correlation-Id headers.",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors_2",
            "text": "b33c18c  glide: use the official kubernetes client (#259)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_7",
            "text": "a729799  nginx: Enable builder PROXY PROTOCOL support  0d9b119  ngnix: handle X-Forwarded-Port and X-Forwarded-Proto properly",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#documentation_2",
            "text": "b20eba0  README: Correct errant references to RC in annotations table",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_11",
            "text": "4afbcc6  Dockerfile: update base image to v0.3.4  5a6b004  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#262)  e38a69b  nginx: update nginx to 1.11.4 (#252)  246bdc5  Dockerfile: bump deis/base to v0.3.2",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#slugbuilder-v241-v243",
            "text": "",
            "title": "Slugbuilder v2.4.1 -&gt; v2.4.3"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors_3",
            "text": "24e0ce9  Dockerfile: simplify chown commands",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_8",
            "text": "37c5109  build.sh: switch to build_root before running hooks",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_12",
            "text": "2a7769d  Dockerfile: cleanup after installation a bit more than before and keep copyright / license files (#113)  0ff387f  buildpacks: update heroku-buildpack-go to v48  4eada8d  buildpacks: update heroku-buildpack-php to v110  fcb645b  buildpacks: update heroku-buildpack-python to v82  69abae5  buildpacks: update heroku-buildpack-gradle to v18  d6445a6  buildpacks: update heroku-buildpack-java to v46  30ce52f  buildpacks: update heroku-buildpack-go to v49  7e4e9cc  buildpacks: update heroku-buildpack-php to v112",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#slugbuilder-v221-v222",
            "text": "",
            "title": "Slugbuilder v2.2.1 -&gt; v2.2.2"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_13",
            "text": "098d05a  Dockerfile: consolidate a few chmod and chown into one layer (#54)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#workflow-cli-v251-v260",
            "text": "",
            "title": "Workflow CLI v2.5.1 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.6.0/#features_5",
            "text": "c760eb1  cmd: only print version mismatch warning once (#223)  a330059  git: clean up git package and write tests (#227)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors_4",
            "text": "85f2df2  Dockerfile: remove deprecated --strip-vcs flag",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_9",
            "text": "6b13756  CI: explicitly set codecov git SHA (#221)  2bb4cde  Jenkinsfile: un-parallelize lint and test tasks",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#documentation_3",
            "text": "c04610d  README.md: update bucket location  8745328  readme: adding codecov badge (#249)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_14",
            "text": "1041d9e  Dockerfile: update go-dev and go toolchain",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#workflow-documentation-v250-v260",
            "text": "",
            "title": "Workflow Documentation v2.5.0 -&gt; v2.6.0"
        },
        {
            "location": "/changelogs/v2.6.0/#features_6",
            "text": "a3a25c0  scripts: build every tagged version of workflow docs  9ae8f9c  apps: add information about IMAGE_PULL_POLICY globally and per app (#504)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.6.0/#refactors_5",
            "text": "495e1a1  configuring-registry: clarify ECR registry variables",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_10",
            "text": "fb5d378  releases: deisrel no longer requires $OLD_SHA and $OLD_RELEASE  cb23b43  components: link to architecture, not itself (#499)  c95c24b  configuring-registry: add missing IAM link  6509c41  docs: add documentation on resetting a password using the cli. (#507)  7b88723  docs: change the references from RC's to deploments  54df10a  deisrel: update the deisrel command to generate changelog  0e56d8a  gutenbuild: do not build any pre-release tags  80f0551  gutenbuild: ensure we are on master before building  1e87307  gutenbuild: prepend grep string with --  26d8a40  gutenbuild: use dev_build_dest for second build",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#documentation_4",
            "text": "8b542a1  upgrade: reminder to upgrade deis client  0ef84bc  slugbuilder-cache: add CACHE_PATH variable  a349d20  slugbuilder-cache: add usage documentation  1f09a8c  slugbuilder-cache: add application tuning variable  ec42f7b  src/roadmap/releases.md: remove publish component release step  a971a25  CONTRIBUTING: update contributing documentation (#498)  d0a43b5  tuning: update storage default for logger  5720dce  src/managing-workflow/upgrading-workflow.md: document nodes >= 2 for upgrade  5705489  src/roadmap/releases.md: link to pipeline flow diagrams  0da5297  managing-workflow: Document PROXY protocol configuration  b5f2d99  releases: add missing details and reword CI flow reference",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_15",
            "text": "7faaaa7  release: update roadmap for 2.5  e8c5d3f  src/roadmap/releases.md: update jenkins-jobs var name  2655c90  scripts: remove old release tools and CHANGELOG",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.6.0/#workflow-e2e-tests-v252-v253",
            "text": "",
            "title": "Workflow E2E Tests v2.5.2 -&gt; v2.5.3"
        },
        {
            "location": "/changelogs/v2.6.0/#fixes_11",
            "text": "4f00c8b  tests: re-enable tls tests (#326)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.6.0/#worklfow-manager-v241-v242",
            "text": "",
            "title": "Worklfow Manager v2.4.1 -&gt; v2.4.2"
        },
        {
            "location": "/changelogs/v2.6.0/#maintenance_16",
            "text": "350f7c3  Dockerfile: update base image to v0.3.4",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/",
            "text": "Workflow v2.4.2 -> v2.5.0\n\u00b6\n\n\nBuilder v2.4.0 -> v2.5.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nf99a28e\n slugbuilder-cache: Add CACHE_PATH variable\n\n\n05522a0\n source_version: add SOURCE_VERSION env var\n\n\nf2c28ef\n slugbuilder-cache: allow turning caching off completely\n\n\n47432ea\n builder: delete cache if the cache is disabled (#422)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n797243e\n util_test: placate linter by replacing test PK\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n65a7de8\n README.md: correct coverage badge URL\n\n\nc776995\n slugbuilder-cache: fix typo in comments (#417)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n6b04ee5\n CONTRIBUTING: update contributing docs (#413)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\ndb92af5\n rootfs/Dockerfile: update to latest base image\n\n\nb916723\n Makefile: update to go-dev 0.17.0\n\n\n0e50147\n glide: update Controller SDK (#423)\n\n\n\n\nController v2.4.2 -> v2.5.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\ncc0a4d5\n whitelist: Add support for IP whitelist\n\n\n50811a2\n api: add deis tls (#1004)\n\n\n689df78\n scheduler: add the ability to set KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS per application (#1026)\n\n\n5c83d80\n autoscale: add autoscaling support to application on per proc type basis (#1018)\n\n\n1db6146\n scheduler: use /scale endpoints for RC and Deployments to only update replicas during scale events (#1029)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\nf7a3e02\n hooks: remove push hook model as the builder stopped using it (#985)\n\n\n4e0c5a3\n scheduler: update_application_service had an unused name argument (#983)\n\n\nd155e92\n apps: move AppSettings scheduler logic to App model for simplicity (#993)\n\n\nd3d18d2\n scheduler: use scheduler module session singleton to add session mock (#1009)\n\n\n7306202\n scheduler: split up the scheduler code into individual resources and to be modular (#1016)\n\n\n98d809a\n scheduler: scheduler passes the kubernetes endpoint to resources instead of getting it from global settings (#1039)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nd66c20c\n whitelist: Handle empty whitelist from user gracefully\n\n\ndbde253\n tls: Update the value properly to work with morph\n\n\n2f5c019\n api: create TLS object on app create (#1043)\n\n\n0d454ee\n middleware: move to 1.10 style middleware (#955)\n\n\n899e008\n models: add \"added\" log function, lowercase class name (#1017)\n\n\nffa9040\n certs: allow empty Common Name in certificates (#1024)\n\n\n8408c1f\n healthcheck: update healthchecks for non default process type\n\n\n1ca970b\n app: create image pull secrets outside of the async deploy loop (#1032)\n\n\n7f16439\n imagepullpolicy: Use correct environment variable for image pull policy\n\n\n83df91e\n logs: app logs endpoint was returning binary string instead of a normal string (#1035)\n\n\n3f3a228\n scheduler: pass down the right variable for Deployment revision history limit (#1037)\n\n\nad7fc55\n app: rollback all process types to previous version when one (or more) process type fails a deploy (#1027)\n\n\na303f25\n release: change release cleanup to only remove secrets related to Deployments that are no longer active (#1038)\n\n\nffc9f8c\n healthcheck: check if the healthchecks are failing on a new deploy\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n757a8ae\n CONTRIBUTING: update contributing doc (#1006)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\naf7fe18\n requirements: update Requests to 2.11.1 (#990)\n\n\n5853532\n rootfs/Dockerfile: update to latest base image\n\n\n9ced97c\n requirements: Update DRF to 3.4.5 (#997)\n\n\n6afa4f2\n requirements: update DRF to 3.4.6 (#1007)\n\n\na2b8428\n requirements: update PyOpenSSL to 16.1.0 (#1022)\n\n\ncfe2f1c\n requirements: update to Django 1.10.1 (#1040)\n\n\n\n\nDockerbuilder v2.3.1 -> v2.3.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n4273b5c\n tests: feat(tests) Add flake8 linting for python code (#91)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\na67d22c\n Makefile: clean up and update makefile (#90)\n\n\n\n\nLogger v2.2.0 -> v2.3.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nd1ad7c1\n pprof: Add pprof endpoint\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n6596685\n readme: Update readme with new architecture\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nd869a2e\n rootfs/Dockerfile: update to latest base image\n\n\nc79bb98\n Makefile: update to go-dev 0.17.0\n\n\n\n\nMinio v2.2.0 -> v2.2.1\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n22debea\n .travis.yml: unset DEIS_REGISTRY before building image\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n4e55f42\n Makefile: update to go-dev 0.17.0\n\n\na686c8a\n rootfs/Dockerfile: update to latest base image\n\n\n4a5315c\n glide: update glide files\n\n\n\n\nMonitoring v2.3.0 -> v2.4.0\n\u00b6\n\n\nRefactors\n\u00b6\n\n\n\n\n1dfc015\n deis component health: Refactored deis components health dashboards\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n254249a\n Dockerfile: update to latest base image\n\n\n\n\nRegistry v2.2.0 -> v2.2.1\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n412b4e2\n Makefile: update to go-dev 0.17.0\n\n\n4b14708\n .travis.yml: use current Go 1.7 compiler\n\n\n10d8308\n rootfs/Dockerfile: update to latest base image\n\n\n\n\nRouter v2.4.0 -> v2.5.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nbd25b82\n router: add app SSL config\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\na7da253\n fix new linter errors\n\n\nef9a5bf\n Dockerfile: copy the router binary after building ngnix binary\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nea7fffc\n Makefile: update to go-dev 0.17.0\n\n\n8c3aded\n rootfs/Dockerfile: update to latest base image\n\n\n\n\nSlugbuilder v2.3.1 -> v2.4.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n4d634a3\n Makefile: add --pull flag to docker-build\n\n\nb6a2f12\n cache: allow cache to be persisted\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n37c5109\n build.sh: switch to build_root before running hooks\n\n\ndcad3f0\n build: check if release yaml is nil before accessing hash (#105)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n116da05\n readme: fix formatting in readme\n\n\nd05c3e4\n build.sh: simplify and formalize cache message\n\n\n49fecd9\n CONTRIBUTING: update contributing doc (#107)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nc6f948a\n buildpacks: update heroku-buildpack-go to v46\n\n\n\n\nSlugrunner v2.2.0 -> v2.2.1\n\u00b6\n\n\nRefactors\n\u00b6\n\n\n\n\n6b0c90d\n init: remove sdutil, which is no longer used (#51)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n166bddd\n init: check for valid YAML before accessing hash (#50)\n\n\n2d86e6c\n Makefile: ensure to use \"latest\" build of cedar:14\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nd87b04e\n CONTRIBUTING: update contributing doc (#53)\n\n\n\n\nWorkflow CLI v2.4.0 -> v2.5.1\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n78118eb\n CI: refactor CI to build and then pass around a test image (#181)\n\n\naded419\n CI: upload CLI to seperate buckets (#190)\n\n\n3cb4ad3\n whitelist: Add support for ip whitlising for app\n\n\nec466d7\n autoscale: add the ability to define autoscale rules per process type on an app (#208)\n\n\n84de668\n cmd: add \ndeis tls\n\n\neefb125\n Makefile: build using dockefile and slim image size (#215)\n\n\na4dea17\n Makefile: add build-stable target\n\n\n618939c\n users: show admins when listing users (#205)\n\n\n01ca8f8\n version: add deis version --all (#217)\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n912ad85\n Jenkinsfile: remove shell output hack\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n8653f92\n whitelist: format the deis whitelist properly\n\n\n82b6368\n settings: remove duplicated 'v' in user agent (#188)\n\n\nd5a004c\n tests: start adding unit tests (#183)\n\n\n272b1cd\n routing, maintenance: check for existence of pointer before reading it. (#195)\n\n\ndb38964\n git: properly log errors from git (#199)\n\n\n09ca839\n CI: don't upload to old bucket and declare varaibles locally (#211)\n\n\nf9d85a0\n ps: use new sdk for sorted processes (#210)\n\n\nd49acf0\n CI: define more variables locally (#212)\n\n\n9b3980a\n limits: remove short cpu flag (#216)\n\n\ne10caf6\n cmd: fix help string when git remote already exists\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n260d826\n CONTRIBUTING: link contributing documentation to website (#185)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n850ee9c\n glide: update Controller SDK (#220)\n\n\n\n\nWorkflow Documentation v2.4.1 -> v2.5.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n2e92c77\n contributing: add more details to issue reporting (#472)\n\n\na27f00f\n whitelist: Add docs for specifying application whitelist using deis client\n\n\nb8b3eed\n autoscale: add documentation for the autoscale functionality (#483)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\ne066502\n quickstart: remove references to downgrade\n\n\n6f2639a\n quickstart: specify how to get hostname (#469)\n\n\n219179f\n managing-workflow: fix broken link\n\n\n0a1c57d\n apps: KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS is now also per app (#486)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nd7db3d4\n triaging-issues: describe new priority labels\n\n\n2c753c2\n using-docker-images: use example-dockerfile-http as sample dockerfile application instead of helloworld. (#482)\n\n\n6c1f4fd\n ssl-certificates: add docs on deis tls:enable\n\n\n5e055f0\n fix: add --namespace=deis to Controlling Registration Modes\n\n\nc112a46\n update: using-docker-images.md\n\n\n5f46769\n src/roadmap/releases.md: add step for releasing cli stable\n\n\n1e79b46\n upgrading-workflow.md: remove errant/redundant command\n\n\nb721180\n styles: docs(styles) sticky footer to avoid overlap with sidebar\n\n\nc54c2ec\n styles: docs(styles) fix mobile menu scroll issues\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nbd306d4\n release: Workflow 2.4.1 (#463)\n\n\n4afda70\n release: Workflow 2.4.2\n\n\n4694454\n changelogs: add top-level for changelogs\n\n\nf383c43\n changelogs: add v2.0.0 changelog\n\n\n176d080\n changelog: add v2.1.0 changelog\n\n\n9ab4ba8\n changelog: add v2.2.0 changelog\n\n\nebac67f\n changelog: add v2.3.0 changelog\n\n\n1da032d\n changelog: add v2.4.0 changelog\n\n\ndb9bb8d\n changelog: add v2.4.2 changelog\n\n\n0d43482\n changelog: add headings for clarity\n\n\nd18dec4\n changelog: update release process for new changelog page\n\n\na2d58aa\n changelogs: add v2.4.1 changelog\n\n\nbd4db54\n api-docs: add v2.3 API docs (#485)\n\n\n\n\nWorkflow E2E Tests v2.4.0 -> v2.5.2\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\na2ed8b2\n docker: add DEBUG option to hang build (#312)\n\n\n30c8fd3\n procfile: unskip builds procfile test\n\n\n95f4eb9\n docker-test-integration.sh: try curling cli from multiple buckets\n\n\n9c294e3\n maintenance: Add test for maintenance mode\n\n\n013709e\n whitelist: Add tests for deis whitelist\n\n\n5bc8cb0\n tests: add deis tls tests (#316)\n\n\n0f2df78\n docker-test-integration.sh: check if 'stable'\n\n\n\n\nRefactors\n\u00b6\n\n\n\n\n2da83d9\n Dockerfile: don't use alpine, it has known DNS issues (#313)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n8a2d858\n healthcheck: use correct port the image exposes\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n424f625\n Makefile: update docker-go-dev to 0.17.0\n\n\n88ad38f\n glide.lock: update ginkgo, gomega, controller-sdk-go\n\n\n\n\nWorkflow Manager v2.4.0 -> v2.4.1\n\u00b6\n\n\nDocumentation\n\u00b6\n\n\n\n\n25f5b32\n README.md: add codecov.io badge\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n940ced5\n Makefile: update to go-dev 0.17.0\n\n\nd9b0326\n rootfs/Dockerfile: update to latest base image",
            "title": "v2.5.0"
        },
        {
            "location": "/changelogs/v2.5.0/#workflow-v242-v250",
            "text": "",
            "title": "Workflow v2.4.2 -&gt; v2.5.0"
        },
        {
            "location": "/changelogs/v2.5.0/#builder-v240-v250",
            "text": "",
            "title": "Builder v2.4.0 -&gt; v2.5.0"
        },
        {
            "location": "/changelogs/v2.5.0/#features",
            "text": "f99a28e  slugbuilder-cache: Add CACHE_PATH variable  05522a0  source_version: add SOURCE_VERSION env var  f2c28ef  slugbuilder-cache: allow turning caching off completely  47432ea  builder: delete cache if the cache is disabled (#422)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors",
            "text": "797243e  util_test: placate linter by replacing test PK",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes",
            "text": "65a7de8  README.md: correct coverage badge URL  c776995  slugbuilder-cache: fix typo in comments (#417)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation",
            "text": "6b04ee5  CONTRIBUTING: update contributing docs (#413)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance",
            "text": "db92af5  rootfs/Dockerfile: update to latest base image  b916723  Makefile: update to go-dev 0.17.0  0e50147  glide: update Controller SDK (#423)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#controller-v242-v252",
            "text": "",
            "title": "Controller v2.4.2 -&gt; v2.5.2"
        },
        {
            "location": "/changelogs/v2.5.0/#features_1",
            "text": "cc0a4d5  whitelist: Add support for IP whitelist  50811a2  api: add deis tls (#1004)  689df78  scheduler: add the ability to set KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS per application (#1026)  5c83d80  autoscale: add autoscaling support to application on per proc type basis (#1018)  1db6146  scheduler: use /scale endpoints for RC and Deployments to only update replicas during scale events (#1029)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_1",
            "text": "f7a3e02  hooks: remove push hook model as the builder stopped using it (#985)  4e0c5a3  scheduler: update_application_service had an unused name argument (#983)  d155e92  apps: move AppSettings scheduler logic to App model for simplicity (#993)  d3d18d2  scheduler: use scheduler module session singleton to add session mock (#1009)  7306202  scheduler: split up the scheduler code into individual resources and to be modular (#1016)  98d809a  scheduler: scheduler passes the kubernetes endpoint to resources instead of getting it from global settings (#1039)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_1",
            "text": "d66c20c  whitelist: Handle empty whitelist from user gracefully  dbde253  tls: Update the value properly to work with morph  2f5c019  api: create TLS object on app create (#1043)  0d454ee  middleware: move to 1.10 style middleware (#955)  899e008  models: add \"added\" log function, lowercase class name (#1017)  ffa9040  certs: allow empty Common Name in certificates (#1024)  8408c1f  healthcheck: update healthchecks for non default process type  1ca970b  app: create image pull secrets outside of the async deploy loop (#1032)  7f16439  imagepullpolicy: Use correct environment variable for image pull policy  83df91e  logs: app logs endpoint was returning binary string instead of a normal string (#1035)  3f3a228  scheduler: pass down the right variable for Deployment revision history limit (#1037)  ad7fc55  app: rollback all process types to previous version when one (or more) process type fails a deploy (#1027)  a303f25  release: change release cleanup to only remove secrets related to Deployments that are no longer active (#1038)  ffc9f8c  healthcheck: check if the healthchecks are failing on a new deploy",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_1",
            "text": "757a8ae  CONTRIBUTING: update contributing doc (#1006)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_1",
            "text": "af7fe18  requirements: update Requests to 2.11.1 (#990)  5853532  rootfs/Dockerfile: update to latest base image  9ced97c  requirements: Update DRF to 3.4.5 (#997)  6afa4f2  requirements: update DRF to 3.4.6 (#1007)  a2b8428  requirements: update PyOpenSSL to 16.1.0 (#1022)  cfe2f1c  requirements: update to Django 1.10.1 (#1040)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#dockerbuilder-v231-v232",
            "text": "",
            "title": "Dockerbuilder v2.3.1 -&gt; v2.3.2"
        },
        {
            "location": "/changelogs/v2.5.0/#features_2",
            "text": "4273b5c  tests: feat(tests) Add flake8 linting for python code (#91)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_2",
            "text": "a67d22c  Makefile: clean up and update makefile (#90)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#logger-v220-v230",
            "text": "",
            "title": "Logger v2.2.0 -&gt; v2.3.0"
        },
        {
            "location": "/changelogs/v2.5.0/#features_3",
            "text": "d1ad7c1  pprof: Add pprof endpoint",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_2",
            "text": "6596685  readme: Update readme with new architecture",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_3",
            "text": "d869a2e  rootfs/Dockerfile: update to latest base image  c79bb98  Makefile: update to go-dev 0.17.0",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#minio-v220-v221",
            "text": "",
            "title": "Minio v2.2.0 -&gt; v2.2.1"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_2",
            "text": "22debea  .travis.yml: unset DEIS_REGISTRY before building image",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_4",
            "text": "4e55f42  Makefile: update to go-dev 0.17.0  a686c8a  rootfs/Dockerfile: update to latest base image  4a5315c  glide: update glide files",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#monitoring-v230-v240",
            "text": "",
            "title": "Monitoring v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_2",
            "text": "1dfc015  deis component health: Refactored deis components health dashboards",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_5",
            "text": "254249a  Dockerfile: update to latest base image",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#registry-v220-v221",
            "text": "",
            "title": "Registry v2.2.0 -&gt; v2.2.1"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_6",
            "text": "412b4e2  Makefile: update to go-dev 0.17.0  4b14708  .travis.yml: use current Go 1.7 compiler  10d8308  rootfs/Dockerfile: update to latest base image",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#router-v240-v250",
            "text": "",
            "title": "Router v2.4.0 -&gt; v2.5.0"
        },
        {
            "location": "/changelogs/v2.5.0/#features_4",
            "text": "bd25b82  router: add app SSL config",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_3",
            "text": "a7da253  fix new linter errors  ef9a5bf  Dockerfile: copy the router binary after building ngnix binary",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_7",
            "text": "ea7fffc  Makefile: update to go-dev 0.17.0  8c3aded  rootfs/Dockerfile: update to latest base image",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#slugbuilder-v231-v241",
            "text": "",
            "title": "Slugbuilder v2.3.1 -&gt; v2.4.1"
        },
        {
            "location": "/changelogs/v2.5.0/#features_5",
            "text": "4d634a3  Makefile: add --pull flag to docker-build  b6a2f12  cache: allow cache to be persisted",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_3",
            "text": "37c5109  build.sh: switch to build_root before running hooks  dcad3f0  build: check if release yaml is nil before accessing hash (#105)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_3",
            "text": "116da05  readme: fix formatting in readme  d05c3e4  build.sh: simplify and formalize cache message  49fecd9  CONTRIBUTING: update contributing doc (#107)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_8",
            "text": "c6f948a  buildpacks: update heroku-buildpack-go to v46",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#slugrunner-v220-v221",
            "text": "",
            "title": "Slugrunner v2.2.0 -&gt; v2.2.1"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_4",
            "text": "6b0c90d  init: remove sdutil, which is no longer used (#51)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_4",
            "text": "166bddd  init: check for valid YAML before accessing hash (#50)  2d86e6c  Makefile: ensure to use \"latest\" build of cedar:14",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_4",
            "text": "d87b04e  CONTRIBUTING: update contributing doc (#53)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#workflow-cli-v240-v251",
            "text": "",
            "title": "Workflow CLI v2.4.0 -&gt; v2.5.1"
        },
        {
            "location": "/changelogs/v2.5.0/#features_6",
            "text": "78118eb  CI: refactor CI to build and then pass around a test image (#181)  aded419  CI: upload CLI to seperate buckets (#190)  3cb4ad3  whitelist: Add support for ip whitlising for app  ec466d7  autoscale: add the ability to define autoscale rules per process type on an app (#208)  84de668  cmd: add  deis tls  eefb125  Makefile: build using dockefile and slim image size (#215)  a4dea17  Makefile: add build-stable target  618939c  users: show admins when listing users (#205)  01ca8f8  version: add deis version --all (#217)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_5",
            "text": "912ad85  Jenkinsfile: remove shell output hack",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_5",
            "text": "8653f92  whitelist: format the deis whitelist properly  82b6368  settings: remove duplicated 'v' in user agent (#188)  d5a004c  tests: start adding unit tests (#183)  272b1cd  routing, maintenance: check for existence of pointer before reading it. (#195)  db38964  git: properly log errors from git (#199)  09ca839  CI: don't upload to old bucket and declare varaibles locally (#211)  f9d85a0  ps: use new sdk for sorted processes (#210)  d49acf0  CI: define more variables locally (#212)  9b3980a  limits: remove short cpu flag (#216)  e10caf6  cmd: fix help string when git remote already exists",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_5",
            "text": "260d826  CONTRIBUTING: link contributing documentation to website (#185)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_9",
            "text": "850ee9c  glide: update Controller SDK (#220)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#workflow-documentation-v241-v250",
            "text": "",
            "title": "Workflow Documentation v2.4.1 -&gt; v2.5.0"
        },
        {
            "location": "/changelogs/v2.5.0/#features_7",
            "text": "2e92c77  contributing: add more details to issue reporting (#472)  a27f00f  whitelist: Add docs for specifying application whitelist using deis client  b8b3eed  autoscale: add documentation for the autoscale functionality (#483)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_6",
            "text": "e066502  quickstart: remove references to downgrade  6f2639a  quickstart: specify how to get hostname (#469)  219179f  managing-workflow: fix broken link  0a1c57d  apps: KUBERNETES_POD_TERMINATION_GRACE_PERIOD_SECONDS is now also per app (#486)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_6",
            "text": "d7db3d4  triaging-issues: describe new priority labels  2c753c2  using-docker-images: use example-dockerfile-http as sample dockerfile application instead of helloworld. (#482)  6c1f4fd  ssl-certificates: add docs on deis tls:enable  5e055f0  fix: add --namespace=deis to Controlling Registration Modes  c112a46  update: using-docker-images.md  5f46769  src/roadmap/releases.md: add step for releasing cli stable  1e79b46  upgrading-workflow.md: remove errant/redundant command  b721180  styles: docs(styles) sticky footer to avoid overlap with sidebar  c54c2ec  styles: docs(styles) fix mobile menu scroll issues",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_10",
            "text": "bd306d4  release: Workflow 2.4.1 (#463)  4afda70  release: Workflow 2.4.2  4694454  changelogs: add top-level for changelogs  f383c43  changelogs: add v2.0.0 changelog  176d080  changelog: add v2.1.0 changelog  9ab4ba8  changelog: add v2.2.0 changelog  ebac67f  changelog: add v2.3.0 changelog  1da032d  changelog: add v2.4.0 changelog  db9bb8d  changelog: add v2.4.2 changelog  0d43482  changelog: add headings for clarity  d18dec4  changelog: update release process for new changelog page  a2d58aa  changelogs: add v2.4.1 changelog  bd4db54  api-docs: add v2.3 API docs (#485)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#workflow-e2e-tests-v240-v252",
            "text": "",
            "title": "Workflow E2E Tests v2.4.0 -&gt; v2.5.2"
        },
        {
            "location": "/changelogs/v2.5.0/#features_8",
            "text": "a2ed8b2  docker: add DEBUG option to hang build (#312)  30c8fd3  procfile: unskip builds procfile test  95f4eb9  docker-test-integration.sh: try curling cli from multiple buckets  9c294e3  maintenance: Add test for maintenance mode  013709e  whitelist: Add tests for deis whitelist  5bc8cb0  tests: add deis tls tests (#316)  0f2df78  docker-test-integration.sh: check if 'stable'",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.5.0/#refactors_6",
            "text": "2da83d9  Dockerfile: don't use alpine, it has known DNS issues (#313)",
            "title": "Refactors"
        },
        {
            "location": "/changelogs/v2.5.0/#fixes_7",
            "text": "8a2d858  healthcheck: use correct port the image exposes",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_11",
            "text": "424f625  Makefile: update docker-go-dev to 0.17.0  88ad38f  glide.lock: update ginkgo, gomega, controller-sdk-go",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.5.0/#workflow-manager-v240-v241",
            "text": "",
            "title": "Workflow Manager v2.4.0 -&gt; v2.4.1"
        },
        {
            "location": "/changelogs/v2.5.0/#documentation_7",
            "text": "25f5b32  README.md: add codecov.io badge",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.5.0/#maintenance_12",
            "text": "940ced5  Makefile: update to go-dev 0.17.0  d9b0326  rootfs/Dockerfile: update to latest base image",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.2/",
            "text": "Workflow v2.4.0 -> v2.4.2\n\u00b6\n\n\nController v2.4.1 -> v2.4.2\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\neb2f32b\n registry: tell a user they need PORT when using off-cluster native iaas registry (#988)\n\n\ne9352a3\n proctypes: update service after all the proctypes are deployed\n\n\nf7fb2f6\n release: during cleanup let pod deletion 404 in case Kubernetes cleaned up as well (#1005)",
            "title": "v2.4.2"
        },
        {
            "location": "/changelogs/v2.4.2/#workflow-v240-v242",
            "text": "",
            "title": "Workflow v2.4.0 -&gt; v2.4.2"
        },
        {
            "location": "/changelogs/v2.4.2/#controller-v241-v242",
            "text": "",
            "title": "Controller v2.4.1 -&gt; v2.4.2"
        },
        {
            "location": "/changelogs/v2.4.2/#fixes",
            "text": "eb2f32b  registry: tell a user they need PORT when using off-cluster native iaas registry (#988)  e9352a3  proctypes: update service after all the proctypes are deployed  f7fb2f6  release: during cleanup let pod deletion 404 in case Kubernetes cleaned up as well (#1005)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.1/",
            "text": "Workflow v2.4.0 -> v2.4.1\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\naf1c969\n workflow-v2.4.1: releasing workflow-v2.4.1(-e2e)\n\n\nFixes\n\u00b6\n\n\n3f3be4d\n controller: scheduler: check if RC exists during a deploy before trying to use Deployments \n#996",
            "title": "v2.4.1"
        },
        {
            "location": "/changelogs/v2.4.1/#workflow-v240-v241",
            "text": "",
            "title": "Workflow v2.4.0 -&gt; v2.4.1"
        },
        {
            "location": "/changelogs/v2.4.1/#maintenance",
            "text": "af1c969  workflow-v2.4.1: releasing workflow-v2.4.1(-e2e)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.1/#fixes",
            "text": "3f3be4d  controller: scheduler: check if RC exists during a deploy before trying to use Deployments  #996",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/",
            "text": "Workflow v2.3.0 -> v2.4.0\n\u00b6\n\n\nBuilder v2.3.0 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\ne292969\n *: switch to using controller-sdk-go for controller interactions (#402)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nd340772\n pod: log pod error status and message instead of pod struct\n\n\n0690f89\n _tests: remove out of date functional tests (#406)\n\n\ne791c1d\n gitreceive: change target name to Workflow\n\n\n\n\nController v2.3.1 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\na7cff7e\n models: add routable flag to Config (#934)\n\n\ncebd736\n scheduler: add scheduler tests that do not go through normal api tests (#965)\n\n\n2a41942\n healthcheck: Add support to create healthcheck per proctype Requires workflow-cli#160\n\n\n3e988ea\n model: Add new model to store settings\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n54f0f75\n app: adjust async for better usage and to account for asyncio bug\n\n\n855bb59\n scheduler: create application config (env secrets) outside of deploy / scale to reduce k8s thrasing\n\n\n996be37\n mock: mock scheduler could not gracefully handle the concurrent deploy / scale\n\n\n7da5212\n run: return a 400 if command is empty (#952)\n\n\nc91f361\n passwd: raise 400 when password is not a parameter (#850)\n\n\n544f492\n scheduler: in scheduler::run check if pod state is an object or a string before acing on it (#957)\n\n\na4ee5a8\n health: Add healthchecks only for routable apps or proctypes\n\n\n37ea65c\n Makefile: add deis namespace to make deploy (#969)\n\n\n7f19c48\n scheduler: make app un-routable (#974)\n\n\n6cfeba0\n scheduler: when user asks for limits beyond their allowance then error out faster (#975)\n\n\n7a152a6\n scheduler: allow Deployment \"in progress\" to be bypassed in case of errors or timeout (#978)\n\n\nbf82529\n registry: retry pull/push/tag 3 times - should help with slow networks and slow registries (#979)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\ncc6617e\n README.md: add postgresql prereq\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\ne0a3f02\n requirements: Django REST Framework 3.4.3\n\n\n77dbf94\n travis: cache pip in travis runs (#944)\n\n\nb66948d\n requirements: requests update to 2.11.0 (#962)\n\n\n6e6d257\n requirements: update to django-guardian 1.4.5 (#964)\n\n\n87a92f6\n requirements: update backoff 1.3.1 (#963)\n\n\nc6e3eb3\n migrations: create a migration for various alterations that do not touch schema (#967)\n\n\na16aa8c\n requirements: Update Django REST Framework to 3.4.4 (#976)\n\n\n\n\nDatabase v2.2.1 -> v2.2.2\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n022f2c5\n Update the postgres version\n\n\n\n\nDockerbuilder v2.3.0 -> v2.3.1\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n31065a3\n Dockerfile: update deis/base to 0.3.0\n\n\n\n\nMonitoring v2.2.0 -> v2.3.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n527d4dd\n dashboards: create dashboards for all deis components\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n3b15224\n ini: a stray quote was causing INI parsing to break\n\n\na21e7e4\n start-grafana: Create dashboard directory when starting grafana\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n2548941\n readme: Provide a configuration section in grafana readme\n\n\n\n\nRouter v2.3.0 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n01cf487\n *: Update nginx to 1.11.2\n\n\n571dfea\n router: Get the annotations from the deployment object instead of RC\n\n\n59e753c\n maintenance: Add support for maintenance mode for apps\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n1769d2d\n model: Improve regex for SSL ciphers\n\n\ne085023\n routable: Use correct label key for routable\n\n\nc00da10\n model: Specify a default ssl cipher list\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n7cbf93e\n readme: Clarify that routable services must expose port 80\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n541b19b\n .gitignore: Update to ignore deis-router-deployment.tmp.yaml\n\n\n\n\nSlugbuilder v2.3.0 -> v2.3.1\n\u00b6\n\n\nMaintenance\n\u00b6\n\n\n\n\n815d0a7\n buildpacks: update heroku-buildpack-go to v44\n\n\n7b34cb5\n buildpacks: update heroku-buildpack-scala to v72\n\n\nf647afe\n buildpacks: update php buildpack\n\n\n\n\nWorkflow CLI v2.3.0 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nf37432b\n Jenkinsfile: send COMPONENT_REPO param to e2e job\n\n\ndfe19e0\n logging: extract logging to its own package and write tests (#166)\n\n\n7b4c48d\n cmd: add deis routing\n\n\n37cdb52\n healthcheck: Add support for healthcheck per proctype\n\n\n4df89d2\n maintenance: Add support for maintenance mode for apps\n\n\n7a9ebf4\n Jenkinsfile: wipe vendor dir if bootstrap fails\n\n\n47def28\n Makefile: add git branch and sha information to the uploaded blob\n\n\n2103657\n *: allow configuration flag (#169)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n6745e75\n version: move all version logic to git (#167)\n\n\n4f2d342\n healthcheck: Don't fail if there is no healthcheck for a proctype\n\n\nba9d5d7\n CI: don't cache latest binaries (#175)\n\n\n36df5d4\n CI: delete artifacts when cleaning up (#179)\n\n\n\n\nWorkflow Documentation v2.3.0 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\naf7cf12\n healthcheck: Add docs for applying healthchecks per proctype\n\n\nd84c0a1\n troubleshooting: add troubleshooting applications\n\n\n7477ae7\n docs: add documentation for limits\n\n\n4ea0719\n CLI: document new behavior of  variable (#440)\n\n\nc41f71e\n maintenance: Add docs for maintenance mode support\n\n\n\n\nFixes\n\u00b6\n\n\n\n\nfde9a81\n installing: Add configuring registry docs to doc tree\n\n\n4480831\n applications: use admonition styling\n\n\nd097233\n user: supply a kubectl patch function to simplify registration mode setting\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nfb9db75\n applications: add deis routing docs\n\n\n12fd1d7\n registration: update registration for 2.3 behavior (#448)\n\n\n8d271ca\n upgrading: expand and clarify workflow upgrade instructions (#447)\n\n\n5fdf2da\n storage: cleanup storage docs (#454)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n88167c5\n roadmap: update roadmap for 2.x (#417)\n\n\n8befc2a\n docs: update docs to reflect fixed issue (#455)\n\n\n\n\nWorkflow E2E Tests v2.3.0 -> v2.4.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n6f76da5\n procfile: create a build with a procfile\n\n\n94a884a\n skip: make procfile test pending\n\n\n09c1c33\n tests: add deis routing e2e tests (#304)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n7e0d1cc\n CLI: log cli version after installing to check revision (#284)\n\n\n47a6907\n deployments: proc type regex changed due to Deployments\n\n\nb22274e\n limits: ask for 500m instead of 1024 cores in the limits CPU test\n\n\n2cd045a\n Makefile: add retrying to workflow CLI download\n\n\na56611c\n docker-test-integration: show curl errors (#311)\n\n\n807d110\n auth: update to new missing config error message (#301)\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\nce08b1c\n travis: Remove .travis.yml\n\n\n\n\nWorkflow Manager v2.3.1 -> v2.4.0\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\n7d859f5\n feature(data): add deployments, daemonsets to cluster data (#95)\n\n\n31fe3bc\n cluster_id is vulnerable to race condition when called concurrently (#94)\n\n\n2582640\n bug(k8s): unintentional variable shadowing (#92)",
            "title": "v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#workflow-v230-v240",
            "text": "",
            "title": "Workflow v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#builder-v230-v240",
            "text": "",
            "title": "Builder v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features",
            "text": "e292969  *: switch to using controller-sdk-go for controller interactions (#402)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes",
            "text": "d340772  pod: log pod error status and message instead of pod struct  0690f89  _tests: remove out of date functional tests (#406)  e791c1d  gitreceive: change target name to Workflow",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#controller-v231-v240",
            "text": "",
            "title": "Controller v2.3.1 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_1",
            "text": "a7cff7e  models: add routable flag to Config (#934)  cebd736  scheduler: add scheduler tests that do not go through normal api tests (#965)  2a41942  healthcheck: Add support to create healthcheck per proctype Requires workflow-cli#160  3e988ea  model: Add new model to store settings",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_1",
            "text": "54f0f75  app: adjust async for better usage and to account for asyncio bug  855bb59  scheduler: create application config (env secrets) outside of deploy / scale to reduce k8s thrasing  996be37  mock: mock scheduler could not gracefully handle the concurrent deploy / scale  7da5212  run: return a 400 if command is empty (#952)  c91f361  passwd: raise 400 when password is not a parameter (#850)  544f492  scheduler: in scheduler::run check if pod state is an object or a string before acing on it (#957)  a4ee5a8  health: Add healthchecks only for routable apps or proctypes  37ea65c  Makefile: add deis namespace to make deploy (#969)  7f19c48  scheduler: make app un-routable (#974)  6cfeba0  scheduler: when user asks for limits beyond their allowance then error out faster (#975)  7a152a6  scheduler: allow Deployment \"in progress\" to be bypassed in case of errors or timeout (#978)  bf82529  registry: retry pull/push/tag 3 times - should help with slow networks and slow registries (#979)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#documentation",
            "text": "cc6617e  README.md: add postgresql prereq",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance",
            "text": "e0a3f02  requirements: Django REST Framework 3.4.3  77dbf94  travis: cache pip in travis runs (#944)  b66948d  requirements: requests update to 2.11.0 (#962)  6e6d257  requirements: update to django-guardian 1.4.5 (#964)  87a92f6  requirements: update backoff 1.3.1 (#963)  c6e3eb3  migrations: create a migration for various alterations that do not touch schema (#967)  a16aa8c  requirements: Update Django REST Framework to 3.4.4 (#976)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#database-v221-v222",
            "text": "",
            "title": "Database v2.2.1 -&gt; v2.2.2"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_1",
            "text": "022f2c5  Update the postgres version",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#dockerbuilder-v230-v231",
            "text": "",
            "title": "Dockerbuilder v2.3.0 -&gt; v2.3.1"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_2",
            "text": "31065a3  Dockerfile: update deis/base to 0.3.0",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#monitoring-v220-v230",
            "text": "",
            "title": "Monitoring v2.2.0 -&gt; v2.3.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_2",
            "text": "527d4dd  dashboards: create dashboards for all deis components",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_2",
            "text": "3b15224  ini: a stray quote was causing INI parsing to break  a21e7e4  start-grafana: Create dashboard directory when starting grafana",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#documentation_1",
            "text": "2548941  readme: Provide a configuration section in grafana readme",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.4.0/#router-v230-v240",
            "text": "",
            "title": "Router v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_3",
            "text": "01cf487  *: Update nginx to 1.11.2  571dfea  router: Get the annotations from the deployment object instead of RC  59e753c  maintenance: Add support for maintenance mode for apps",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_3",
            "text": "1769d2d  model: Improve regex for SSL ciphers  e085023  routable: Use correct label key for routable  c00da10  model: Specify a default ssl cipher list",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#documentation_2",
            "text": "7cbf93e  readme: Clarify that routable services must expose port 80",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_3",
            "text": "541b19b  .gitignore: Update to ignore deis-router-deployment.tmp.yaml",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#slugbuilder-v230-v231",
            "text": "",
            "title": "Slugbuilder v2.3.0 -&gt; v2.3.1"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_4",
            "text": "815d0a7  buildpacks: update heroku-buildpack-go to v44  7b34cb5  buildpacks: update heroku-buildpack-scala to v72  f647afe  buildpacks: update php buildpack",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#workflow-cli-v230-v240",
            "text": "",
            "title": "Workflow CLI v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_4",
            "text": "f37432b  Jenkinsfile: send COMPONENT_REPO param to e2e job  dfe19e0  logging: extract logging to its own package and write tests (#166)  7b4c48d  cmd: add deis routing  37cdb52  healthcheck: Add support for healthcheck per proctype  4df89d2  maintenance: Add support for maintenance mode for apps  7a9ebf4  Jenkinsfile: wipe vendor dir if bootstrap fails  47def28  Makefile: add git branch and sha information to the uploaded blob  2103657  *: allow configuration flag (#169)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_4",
            "text": "6745e75  version: move all version logic to git (#167)  4f2d342  healthcheck: Don't fail if there is no healthcheck for a proctype  ba9d5d7  CI: don't cache latest binaries (#175)  36df5d4  CI: delete artifacts when cleaning up (#179)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#workflow-documentation-v230-v240",
            "text": "",
            "title": "Workflow Documentation v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_5",
            "text": "af7cf12  healthcheck: Add docs for applying healthchecks per proctype  d84c0a1  troubleshooting: add troubleshooting applications  7477ae7  docs: add documentation for limits  4ea0719  CLI: document new behavior of  variable (#440)  c41f71e  maintenance: Add docs for maintenance mode support",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_5",
            "text": "fde9a81  installing: Add configuring registry docs to doc tree  4480831  applications: use admonition styling  d097233  user: supply a kubectl patch function to simplify registration mode setting",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#documentation_3",
            "text": "fb9db75  applications: add deis routing docs  12fd1d7  registration: update registration for 2.3 behavior (#448)  8d271ca  upgrading: expand and clarify workflow upgrade instructions (#447)  5fdf2da  storage: cleanup storage docs (#454)",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_5",
            "text": "88167c5  roadmap: update roadmap for 2.x (#417)  8befc2a  docs: update docs to reflect fixed issue (#455)",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#workflow-e2e-tests-v230-v240",
            "text": "",
            "title": "Workflow E2E Tests v2.3.0 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#features_6",
            "text": "6f76da5  procfile: create a build with a procfile  94a884a  skip: make procfile test pending  09c1c33  tests: add deis routing e2e tests (#304)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_6",
            "text": "7e0d1cc  CLI: log cli version after installing to check revision (#284)  47a6907  deployments: proc type regex changed due to Deployments  b22274e  limits: ask for 500m instead of 1024 cores in the limits CPU test  2cd045a  Makefile: add retrying to workflow CLI download  a56611c  docker-test-integration: show curl errors (#311)  807d110  auth: update to new missing config error message (#301)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.4.0/#maintenance_6",
            "text": "ce08b1c  travis: Remove .travis.yml",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.4.0/#workflow-manager-v231-v240",
            "text": "",
            "title": "Workflow Manager v2.3.1 -&gt; v2.4.0"
        },
        {
            "location": "/changelogs/v2.4.0/#fixes_7",
            "text": "7d859f5  feature(data): add deployments, daemonsets to cluster data (#95)  31fe3bc  cluster_id is vulnerable to race condition when called concurrently (#94)  2582640  bug(k8s): unintentional variable shadowing (#92)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.3.0/",
            "text": "Workflow v2.2.0 -> v2.3.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n7fbeb3f\n router: move deis-router to use Deployments\n\n\n69831ed\n workflow-manager: move deis-workflow-manager to use Deployments\n\n\n31cbcc9\n registry: move deis-registry to use Deployments\n\n\n4173034\n controller: move deis-controller to use Deployments\n\n\n106e022\n builder: move deis-builder to use Deployments\n\n\n1692748\n test: add TEST env variable to workflow e2e chart\n\n\n78e77cb\n workflow-dev: re-introduce registry-proxy\n\n\n38c80bb\n registry: Add support for private registry\n\n\n79a26ec\n *: add helm-keep to all Deployments, like router already has\n\n\ned96f15\n makefile: add deploy command to deploy image to k8s (#396)\n\n\na849301\n makefile: add formating and linting tests (#394)\n\n\n2f5642a\n registry: Add support for external registry\n\n\necfcea6\n api: added auth/whoami endpoint (#737)\n\n\nba12d09\n boot: background the loading of DB data into Kubernetes\n\n\n63c8f4d\n app: during ps:restart run pod delete in parallel\n\n\nccf988b\n apps: scale / deploy run all process types in parallel instead of sequantially\n\n\n7473e16\n regsitry: Add support for private registry\n\n\n76ea246\n IDN: add support for international domains\n\n\n7003286\n Dockerfile: verify nginx pgp key (#219)\n\n\n1f652ae\n builder: add pre-compile/post-compile hooks\n\n\n827a411\n builder: inject ENV_DIR into the environment\n\n\n4e49625\n auth: basic auth for /v3/doctor/{id} API endpoint (#88)\n\n\n84206b2\n deis doctor includes lots of k8s data\n\n\na8e23b6\n registry: Add docs for configuring private registry\n\n\n540c4ec\n update: update docs to reflect v2.3.0\n\n\n5615bb4\n ci: send emails to slack on e2e failure (#133)\n\n\n6e2954d\n shortcuts: add shortcuts test\n\n\nf59bb66\n Jenkinsfile: no retry prompt if master\n\n\n8168ea1\n cmd: add auth:whoami --all\n\n\n5e78fc4\n Jenkinsfile: override 'sh' to add colorized output\n\n\nfb6ed28\n Jenkinsfile: get actual PR commit, if PR\n\n\n1199b9e\n ci: add codecov (#146)\n\n\ncaf1fd0\n git: add more flags to the git command (#141)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n93098d6\n registry: registry token refresher shouldn't be uninstalled when using in-cluster\n\n\ne0e5712\n k8s_util: proxy registry host/port information to dockerbuilder\n\n\n766d73a\n release: old release shouldn't be deleted if new release fails\n\n\ncf16d56\n scheduler: only get logs for run pods when possible\n\n\na2c00ed\n app: round the log message wait time using bankers rounding\n\n\n4f9efb0\n pull: release and build should be deleted on failed deis pull\n\n\ne36f796\n registry: User should be able to pull the image from internal registry\n\n\ne99b852\n boot: show a warning instead of error if a Deployment is in progress when Deis Workflow is starting up\n\n\n02d9bb2\n scheduler: check if an event stream was returned before pop()ing it\n\n\nffef759\n scheduler: lower case CPU limits and upper case first char in Memory limits for Kubernetes\n\n\n17a0ef0\n registry: catch docker timeouts and show a nicer error\n\n\n1d24ed6\n registry: Use proper hostname for dockerhub images\n\n\n418eef7\n registry: Add unit tests\n\n\na4d58d8\n validation: success threshold can only be equal to one when setting liveness probe. Error properly\n\n\nd7c4632\n models: add more sensible ordering to various API responses\n\n\nf3bbc11\n app: add verbose_name to App model due to a DRF 3.4.1 fix\n\n\na044e94\n scale: return a 404 instead of 400 when scale uses a proc type that does not exist\n\n\n6d6a10e\n middleware: remove unused server side version check (#937)\n\n\nbab3632\n controller: only load latest config\n\n\n8de5f6c\n secret: handle the secret value if it is None\n\n\n614feb7\n deploy.py: remove insecure-registry requirement\n\n\n38f839a\n rootfs: check if recovery.conf is present\n\n\n920afe5\n router: BodySize config can be \"0\"\n\n\n152680b\n builder: remove CACHE_DIR from /bin/release\n\n\n6aa120a\n jobs: run periodic jobs once at start time (#89)\n\n\n7fd06ce\n quickstart: fix link to buildpack documentation\n\n\ne8dd0b5\n releases: remove old milestone step\n\n\n89e4177\n tests: set owner of files created by containers to the local user (#151)\n\n\nc655ea0\n test-style: make fmt fail style-test and fix existing formatting errors (#135)\n\n\nf94b05f\n CI: don't allow untrusted commands when uploading (#154)\n\n\n9d52c27\n git: fix linting error (#159)\n\n\n1f412af\n CI: False doesn't abort build (#158)\n\n\n8c843a6\n CI: add false to retry loop (#162)\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\ned7c6de\n PR Template: switch from refs to requires as per new syntax\n\n\ndc4e0ba\n README: add debian installation instructions (#837)\n\n\nfeef1e4\n dockerfiles: Add Bash to requirements list of Dockerfile/image\n\n\na3bd63b\n dockerfiles: Re-word bash requirement annotation\n\n\ne7a25b5\n applications: reword deployments description\n\n\n1cc7347\n applications: add pre-compile/post-compile hook docs\n\n\n2a63431\n configuring-postgres: fix typo (of -> or)\n\n\n835c9f3\n applications: fix up grammar under \"Compile Hooks\"\n\n\n3cbe544\n roadmap: rewrite for new release process\n\n\ncb8c8d1\n installing-workflow: remove insecure-registry documentation\n\n\n9404953\n reference: add /v2/auth/whoami endpoint\n\n\ne28bc0f\n releases: add deisrel command to query released components\n\n\n85d34d5\n applications: explain how to add user ssh key\n\n\na3c749b\n installing: add k8s 1.3.4+ as supported\n\n\n272a8af\n releases: paste CHANGELOG into tag annotation\n\n\ne4065f7\n release: restore seed-repo milestone step\n\n\ne84fb14\n releases: tag workflow-* repositories\n\n\nd637f06\n styles: remove light shadow from doc text links\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\na327912\n *: remove old charts that reference pre 2.0.0 release\n\n\nc82f3eb\n workflow-v2.3.0: Release workflow and workflow-e2e version 2.3.0\n\n\nc102d81\n Makefile: update docker-go-dev to 0.14.0 (#393)\n\n\nc4c00bc\n requirements: update requests-toolbelt to 0.7.0\n\n\n122d2de\n requirements: update ndg-httpsclient to 0.4.2\n\n\nb606adb\n requirements: update Django REST Framework to 3.4.0\n\n\n2196b58\n requirements: update Django to 1.9.8\n\n\nf530e2b\n requirements: update to docker-py 1.9.0\n\n\nc19cdfc\n dev_requirements: update coverage lib to 4.2.0\n\n\n745d6d0\n requirements: Update to DRF 3.4.1\n\n\n72f0df8\n requirements: move from django-cors-headers to django-cors-middleware\n\n\nf6bfbeb\n api: bump API version to v2.2.0\n\n\n58a837a\n Dockerfile: update pip to 8.1.2\n\n\na948381\n *: update docker-go-dev and switch to using new linter (#220)\n\n\na5e8416\n english language: upgrade != total uninstall\n\n\ncc4f07e\n *: upgrade docker-go-dev and use new linter (#155)\n\n\n87820c4\n glide: update controller-sdk-go",
            "title": "v2.3.0"
        },
        {
            "location": "/changelogs/v2.3.0/#workflow-v220-v230",
            "text": "",
            "title": "Workflow v2.2.0 -&gt; v2.3.0"
        },
        {
            "location": "/changelogs/v2.3.0/#features",
            "text": "7fbeb3f  router: move deis-router to use Deployments  69831ed  workflow-manager: move deis-workflow-manager to use Deployments  31cbcc9  registry: move deis-registry to use Deployments  4173034  controller: move deis-controller to use Deployments  106e022  builder: move deis-builder to use Deployments  1692748  test: add TEST env variable to workflow e2e chart  78e77cb  workflow-dev: re-introduce registry-proxy  38c80bb  registry: Add support for private registry  79a26ec  *: add helm-keep to all Deployments, like router already has  ed96f15  makefile: add deploy command to deploy image to k8s (#396)  a849301  makefile: add formating and linting tests (#394)  2f5642a  registry: Add support for external registry  ecfcea6  api: added auth/whoami endpoint (#737)  ba12d09  boot: background the loading of DB data into Kubernetes  63c8f4d  app: during ps:restart run pod delete in parallel  ccf988b  apps: scale / deploy run all process types in parallel instead of sequantially  7473e16  regsitry: Add support for private registry  76ea246  IDN: add support for international domains  7003286  Dockerfile: verify nginx pgp key (#219)  1f652ae  builder: add pre-compile/post-compile hooks  827a411  builder: inject ENV_DIR into the environment  4e49625  auth: basic auth for /v3/doctor/{id} API endpoint (#88)  84206b2  deis doctor includes lots of k8s data  a8e23b6  registry: Add docs for configuring private registry  540c4ec  update: update docs to reflect v2.3.0  5615bb4  ci: send emails to slack on e2e failure (#133)  6e2954d  shortcuts: add shortcuts test  f59bb66  Jenkinsfile: no retry prompt if master  8168ea1  cmd: add auth:whoami --all  5e78fc4  Jenkinsfile: override 'sh' to add colorized output  fb6ed28  Jenkinsfile: get actual PR commit, if PR  1199b9e  ci: add codecov (#146)  caf1fd0  git: add more flags to the git command (#141)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.3.0/#fixes",
            "text": "93098d6  registry: registry token refresher shouldn't be uninstalled when using in-cluster  e0e5712  k8s_util: proxy registry host/port information to dockerbuilder  766d73a  release: old release shouldn't be deleted if new release fails  cf16d56  scheduler: only get logs for run pods when possible  a2c00ed  app: round the log message wait time using bankers rounding  4f9efb0  pull: release and build should be deleted on failed deis pull  e36f796  registry: User should be able to pull the image from internal registry  e99b852  boot: show a warning instead of error if a Deployment is in progress when Deis Workflow is starting up  02d9bb2  scheduler: check if an event stream was returned before pop()ing it  ffef759  scheduler: lower case CPU limits and upper case first char in Memory limits for Kubernetes  17a0ef0  registry: catch docker timeouts and show a nicer error  1d24ed6  registry: Use proper hostname for dockerhub images  418eef7  registry: Add unit tests  a4d58d8  validation: success threshold can only be equal to one when setting liveness probe. Error properly  d7c4632  models: add more sensible ordering to various API responses  f3bbc11  app: add verbose_name to App model due to a DRF 3.4.1 fix  a044e94  scale: return a 404 instead of 400 when scale uses a proc type that does not exist  6d6a10e  middleware: remove unused server side version check (#937)  bab3632  controller: only load latest config  8de5f6c  secret: handle the secret value if it is None  614feb7  deploy.py: remove insecure-registry requirement  38f839a  rootfs: check if recovery.conf is present  920afe5  router: BodySize config can be \"0\"  152680b  builder: remove CACHE_DIR from /bin/release  6aa120a  jobs: run periodic jobs once at start time (#89)  7fd06ce  quickstart: fix link to buildpack documentation  e8dd0b5  releases: remove old milestone step  89e4177  tests: set owner of files created by containers to the local user (#151)  c655ea0  test-style: make fmt fail style-test and fix existing formatting errors (#135)  f94b05f  CI: don't allow untrusted commands when uploading (#154)  9d52c27  git: fix linting error (#159)  1f412af  CI: False doesn't abort build (#158)  8c843a6  CI: add false to retry loop (#162)",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.3.0/#documentation",
            "text": "ed7c6de  PR Template: switch from refs to requires as per new syntax  dc4e0ba  README: add debian installation instructions (#837)  feef1e4  dockerfiles: Add Bash to requirements list of Dockerfile/image  a3bd63b  dockerfiles: Re-word bash requirement annotation  e7a25b5  applications: reword deployments description  1cc7347  applications: add pre-compile/post-compile hook docs  2a63431  configuring-postgres: fix typo (of -> or)  835c9f3  applications: fix up grammar under \"Compile Hooks\"  3cbe544  roadmap: rewrite for new release process  cb8c8d1  installing-workflow: remove insecure-registry documentation  9404953  reference: add /v2/auth/whoami endpoint  e28bc0f  releases: add deisrel command to query released components  85d34d5  applications: explain how to add user ssh key  a3c749b  installing: add k8s 1.3.4+ as supported  272a8af  releases: paste CHANGELOG into tag annotation  e4065f7  release: restore seed-repo milestone step  e84fb14  releases: tag workflow-* repositories  d637f06  styles: remove light shadow from doc text links",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.3.0/#maintenance",
            "text": "a327912  *: remove old charts that reference pre 2.0.0 release  c82f3eb  workflow-v2.3.0: Release workflow and workflow-e2e version 2.3.0  c102d81  Makefile: update docker-go-dev to 0.14.0 (#393)  c4c00bc  requirements: update requests-toolbelt to 0.7.0  122d2de  requirements: update ndg-httpsclient to 0.4.2  b606adb  requirements: update Django REST Framework to 3.4.0  2196b58  requirements: update Django to 1.9.8  f530e2b  requirements: update to docker-py 1.9.0  c19cdfc  dev_requirements: update coverage lib to 4.2.0  745d6d0  requirements: Update to DRF 3.4.1  72f0df8  requirements: move from django-cors-headers to django-cors-middleware  f6bfbeb  api: bump API version to v2.2.0  58a837a  Dockerfile: update pip to 8.1.2  a948381  *: update docker-go-dev and switch to using new linter (#220)  a5e8416  english language: upgrade != total uninstall  cc4f07e  *: upgrade docker-go-dev and use new linter (#155)  87820c4  glide: update controller-sdk-go",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.2.0/",
            "text": "Workflow v2.1.0 -> v2.2.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\nb59bbbc\n (fluentd) - fluentd: Adding sumologic plugin support\n\n\n424523c\n (logger) - storage: Add redis storage adapter\n\n\n2da72a5\n (logger) - redis: Optimize with more aggresive pipelining\n\n\n0c82466\n (logger) - storage: Make redis the default storage adapter\n\n\n2f92eca\n (monitor) - telegraf, grafana: Start collecting redis metrics\n\n\nc9718e4\n (charts) - logger: Add redis instance for use by logger\n\n\n7d40069\n (charts) - swift: add support for swift storage\n\n\nd6992e1\n (charts) - telegraf: Configure telegraf to start fetching redis metrics\n\n\n0ae9d90\n (workflow-cli) - deis: add \ndeis shortcuts\n command\n\n\n2862f05\n (workflow-cli) - colors: reserve magenta for controller log messages (#132)\n\n\n8a61e63\n (controller) - scheduler: add support for set based requirement filtering via the kubernetes API\n\n\n47b5b08\n (controller) - IDN: add support for international domains\n\n\n32be50a\n (controller) - scheduler: sort env vars and secrets by keys for easier hashing\n\n\nc3c2494\n (controller) - add Deployments support behind a feature flag\n\n\nedb0383\n (controller) - scheduler: feat(scheduler) prepend [namespace] to Scheduler log message for better traceability\n\n\n84b8080\n (controller) - app: make deploy timeout configurable globally/per-app via DEIS_DEPLOY_TIMEOUT, default is 2 minutes\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n65f8714\n (dockerbuilder) - objectstore: set properly builder bucket file environment variable\n\n\n9179923\n (dockerbuilder) - deploy.py: handle chunked output errors\n\n\n02112ed\n (dockerbuilder) - deploy.py: delay so stderr is logged before pod exits\n\n\n93b9c5c\n (logger) - redis: Pass style checks\n\n\n7144c4e\n (logger) - rc: Specify use of redis storage adapter\n\n\n9dae9cc\n (monitor) - telegraf: Create nsq topic at startup\n\n\na9b2275\n (monitor) - telegraf: Update image default image tag in manifests\n\n\n8fd5ada\n (monitor) - grafana: Fix blank dashboards from appearing in dropdown\n\n\n7de06cc\n (monitor) - grafana: Redis cpu graph was not selecting right data\n\n\n0492bf8\n (charts) - database: Fix logic for selecting off-cluster db\n\n\n6fd8407\n (charts) - logger: Do not helm keep rc deis-logger-redis\n\n\nc425baf\n (workflow-cli) - ps: restarting a single pod created by Deployments was not working\n\n\nbcb8b01\n (workflow-cli) - ps: give ps:restart a better understanding between RC and Deployment pods\n\n\n4b2c6d4\n (workflow-cli) - scale: dont call controller if there is no valid scale pattern\n\n\n32177aa\n (workflow-cli) - settings: don't panic on empty settings file (#134)\n\n\n6214d96\n (controller) - scheduler: if one RC fails to scale then ensure all other RCs are at the right level\n\n\n0bcea13\n (controller) - scale: return error message in proper format\n\n\n7d24923\n (controller) - restart: wait for the pods to be scheduled\n\n\n7647569\n (controller) - scheduler: cast port to an int from environment (#857)\n\n\nb27c816\n (controller) - boot: change group ownership of docker socket to deis (#804)\n\n\nd4415c9\n (controller) - api: fail when rolling back to v1 (#762)\n\n\n1ac6b54\n (controller) - release: return port from get_port for non-routable process types\n\n\na0567ea\n (controller) - api: remove command escaping from v1 (#822)\n\n\nf403efb\n (controller) - tests: sort domains in tests to get past occasional ordering problems which cause test failures\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\ndd2b505\n (workflow) - logging,monitoring: Update platform-logging and monitoring docs with recent changes\n\n\ndfb6c8e\n (workflow) - install-workflow: note that k8s 1.2.x is required\n\n\naa40a49\n (workflow) - swift: Add swift as an object storage\n\n\n3e7e865\n (workflow) - deployments: add Deployments documentation\n\n\nee03d28\n (workflow) - apps: document \nDEIS_DEPLOY_TIMEOUT\n and the nuances around that\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n5c289c4\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v42\n\n\nd5cdd0b\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v108\n\n\n85c8292\n (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v91\n\n\n165105f\n (slugbuilder) - buildpacks: update heroku-buildpack-python to v81\n\n\n9bbed87\n (slugbuilder) - buildpacks: update heroku-buildpack-scala to v71",
            "title": "v2.2.0"
        },
        {
            "location": "/changelogs/v2.2.0/#workflow-v210-v220",
            "text": "",
            "title": "Workflow v2.1.0 -&gt; v2.2.0"
        },
        {
            "location": "/changelogs/v2.2.0/#features",
            "text": "b59bbbc  (fluentd) - fluentd: Adding sumologic plugin support  424523c  (logger) - storage: Add redis storage adapter  2da72a5  (logger) - redis: Optimize with more aggresive pipelining  0c82466  (logger) - storage: Make redis the default storage adapter  2f92eca  (monitor) - telegraf, grafana: Start collecting redis metrics  c9718e4  (charts) - logger: Add redis instance for use by logger  7d40069  (charts) - swift: add support for swift storage  d6992e1  (charts) - telegraf: Configure telegraf to start fetching redis metrics  0ae9d90  (workflow-cli) - deis: add  deis shortcuts  command  2862f05  (workflow-cli) - colors: reserve magenta for controller log messages (#132)  8a61e63  (controller) - scheduler: add support for set based requirement filtering via the kubernetes API  47b5b08  (controller) - IDN: add support for international domains  32be50a  (controller) - scheduler: sort env vars and secrets by keys for easier hashing  c3c2494  (controller) - add Deployments support behind a feature flag  edb0383  (controller) - scheduler: feat(scheduler) prepend [namespace] to Scheduler log message for better traceability  84b8080  (controller) - app: make deploy timeout configurable globally/per-app via DEIS_DEPLOY_TIMEOUT, default is 2 minutes",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.2.0/#fixes",
            "text": "65f8714  (dockerbuilder) - objectstore: set properly builder bucket file environment variable  9179923  (dockerbuilder) - deploy.py: handle chunked output errors  02112ed  (dockerbuilder) - deploy.py: delay so stderr is logged before pod exits  93b9c5c  (logger) - redis: Pass style checks  7144c4e  (logger) - rc: Specify use of redis storage adapter  9dae9cc  (monitor) - telegraf: Create nsq topic at startup  a9b2275  (monitor) - telegraf: Update image default image tag in manifests  8fd5ada  (monitor) - grafana: Fix blank dashboards from appearing in dropdown  7de06cc  (monitor) - grafana: Redis cpu graph was not selecting right data  0492bf8  (charts) - database: Fix logic for selecting off-cluster db  6fd8407  (charts) - logger: Do not helm keep rc deis-logger-redis  c425baf  (workflow-cli) - ps: restarting a single pod created by Deployments was not working  bcb8b01  (workflow-cli) - ps: give ps:restart a better understanding between RC and Deployment pods  4b2c6d4  (workflow-cli) - scale: dont call controller if there is no valid scale pattern  32177aa  (workflow-cli) - settings: don't panic on empty settings file (#134)  6214d96  (controller) - scheduler: if one RC fails to scale then ensure all other RCs are at the right level  0bcea13  (controller) - scale: return error message in proper format  7d24923  (controller) - restart: wait for the pods to be scheduled  7647569  (controller) - scheduler: cast port to an int from environment (#857)  b27c816  (controller) - boot: change group ownership of docker socket to deis (#804)  d4415c9  (controller) - api: fail when rolling back to v1 (#762)  1ac6b54  (controller) - release: return port from get_port for non-routable process types  a0567ea  (controller) - api: remove command escaping from v1 (#822)  f403efb  (controller) - tests: sort domains in tests to get past occasional ordering problems which cause test failures",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.2.0/#documentation",
            "text": "dd2b505  (workflow) - logging,monitoring: Update platform-logging and monitoring docs with recent changes  dfb6c8e  (workflow) - install-workflow: note that k8s 1.2.x is required  aa40a49  (workflow) - swift: Add swift as an object storage  3e7e865  (workflow) - deployments: add Deployments documentation  ee03d28  (workflow) - apps: document  DEIS_DEPLOY_TIMEOUT  and the nuances around that",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.2.0/#maintenance",
            "text": "5c289c4  (slugbuilder) - buildpacks: update heroku-buildpack-go to v42  d5cdd0b  (slugbuilder) - buildpacks: update heroku-buildpack-php to v108  85c8292  (slugbuilder) - buildpacks: update heroku-buildpack-nodejs to v91  165105f  (slugbuilder) - buildpacks: update heroku-buildpack-python to v81  9bbed87  (slugbuilder) - buildpacks: update heroku-buildpack-scala to v71",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.1.0/",
            "text": "Workflow v2.0.0 -> v2.1.0\n\u00b6\n\n\nFeatures\n\u00b6\n\n\n\n\n1e6e226\n (router) - *: Update nginx to 1.10.1\n\n\n6314a15\n (registry) - swift: add support for swift storage\n\n\ne494bd9\n (postgres) - wal-e: use the latest wal-e to use aws instance profiles\n\n\n6980348\n (slugbuilder) - swift: Add support for swift storage\n\n\n9e5ce71\n (dockerbuilder) - swift: Add support for swift object storage\n\n\ncb4cc44\n (fluentd) - deis-output: Custom fluentd plugin for sending data to deis components\n\n\nd8f48be\n (workflow-manager) - doctor: add doctor client code and doctor api call\n\n\nb95c60c\n (workflow-manager) - swagger: add doctor api get spec\n\n\n4ab1dc2\n (workflow-manager) - doctor: add curl script to access doctor endpoint\n\n\nf8bfa8d\n (monitor) - telegraf: enable etcd\n\n\nb1aff88\n (monitor) - telegraf: enable prometheus flag\n\n\n5e19462\n (monitor) - grafana,telegraf: Pull metric data from nsq via telegraf\n\n\n5cb3cb4\n (monitor) - grafana: Add deis-health dashboard\n\n\n8cca750\n (workflow-e2e) - registry: PORT is required for private registry\n\n\nf0f5712\n (workflow-e2e) - apps: apps:run will now print on stderr if the command errors (#231)\n\n\n6876296\n (workflow-e2e) - docker: install specified CLI version at runtime (#233)\n\n\nc65d01b\n (workflow-e2e) - *: update to use new errors from CLI (#239)\n\n\na532726\n (workflow-e2e) - git_push_test.go: add git push interrupt test\n\n\n34cbfe2\n (workflow-e2e) - healthchecks: add deis healthchecks e2e tests\n\n\na369718\n (logger) - ringbuffer: Treat empty ringbuffer as error\n\n\n8ed585f\n (charts) - workflow-dev: Add nsq to the workflow chart\n\n\n5b29b4c\n (charts) - database: Add easier off-cluster db config\n\n\n6fdcf08\n (builder) - lock: add timeout to repository lock feature\n\n\n422075b\n (builder) - swift: Add support for swift object storage\n\n\na1c4619\n (controller) - config: validate PORT and HEALTHCHECK_* values for config:set operations\n\n\nccc6b1f\n (controller) - release: require PORT to be set when private registry is set\n\n\n0231c58\n (controller) - django: explicitically define on_delete for ForeignKey fields for 2.0 compat\n\n\n6e136e2\n (controller) - debug: DEIS_DEBUG now affects Django DEBUG as well\n\n\n4c674d0\n (controller) - release: throw 409 when identical release is done sequantially\n\n\naf76733\n (controller) - api: Add healthcheck field to Config\n\n\n7af2197\n (controller) - settings: log all SQL queries if DEBUG==True\n\n\n2b11d1b\n (workflow) - Makefile/Dockerfile: add docker-test recipe\n\n\n7bbb8a1\n (workflow) - api: add v2.1 api documentation. (#357)\n\n\n\n\nFixes\n\u00b6\n\n\n\n\n4338ee1\n (slugrunner) - Dockerfile: download the object storage CLI from GCS\n\n\n8bfc4ee\n (postgres) - contrib: allow 5 or 6 backups\n\n\n419a0e3\n (postgres) - rootfs: enable archive_mode before initial boot\n\n\n923c9f8\n (slugbuilder) - Dockerfile: download the object storage CLI from GCS\n\n\ne7a22e0\n (dockerbuilder) - objectstore: set properly builder bucket file environment variable\n\n\nf724059\n (fluentd) - boot: Move from old type declaration to @type\n\n\n2890575\n (fluentd) - boot: Create better way to generate fluentd conf\n\n\n6ae5779\n (minio) - Dockerfile: download minio from a mirror (#110)\n\n\naf9ef04\n (workflow-manager) - doctor: including API version and /doctor in url (#78)\n\n\n6f71be2\n (workflow-e2e) - registry: overwriting variable typo\n\n\n34f16a5\n (workflow-e2e) - registry: recorganise registry tests order and fix a should(say()) call\n\n\n188f6aa\n (workflow-e2e) - registry: more port setting and fix up error message detection\n\n\nd56ba6d\n (workflow-e2e) - apps_test: escape quotes properly in deis run spec\n\n\nafbe0f7\n (workflow-e2e) - README: update go report card badge url (#232)\n\n\n8cf7025\n (workflow-e2e) - apps/commands: match substring, not entire string\n\n\n7d15489\n (workflow-e2e) - config: unsetting a key that does not exist results in exit 1\n\n\n4ee56b2\n (workflow-e2e) - deps: update SDK to reflect changed spelling of hyphen (#246)\n\n\n64b4512\n (charts) - minio: create minio when using storage type as minio via env vars\n\n\n5cf4df4\n (builder) - sshd: unlock the repository when gitreceive succeeds or fails\n\n\n3a332a4\n (builder) - flag: Use DEIS_DEBUG instead DEBUG environment variable for debug settings\n\n\n43a66c9\n (builder) - README: update go report card badge url (#370)\n\n\n2f253dd\n (builder) - server.go: don't reply false on failed lock\n\n\n844b2ff\n (builder) - pkg: set check timeouts to 10s\n\n\n3e7a785\n (builder) - pkg/sshd/server.go: remove the closer channel (#359)\n\n\na230d05\n (builder) - pkg/gitreceive/config.go: require dependent image names (#377)\n\n\ndf30ee6\n (controller) - api: remove slug tarball info from app log\n\n\n61b6858\n (controller) - scheduler: remove unused health check config option: HEALTCHECK_PORT\n\n\nc6686e9\n (controller) - scheduler: cast ports to int before passing them on to k8s\n\n\n2f1b140\n (controller) - management: handle errors in object loading and application deployments instead of throwing exceptions\n\n\ndc4769a\n (controller) - logs: retry fetching logs from the logger 3 times if the services is unavailable\n\n\nc8c7d80\n (controller) - scale: get the desired number of replicas from the rc\n\n\n3fa6f70\n (controller) - scheduler: make deploy have 0 replicas by default and then use scaling to go up\n\n\n09b9be2\n (controller) - secrets: update env secrets if they already exists (overwrites existing values)\n\n\n5fb1bbb\n (controller) - config: when rolling a new config copy from the latest release instead of latest config for the app\n\n\n0d9988b\n (controller) - serializer: skip None values in config and registry\n\n\n936a40e\n (controller) - exceptions: tests now capture critical only and uncaught exceptions have been reclassified as critical\n\n\n3f980b8\n (controller) - exceptions: log certain APIExceptions tracebacks\n\n\n9f8ac04\n (controller) - config: return a 422 if unsetting a config key that does not exist\n\n\ncae4bf9\n (controller) - models: hypens -> hyphens (#840)\n\n\ne108f14\n (workflow) - registry: explain PORT is required when using private registry information\n\n\ne197163\n (workflow) - component-config: clarify GUNICORN_WORKERS value\n\n\ndc5ee1a\n (workflow) - api: update out of date cert api docs (#339)\n\n\n25006d1\n (workflow) - applications: fixup exec probe output\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\n044f85c\n (slugrunner) - CHANGELOG.md: add entry for v2.0.0\n\n\nbf3e1da\n (router) - README: add codecov.io badge\n\n\n0aa8abb\n (router) - readme: Add anchors to every row in annotations table\n\n\na80425d\n (router) - CHANGELOG.md: add entry for v2.0.0\n\n\n6b60912\n (router) - README: fix Go report card badge\n\n\n4b1f311\n (registry) - CHANGELOG.md: add entry for v2.0.0\n\n\n5fc10d5\n (registry) - README: fix Go report card badge\n\n\n61a4dc9\n (postgres) - CHANGELOG.md: add entry for v2.0.0\n\n\n4efe5f9\n (postgres) - README.md: Fix the default value of IMAGE_PREFIX\n\n\n920dbf6\n (slugbuilder) - CHANGELOG.md: add entry for v2.0.0\n\n\n48d4ecb\n (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0\n\n\n7f046cc\n (fluentd) - CHANGELOG.md: add entry for v2.0.0\n\n\n31e054d\n (minio) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n958ccd7\n (minio) - CHANGELOG.md: add entry for v2.0.0\n\n\nebbbc3a\n (workflow-manager) - CHANGELOG.md: add entry for v2.0.0\n\n\n04f65c6\n (monitor) - CHANGELOG.md: add entry for v2.0.0\n\n\n94bf4c1\n (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0\n\n\n778ab68\n (logger) - README: add codecov.io badge\n\n\nd3fc751\n (logger) - CHANGELOG.md: add entry for v2.0.0\n\n\n178bc7c\n (logger) - README: fix Go report card badge\n\n\n6367466\n (charts) - CHANGELOG.md: add entry for v2.0.0\n\n\ne038851\n (builder) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n58a8786\n (builder) - pkg: update help URL to https://deis.com/\n\n\n0df2ba3\n (builder) - CHANGELOG.md: add entry for v2.0.0\n\n\nc3945f2\n (builder) - README: add codecov.io badge\n\n\nb001515\n (controller) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\nc7fb984\n (controller) - CHANGELOG.md: add entry for v2.0.0\n\n\n9063a96\n (workflow) - installing-workflow: fix missing watch flag\n\n\ncf9693f\n (workflow) - release-checklist.md: remove bintray references\n\n\ncda073c\n (workflow) - CHANGELOG.md: add entry for v2.0.0\n\n\n5c753e5\n (workflow) - styles: update the theme to match deis.com\n\n\na77d967\n (workflow) - styles: remove sass from makefile\n\n\ne37b2dc\n (workflow) - styles: tidy up JS, better affix the sidebar menu\n\n\n919f22c\n (workflow) - styles: fix urls, style for better mobile layout\n\n\ne868009\n (workflow) - styles: remove bower_components\n\n\n2e1c6a9\n (workflow) - styles: mobile off-canvas menu\n\n\n908f715\n (workflow) - styles: color changes to open sidebar sections\n\n\n82000d1\n (workflow) - src/roadmap/release-checklist.md: update Step 2.1\n\n\n7cbd1de\n (workflow) - src/roadmap/release-checklist.md: update if major release\n\n\ndad9598\n (workflow) - submitting-a-pr: add \"hotfix revert\" exception to LGTM rules\n\n\na0ff462\n (workflow) - release-checklist: Improve instructions pertaining to previous release\n\n\ncdbc575\n (workflow) - README.md: fix quick start guide URL\n\n\n9e843cd\n (workflow) - s3: add instruction for using IAM creds\n\n\nb451c66\n (workflow) - release_checklist.md: return to using immutable tags\n\n\n2286765\n (workflow) - submitting-a-pull-request.md: add info on testing paired commits\n\n\n467a21d\n (workflow) - platform-logging.md: Need \"--namespace=deis\" when deleting pods.\n\n\n606bdd8\n (workflow) - router: Remove invalid labels from example whitelists\n\n\n87e0b58\n (workflow) - upgrade-workflow.md: Fix a typo.\n\n\naa7144c\n (workflow) - platform-ssl.md: correct example manifest\n\n\n9d5d1d5\n (workflow) - database: Document off-cluster db configuration\n\n\n0cb76fc\n (workflow) - applications: add documentation for healthchecks\n\n\n7ee764f\n (workflow) - release-checklist.md: modify docker tag/push instructions to use new deisrel command (#355)\n\n\neda6479\n (workflow) - v2.1.0: Updates docs for latest release\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n0526f01\n (slugrunner) - manifests: remove unused/deprecated manifests dir\n\n\n3b3aaad\n (slugrunner) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\n7c23489\n (router) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\nf0bb535\n (slugbuilder) - buildpacks: update heroku-buildpack-go to v41\n\n\n4aeb7ff\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v105\n\n\n70b88ef\n (slugbuilder) - manifests: remove unused/deprecated manifests dir\n\n\ncad6225\n (slugbuilder) - buildpacks: update heroku-buildpack-php to v107\n\n\neb47460\n (dockerbuilder) - manifests: remove unused/deprecated manifests dir\n\n\n905cde5\n (fluentd) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\n52c97ad\n (minio) - README.md: remove beta status\n\n\n6aac8ba\n (minio) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\n3cbf260\n (monitor) - grafana: Update nsq dashboard to add message per second graph\n\n\n8f52433\n (monitor) - grafana: Remove stray alias in a kubernetes health graph\n\n\n5ff77c7\n (monitor) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\n7d6a033\n (workflow-e2e) - Makefile: remove deprecated '-f' flag\n\n\n7123b6a\n (logger) - transport: Refactor to use pluggable Aggregator component...\n\n\nba819b0\n (logger) - Dockerfile: Remove WORKFLOW_RELEASE env var\n\n\n92abf85\n (charts) - router-dev/Chart.yaml: bump version to v2.0.0\n\n\n46289d0\n (charts) - workflow/router-dev/Chart.yaml: prepend description with chart name\n\n\n64026dc\n (charts) - workflow-dev: Update image name in nsqd-rc to be nsq.\n\n\nfcd4fce\n (charts) - logger/fluentd: Update logging stack to reflect nsq usage\n\n\n473ea02\n (charts) - workflow-dev: Update telegraf env vars\n\n\n010de23\n (charts) - workflow-dev: remove stdout metrics config from fluentd\n\n\n3274b8c\n (charts) - logger: Stop logging via UDP\n\n\nfc70265\n (charts) - workflow-v2.1.0: releasing workflow-v2.1.0(-e2e) and router-v2.1.0\n\n\nf6580ee\n (builder) - various: remove beta status\n\n\n03a8ac5\n (builder) - Dockerfile: bump git to v2.8.4\n\n\nbf35966\n (controller) - requirements: update codecov to 2.0.5\n\n\n59a8d23\n (controller) - Dockerfile: update to base:0.3.0 image to get a slimmer image\n\n\n3a6ee54\n (controller) - README: remove references to beta in README\n\n\n7a88725\n (controller) - requirements: update to Django 1.9.7\n\n\n04049b4\n (controller) - version: update platform version to 2.0.0\n\n\ndb2e182\n (controller) - deis: bump version to 2.1.0-dev\n\n\n13cffb6\n (controller) - requirements: update ndg-httpsclient to 0.4.1\n\n\neda8bea\n (controller) - rootfs: bump platform version to 2.1.0 (#841)\n\n\n214b0a9\n (controller) - api: bump api version to v2.1.0\n\n\n595d377\n (workflow) - health: note that kubernetes does not support query params in the health check path\n\n\n88e240a\n (workflow) - docs: update version to v2.0.0\n\n\n20f2b5a\n (workflow) - ga: use deis.com GA account\n\n\n10b1146\n (workflow) - docs: ignore bower_components for doc styles",
            "title": "v2.1.0"
        },
        {
            "location": "/changelogs/v2.1.0/#workflow-v200-v210",
            "text": "",
            "title": "Workflow v2.0.0 -&gt; v2.1.0"
        },
        {
            "location": "/changelogs/v2.1.0/#features",
            "text": "1e6e226  (router) - *: Update nginx to 1.10.1  6314a15  (registry) - swift: add support for swift storage  e494bd9  (postgres) - wal-e: use the latest wal-e to use aws instance profiles  6980348  (slugbuilder) - swift: Add support for swift storage  9e5ce71  (dockerbuilder) - swift: Add support for swift object storage  cb4cc44  (fluentd) - deis-output: Custom fluentd plugin for sending data to deis components  d8f48be  (workflow-manager) - doctor: add doctor client code and doctor api call  b95c60c  (workflow-manager) - swagger: add doctor api get spec  4ab1dc2  (workflow-manager) - doctor: add curl script to access doctor endpoint  f8bfa8d  (monitor) - telegraf: enable etcd  b1aff88  (monitor) - telegraf: enable prometheus flag  5e19462  (monitor) - grafana,telegraf: Pull metric data from nsq via telegraf  5cb3cb4  (monitor) - grafana: Add deis-health dashboard  8cca750  (workflow-e2e) - registry: PORT is required for private registry  f0f5712  (workflow-e2e) - apps: apps:run will now print on stderr if the command errors (#231)  6876296  (workflow-e2e) - docker: install specified CLI version at runtime (#233)  c65d01b  (workflow-e2e) - *: update to use new errors from CLI (#239)  a532726  (workflow-e2e) - git_push_test.go: add git push interrupt test  34cbfe2  (workflow-e2e) - healthchecks: add deis healthchecks e2e tests  a369718  (logger) - ringbuffer: Treat empty ringbuffer as error  8ed585f  (charts) - workflow-dev: Add nsq to the workflow chart  5b29b4c  (charts) - database: Add easier off-cluster db config  6fdcf08  (builder) - lock: add timeout to repository lock feature  422075b  (builder) - swift: Add support for swift object storage  a1c4619  (controller) - config: validate PORT and HEALTHCHECK_* values for config:set operations  ccc6b1f  (controller) - release: require PORT to be set when private registry is set  0231c58  (controller) - django: explicitically define on_delete for ForeignKey fields for 2.0 compat  6e136e2  (controller) - debug: DEIS_DEBUG now affects Django DEBUG as well  4c674d0  (controller) - release: throw 409 when identical release is done sequantially  af76733  (controller) - api: Add healthcheck field to Config  7af2197  (controller) - settings: log all SQL queries if DEBUG==True  2b11d1b  (workflow) - Makefile/Dockerfile: add docker-test recipe  7bbb8a1  (workflow) - api: add v2.1 api documentation. (#357)",
            "title": "Features"
        },
        {
            "location": "/changelogs/v2.1.0/#fixes",
            "text": "4338ee1  (slugrunner) - Dockerfile: download the object storage CLI from GCS  8bfc4ee  (postgres) - contrib: allow 5 or 6 backups  419a0e3  (postgres) - rootfs: enable archive_mode before initial boot  923c9f8  (slugbuilder) - Dockerfile: download the object storage CLI from GCS  e7a22e0  (dockerbuilder) - objectstore: set properly builder bucket file environment variable  f724059  (fluentd) - boot: Move from old type declaration to @type  2890575  (fluentd) - boot: Create better way to generate fluentd conf  6ae5779  (minio) - Dockerfile: download minio from a mirror (#110)  af9ef04  (workflow-manager) - doctor: including API version and /doctor in url (#78)  6f71be2  (workflow-e2e) - registry: overwriting variable typo  34f16a5  (workflow-e2e) - registry: recorganise registry tests order and fix a should(say()) call  188f6aa  (workflow-e2e) - registry: more port setting and fix up error message detection  d56ba6d  (workflow-e2e) - apps_test: escape quotes properly in deis run spec  afbe0f7  (workflow-e2e) - README: update go report card badge url (#232)  8cf7025  (workflow-e2e) - apps/commands: match substring, not entire string  7d15489  (workflow-e2e) - config: unsetting a key that does not exist results in exit 1  4ee56b2  (workflow-e2e) - deps: update SDK to reflect changed spelling of hyphen (#246)  64b4512  (charts) - minio: create minio when using storage type as minio via env vars  5cf4df4  (builder) - sshd: unlock the repository when gitreceive succeeds or fails  3a332a4  (builder) - flag: Use DEIS_DEBUG instead DEBUG environment variable for debug settings  43a66c9  (builder) - README: update go report card badge url (#370)  2f253dd  (builder) - server.go: don't reply false on failed lock  844b2ff  (builder) - pkg: set check timeouts to 10s  3e7a785  (builder) - pkg/sshd/server.go: remove the closer channel (#359)  a230d05  (builder) - pkg/gitreceive/config.go: require dependent image names (#377)  df30ee6  (controller) - api: remove slug tarball info from app log  61b6858  (controller) - scheduler: remove unused health check config option: HEALTCHECK_PORT  c6686e9  (controller) - scheduler: cast ports to int before passing them on to k8s  2f1b140  (controller) - management: handle errors in object loading and application deployments instead of throwing exceptions  dc4769a  (controller) - logs: retry fetching logs from the logger 3 times if the services is unavailable  c8c7d80  (controller) - scale: get the desired number of replicas from the rc  3fa6f70  (controller) - scheduler: make deploy have 0 replicas by default and then use scaling to go up  09b9be2  (controller) - secrets: update env secrets if they already exists (overwrites existing values)  5fb1bbb  (controller) - config: when rolling a new config copy from the latest release instead of latest config for the app  0d9988b  (controller) - serializer: skip None values in config and registry  936a40e  (controller) - exceptions: tests now capture critical only and uncaught exceptions have been reclassified as critical  3f980b8  (controller) - exceptions: log certain APIExceptions tracebacks  9f8ac04  (controller) - config: return a 422 if unsetting a config key that does not exist  cae4bf9  (controller) - models: hypens -> hyphens (#840)  e108f14  (workflow) - registry: explain PORT is required when using private registry information  e197163  (workflow) - component-config: clarify GUNICORN_WORKERS value  dc5ee1a  (workflow) - api: update out of date cert api docs (#339)  25006d1  (workflow) - applications: fixup exec probe output",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.1.0/#documentation",
            "text": "044f85c  (slugrunner) - CHANGELOG.md: add entry for v2.0.0  bf3e1da  (router) - README: add codecov.io badge  0aa8abb  (router) - readme: Add anchors to every row in annotations table  a80425d  (router) - CHANGELOG.md: add entry for v2.0.0  6b60912  (router) - README: fix Go report card badge  4b1f311  (registry) - CHANGELOG.md: add entry for v2.0.0  5fc10d5  (registry) - README: fix Go report card badge  61a4dc9  (postgres) - CHANGELOG.md: add entry for v2.0.0  4efe5f9  (postgres) - README.md: Fix the default value of IMAGE_PREFIX  920dbf6  (slugbuilder) - CHANGELOG.md: add entry for v2.0.0  48d4ecb  (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0  7f046cc  (fluentd) - CHANGELOG.md: add entry for v2.0.0  31e054d  (minio) - CHANGELOG.md: add entry for v2.0.0-rc2  958ccd7  (minio) - CHANGELOG.md: add entry for v2.0.0  ebbbc3a  (workflow-manager) - CHANGELOG.md: add entry for v2.0.0  04f65c6  (monitor) - CHANGELOG.md: add entry for v2.0.0  94bf4c1  (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0  778ab68  (logger) - README: add codecov.io badge  d3fc751  (logger) - CHANGELOG.md: add entry for v2.0.0  178bc7c  (logger) - README: fix Go report card badge  6367466  (charts) - CHANGELOG.md: add entry for v2.0.0  e038851  (builder) - CHANGELOG.md: add entry for v2.0.0-rc2  58a8786  (builder) - pkg: update help URL to https://deis.com/  0df2ba3  (builder) - CHANGELOG.md: add entry for v2.0.0  c3945f2  (builder) - README: add codecov.io badge  b001515  (controller) - CHANGELOG.md: add entry for v2.0.0-rc2  c7fb984  (controller) - CHANGELOG.md: add entry for v2.0.0  9063a96  (workflow) - installing-workflow: fix missing watch flag  cf9693f  (workflow) - release-checklist.md: remove bintray references  cda073c  (workflow) - CHANGELOG.md: add entry for v2.0.0  5c753e5  (workflow) - styles: update the theme to match deis.com  a77d967  (workflow) - styles: remove sass from makefile  e37b2dc  (workflow) - styles: tidy up JS, better affix the sidebar menu  919f22c  (workflow) - styles: fix urls, style for better mobile layout  e868009  (workflow) - styles: remove bower_components  2e1c6a9  (workflow) - styles: mobile off-canvas menu  908f715  (workflow) - styles: color changes to open sidebar sections  82000d1  (workflow) - src/roadmap/release-checklist.md: update Step 2.1  7cbd1de  (workflow) - src/roadmap/release-checklist.md: update if major release  dad9598  (workflow) - submitting-a-pr: add \"hotfix revert\" exception to LGTM rules  a0ff462  (workflow) - release-checklist: Improve instructions pertaining to previous release  cdbc575  (workflow) - README.md: fix quick start guide URL  9e843cd  (workflow) - s3: add instruction for using IAM creds  b451c66  (workflow) - release_checklist.md: return to using immutable tags  2286765  (workflow) - submitting-a-pull-request.md: add info on testing paired commits  467a21d  (workflow) - platform-logging.md: Need \"--namespace=deis\" when deleting pods.  606bdd8  (workflow) - router: Remove invalid labels from example whitelists  87e0b58  (workflow) - upgrade-workflow.md: Fix a typo.  aa7144c  (workflow) - platform-ssl.md: correct example manifest  9d5d1d5  (workflow) - database: Document off-cluster db configuration  0cb76fc  (workflow) - applications: add documentation for healthchecks  7ee764f  (workflow) - release-checklist.md: modify docker tag/push instructions to use new deisrel command (#355)  eda6479  (workflow) - v2.1.0: Updates docs for latest release",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.1.0/#maintenance",
            "text": "0526f01  (slugrunner) - manifests: remove unused/deprecated manifests dir  3b3aaad  (slugrunner) - Dockerfile: Remove WORKFLOW_RELEASE env var  7c23489  (router) - Dockerfile: Remove WORKFLOW_RELEASE env var  f0bb535  (slugbuilder) - buildpacks: update heroku-buildpack-go to v41  4aeb7ff  (slugbuilder) - buildpacks: update heroku-buildpack-php to v105  70b88ef  (slugbuilder) - manifests: remove unused/deprecated manifests dir  cad6225  (slugbuilder) - buildpacks: update heroku-buildpack-php to v107  eb47460  (dockerbuilder) - manifests: remove unused/deprecated manifests dir  905cde5  (fluentd) - Dockerfile: Remove WORKFLOW_RELEASE env var  52c97ad  (minio) - README.md: remove beta status  6aac8ba  (minio) - Dockerfile: Remove WORKFLOW_RELEASE env var  3cbf260  (monitor) - grafana: Update nsq dashboard to add message per second graph  8f52433  (monitor) - grafana: Remove stray alias in a kubernetes health graph  5ff77c7  (monitor) - Dockerfile: Remove WORKFLOW_RELEASE env var  7d6a033  (workflow-e2e) - Makefile: remove deprecated '-f' flag  7123b6a  (logger) - transport: Refactor to use pluggable Aggregator component...  ba819b0  (logger) - Dockerfile: Remove WORKFLOW_RELEASE env var  92abf85  (charts) - router-dev/Chart.yaml: bump version to v2.0.0  46289d0  (charts) - workflow/router-dev/Chart.yaml: prepend description with chart name  64026dc  (charts) - workflow-dev: Update image name in nsqd-rc to be nsq.  fcd4fce  (charts) - logger/fluentd: Update logging stack to reflect nsq usage  473ea02  (charts) - workflow-dev: Update telegraf env vars  010de23  (charts) - workflow-dev: remove stdout metrics config from fluentd  3274b8c  (charts) - logger: Stop logging via UDP  fc70265  (charts) - workflow-v2.1.0: releasing workflow-v2.1.0(-e2e) and router-v2.1.0  f6580ee  (builder) - various: remove beta status  03a8ac5  (builder) - Dockerfile: bump git to v2.8.4  bf35966  (controller) - requirements: update codecov to 2.0.5  59a8d23  (controller) - Dockerfile: update to base:0.3.0 image to get a slimmer image  3a6ee54  (controller) - README: remove references to beta in README  7a88725  (controller) - requirements: update to Django 1.9.7  04049b4  (controller) - version: update platform version to 2.0.0  db2e182  (controller) - deis: bump version to 2.1.0-dev  13cffb6  (controller) - requirements: update ndg-httpsclient to 0.4.1  eda8bea  (controller) - rootfs: bump platform version to 2.1.0 (#841)  214b0a9  (controller) - api: bump api version to v2.1.0  595d377  (workflow) - health: note that kubernetes does not support query params in the health check path  88e240a  (workflow) - docs: update version to v2.0.0  20f2b5a  (workflow) - ga: use deis.com GA account  10b1146  (workflow) - docs: ignore bower_components for doc styles",
            "title": "Maintenance"
        },
        {
            "location": "/changelogs/v2.0.0/",
            "text": "Workflow v2.0.0-rc2 -> v2.0.0\n\u00b6\n\n\nFixes\n\u00b6\n\n\n\n\ndb4cd9d\n (postgres) - rootfs: always perform an initial backup\n\n\n7c89a3c\n (postgres) - rootfs: enable archive_mode before initial boot\n\n\n5910902\n (controller) - scheduler: cast ports to int before passing them on to k8s\n\n\n20ea192\n (workflow) - health: remove documentation on unused HEALTHCHECK_PORT\n\n\ncfdd9ab\n (charts) - deis-dev/tpl/deis-builder-rc.yaml: make the objectstore-creds secret read-only in builder\n\n\n\n\nDocumentation\n\u00b6\n\n\n\n\nafc9d2a\n (registry) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\na807d2a\n (registry) - CHANGELOG.md: add entry for v2.0.0\n\n\n55cf8a1\n (workflow-manager) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\nf110d04\n (workflow-manager) - CHANGELOG.md: add entry for v2.0.0\n\n\na06057d\n (postgres) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n77e2991\n (postgres) - CHANGELOG.md: add entry for v2.0.0\n\n\n0393a7a\n (workflow-e2e) - README.md: remove beta status\n\n\n9214eee\n (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\na93420f\n (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0\n\n\nd39fcc1\n (stdout-metrics) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n305c25c\n (stdout-metrics) - CHANGELOG.md: add entry for v2.0.0\n\n\n1993192\n (slugrunner) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n8df35f9\n (slugrunner) - CHANGELOG.md: add entry for v2.0.0\n\n\n1bbaf04\n (slugbuilder) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n71f7e6c\n (slugbuilder) - CHANGELOG.md: add entry for v2.0.0\n\n\neafb142\n (monitor) - README: Update readme to remove beta status\n\n\n6b979ed\n (monitor) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n42f91b2\n (monitor) - README: Add architecture diagram\n\n\n477be8b\n (monitor) - CHANGELOG.md: add entry for v2.0.0\n\n\n5afdca3\n (minio) - CHANGELOG.md: add entry for v2.0.0\n\n\nbce6c31\n (builder) - pkg: update help URL to https://deis.com/\n\n\nea6b17a\n (builder) - CHANGELOG.md: add entry for v2.0.0\n\n\nf37322b\n (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n66a176b\n (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0\n\n\ne945cb5\n (fluentd) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n06f6fed\n (fluentd) - CHANGELOG.md: add entry for v2.0.0\n\n\nf7188cd\n (logger) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n9c3019c\n (logger) - CHANGELOG.md: add entry for v2.0.0\n\n\n07eb015\n (router) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n7e0eb9d\n (router) - CHANGELOG.md: add entry for v2.0.0\n\n\n2d08fb5\n (controller) - CHANGELOG.md: add entry for v2.0.0\n\n\n0babcff\n (workflow) - CHANGELOG.md: add entry for v2.0.0\n\n\n492d25e\n (charts) - CHANGELOG.md: add entry for v2.0.0-rc2\n\n\n3ee1184\n (charts) - CHANGELOG.md: add entry for v2.0.0\n\n\n\n\nMaintenance\n\u00b6\n\n\n\n\n9cd3013\n (registry) - README.md: remove beta status\n\n\ne798cbd\n (workflow-manager) - README.md: remove beta status\n\n\n779cef7\n (postgres) - README.md: remove beta status\n\n\n382cba2\n (workflow-e2e) - Dockerfile: update deis CLI to a17f89a\n\n\nd059474\n (slugbuilder) - various: remove beta status\n\n\nc3afeb8\n (minio) - README.md: remove beta status\n\n\n0112844\n (builder) - various: remove beta status\n\n\n91e869b\n (dockerbuilder) - various: remove beta status\n\n\nbf0cac4\n (dockerbuilder) - various: remove beta status\n\n\ne618f9d\n (router) - README.md: remove beta status\n\n\n816a36b\n (controller) - requirements: update codecov to 2.0.5\n\n\ndb57962\n (controller) - README: remove references to beta in README\n\n\n4bb866f\n (controller) - version: update platform version to 2.0.0\n\n\n5f2c4d9\n (workflow) - various: remove beta status\n\n\n095035d\n (workflow) - docs: update version to v2.0.0\n\n\n15d5ce7\n (charts) - workflow-rc2: releasing workflow-rc2(-e2e) and router-rc2\n\n\n4e06347\n (charts) - workflow-rc2: releasing workflow-rc2(-e2e) and router-rc2- final images\n\n\n7933ec4\n (charts) - various: remove beta status\n\n\n0301216\n (charts) - workflow-v2.0.0: releasing workflow-v2.0.0",
            "title": "v2.0.0"
        },
        {
            "location": "/changelogs/v2.0.0/#workflow-v200-rc2-v200",
            "text": "",
            "title": "Workflow v2.0.0-rc2 -&gt; v2.0.0"
        },
        {
            "location": "/changelogs/v2.0.0/#fixes",
            "text": "db4cd9d  (postgres) - rootfs: always perform an initial backup  7c89a3c  (postgres) - rootfs: enable archive_mode before initial boot  5910902  (controller) - scheduler: cast ports to int before passing them on to k8s  20ea192  (workflow) - health: remove documentation on unused HEALTHCHECK_PORT  cfdd9ab  (charts) - deis-dev/tpl/deis-builder-rc.yaml: make the objectstore-creds secret read-only in builder",
            "title": "Fixes"
        },
        {
            "location": "/changelogs/v2.0.0/#documentation",
            "text": "afc9d2a  (registry) - CHANGELOG.md: add entry for v2.0.0-rc2  a807d2a  (registry) - CHANGELOG.md: add entry for v2.0.0  55cf8a1  (workflow-manager) - CHANGELOG.md: add entry for v2.0.0-rc2  f110d04  (workflow-manager) - CHANGELOG.md: add entry for v2.0.0  a06057d  (postgres) - CHANGELOG.md: add entry for v2.0.0-rc2  77e2991  (postgres) - CHANGELOG.md: add entry for v2.0.0  0393a7a  (workflow-e2e) - README.md: remove beta status  9214eee  (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0-rc2  a93420f  (workflow-e2e) - CHANGELOG.md: add entry for v2.0.0  d39fcc1  (stdout-metrics) - CHANGELOG.md: add entry for v2.0.0-rc2  305c25c  (stdout-metrics) - CHANGELOG.md: add entry for v2.0.0  1993192  (slugrunner) - CHANGELOG.md: add entry for v2.0.0-rc2  8df35f9  (slugrunner) - CHANGELOG.md: add entry for v2.0.0  1bbaf04  (slugbuilder) - CHANGELOG.md: add entry for v2.0.0-rc2  71f7e6c  (slugbuilder) - CHANGELOG.md: add entry for v2.0.0  eafb142  (monitor) - README: Update readme to remove beta status  6b979ed  (monitor) - CHANGELOG.md: add entry for v2.0.0-rc2  42f91b2  (monitor) - README: Add architecture diagram  477be8b  (monitor) - CHANGELOG.md: add entry for v2.0.0  5afdca3  (minio) - CHANGELOG.md: add entry for v2.0.0  bce6c31  (builder) - pkg: update help URL to https://deis.com/  ea6b17a  (builder) - CHANGELOG.md: add entry for v2.0.0  f37322b  (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0-rc2  66a176b  (dockerbuilder) - CHANGELOG.md: add entry for v2.0.0  e945cb5  (fluentd) - CHANGELOG.md: add entry for v2.0.0-rc2  06f6fed  (fluentd) - CHANGELOG.md: add entry for v2.0.0  f7188cd  (logger) - CHANGELOG.md: add entry for v2.0.0-rc2  9c3019c  (logger) - CHANGELOG.md: add entry for v2.0.0  07eb015  (router) - CHANGELOG.md: add entry for v2.0.0-rc2  7e0eb9d  (router) - CHANGELOG.md: add entry for v2.0.0  2d08fb5  (controller) - CHANGELOG.md: add entry for v2.0.0  0babcff  (workflow) - CHANGELOG.md: add entry for v2.0.0  492d25e  (charts) - CHANGELOG.md: add entry for v2.0.0-rc2  3ee1184  (charts) - CHANGELOG.md: add entry for v2.0.0",
            "title": "Documentation"
        },
        {
            "location": "/changelogs/v2.0.0/#maintenance",
            "text": "9cd3013  (registry) - README.md: remove beta status  e798cbd  (workflow-manager) - README.md: remove beta status  779cef7  (postgres) - README.md: remove beta status  382cba2  (workflow-e2e) - Dockerfile: update deis CLI to a17f89a  d059474  (slugbuilder) - various: remove beta status  c3afeb8  (minio) - README.md: remove beta status  0112844  (builder) - various: remove beta status  91e869b  (dockerbuilder) - various: remove beta status  bf0cac4  (dockerbuilder) - various: remove beta status  e618f9d  (router) - README.md: remove beta status  816a36b  (controller) - requirements: update codecov to 2.0.5  db57962  (controller) - README: remove references to beta in README  4bb866f  (controller) - version: update platform version to 2.0.0  5f2c4d9  (workflow) - various: remove beta status  095035d  (workflow) - docs: update version to v2.0.0  15d5ce7  (charts) - workflow-rc2: releasing workflow-rc2(-e2e) and router-rc2  4e06347  (charts) - workflow-rc2: releasing workflow-rc2(-e2e) and router-rc2- final images  7933ec4  (charts) - various: remove beta status  0301216  (charts) - workflow-v2.0.0: releasing workflow-v2.0.0",
            "title": "Maintenance"
        }
    ]
}